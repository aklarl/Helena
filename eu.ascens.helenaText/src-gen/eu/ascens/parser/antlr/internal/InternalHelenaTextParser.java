package eu.ascens.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eu.ascens.services.HelenaTextGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalHelenaTextParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "'{'", "'}'", "'componentType'", "'attr'", "';'", "'assoc'", "'op'", "'roleType'", "'over'", "','", "'roleattr'", "'rolemsg'", "'ensembleStructure'", "'<'", "'min'", "'='", "'max'", "'cap'", "'>'", "'*'", "'roleBehavior'", "'process'", "'quit'", "'.'", "'('", "'+'", "')'", "'if'", "'else'", "'<-'", "'get'", "'create'", "'!'", "'?'", "'owner.'", "'||'", "'&&'", "'plays'", "'=='", "'!='", "'>='", "'owner'", "'self'", "'-'", "'self.'", "'+='", "'-='", "'*='", "'/='", "'%='", "'instanceof'", "'->'", "'..<'", "'..'", "'=>'", "'<>'", "'?:'", "'**'", "'/'", "'%'", "'as'", "'++'", "'--'", "'::'", "'?.'", "'#'", "'['", "']'", "'|'", "'switch'", "':'", "'default'", "'case'", "'for'", "'while'", "'do'", "'var'", "'val'", "'extends'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'&'", "'in'", "'out'", "'in/out'"
    };
    public static final int RULE_HEX=7;
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=5;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalHelenaTextParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalHelenaTextParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalHelenaTextParser.tokenNames; }
    public String getGrammarFileName() { return "../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g"; }



     	private HelenaTextGrammarAccess grammarAccess;
     	
        public InternalHelenaTextParser(TokenStream input, HelenaTextGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Model";	
       	}
       	
       	@Override
       	protected HelenaTextGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleModel"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:68:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:69:2: (iv_ruleModel= ruleModel EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:70:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_ruleModel_in_entryRuleModel75);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleModel85); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:77:1: ruleModel returns [EObject current=null] : ( (lv_headPkg_0_0= rulePackageDeclaration ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_headPkg_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:80:28: ( ( (lv_headPkg_0_0= rulePackageDeclaration ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:81:1: ( (lv_headPkg_0_0= rulePackageDeclaration ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:81:1: ( (lv_headPkg_0_0= rulePackageDeclaration ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:82:1: (lv_headPkg_0_0= rulePackageDeclaration )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:82:1: (lv_headPkg_0_0= rulePackageDeclaration )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:83:3: lv_headPkg_0_0= rulePackageDeclaration
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getModelAccess().getHeadPkgPackageDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_rulePackageDeclaration_in_ruleModel130);
            lv_headPkg_0_0=rulePackageDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getModelRule());
              	        }
                     		set(
                     			current, 
                     			"headPkg",
                      		lv_headPkg_0_0, 
                      		"PackageDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRulePackageDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:107:1: entryRulePackageDeclaration returns [EObject current=null] : iv_rulePackageDeclaration= rulePackageDeclaration EOF ;
    public final EObject entryRulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageDeclaration = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:108:2: (iv_rulePackageDeclaration= rulePackageDeclaration EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:109:2: iv_rulePackageDeclaration= rulePackageDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageDeclarationRule()); 
            }
            pushFollow(FOLLOW_rulePackageDeclaration_in_entryRulePackageDeclaration165);
            iv_rulePackageDeclaration=rulePackageDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePackageDeclaration175); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageDeclaration"


    // $ANTLR start "rulePackageDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:116:1: rulePackageDeclaration returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?) ) ) ;
    public final EObject rulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_compTypes_4_0 = null;

        EObject lv_roleTypes_5_0 = null;

        EObject lv_ensStructs_6_0 = null;

        EObject lv_roleBehaviors_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:119:28: ( ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:120:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:120:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:122:1: ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:122:1: ( ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:123:2: ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup());
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:126:2: ( ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?)
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:127:3: ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+ {...}?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:127:3: ( ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) ) | ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) ) )+
            int cnt5=0;
            loop5:
            do {
                int alt5=5;
                int LA5_0 = input.LA(1);

                if ( LA5_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 0) ) {
                    alt5=1;
                }
                else if ( LA5_0 ==21 && getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 1) ) {
                    alt5=2;
                }
                else if ( LA5_0 ==26 && getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 2) ) {
                    alt5=3;
                }
                else if ( (LA5_0==15||LA5_0==34) && getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 3) ) {
                    alt5=4;
                }


                switch (alt5) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:129:4: ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:129:4: ({...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:130:5: {...}? => ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePackageDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 0)");
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:130:113: ( ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:131:6: ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 0);
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:134:6: ({...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:134:7: {...}? => (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePackageDeclaration", "true");
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:134:16: (otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )* )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:134:18: otherlv_1= 'package' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' ( (lv_compTypes_4_0= ruleComponentType ) )*
            	    {
            	    otherlv_1=(Token)match(input,13,FOLLOW_13_in_rulePackageDeclaration257); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0_0());
            	          
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:138:1: ( (lv_name_2_0= ruleQualifiedName ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:139:1: (lv_name_2_0= ruleQualifiedName )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:139:1: (lv_name_2_0= ruleQualifiedName )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:140:3: lv_name_2_0= ruleQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleQualifiedName_in_rulePackageDeclaration278);
            	    lv_name_2_0=ruleQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"name",
            	              		lv_name_2_0, 
            	              		"QualifiedName");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,14,FOLLOW_14_in_rulePackageDeclaration290); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_0_2());
            	          
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:160:1: ( (lv_compTypes_4_0= ruleComponentType ) )*
            	    loop1:
            	    do {
            	        int alt1=2;
            	        int LA1_0 = input.LA(1);

            	        if ( (LA1_0==16) ) {
            	            alt1=1;
            	        }


            	        switch (alt1) {
            	    	case 1 :
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:161:1: (lv_compTypes_4_0= ruleComponentType )
            	    	    {
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:161:1: (lv_compTypes_4_0= ruleComponentType )
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:162:3: lv_compTypes_4_0= ruleComponentType
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getCompTypesComponentTypeParserRuleCall_0_3_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleComponentType_in_rulePackageDeclaration311);
            	    	    lv_compTypes_4_0=ruleComponentType();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"compTypes",
            	    	              		lv_compTypes_4_0, 
            	    	              		"ComponentType");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop1;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:185:4: ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:185:4: ({...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:186:5: {...}? => ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePackageDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 1)");
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:186:113: ( ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+ )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:187:6: ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 1);
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:190:6: ({...}? => ( (lv_roleTypes_5_0= ruleRoleType ) ) )+
            	    int cnt2=0;
            	    loop2:
            	    do {
            	        int alt2=2;
            	        int LA2_0 = input.LA(1);

            	        if ( (LA2_0==21) ) {
            	            int LA2_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt2=1;
            	            }


            	        }


            	        switch (alt2) {
            	    	case 1 :
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:190:7: {...}? => ( (lv_roleTypes_5_0= ruleRoleType ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "rulePackageDeclaration", "true");
            	    	    }
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:190:16: ( (lv_roleTypes_5_0= ruleRoleType ) )
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:191:1: (lv_roleTypes_5_0= ruleRoleType )
            	    	    {
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:191:1: (lv_roleTypes_5_0= ruleRoleType )
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:192:3: lv_roleTypes_5_0= ruleRoleType
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getRoleTypesRoleTypeParserRuleCall_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRoleType_in_rulePackageDeclaration388);
            	    	    lv_roleTypes_5_0=ruleRoleType();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"roleTypes",
            	    	              		lv_roleTypes_5_0, 
            	    	              		"RoleType");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt2 >= 1 ) break loop2;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(2, input);
            	                throw eee;
            	        }
            	        cnt2++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:215:4: ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:215:4: ({...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:216:5: {...}? => ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePackageDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 2)");
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:216:113: ( ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+ )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:217:6: ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 2);
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:220:6: ({...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) ) )+
            	    int cnt3=0;
            	    loop3:
            	    do {
            	        int alt3=2;
            	        int LA3_0 = input.LA(1);

            	        if ( (LA3_0==26) ) {
            	            int LA3_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt3=1;
            	            }


            	        }


            	        switch (alt3) {
            	    	case 1 :
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:220:7: {...}? => ( (lv_ensStructs_6_0= ruleEnsembleStructure ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "rulePackageDeclaration", "true");
            	    	    }
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:220:16: ( (lv_ensStructs_6_0= ruleEnsembleStructure ) )
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:221:1: (lv_ensStructs_6_0= ruleEnsembleStructure )
            	    	    {
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:221:1: (lv_ensStructs_6_0= ruleEnsembleStructure )
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:222:3: lv_ensStructs_6_0= ruleEnsembleStructure
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getEnsStructsEnsembleStructureParserRuleCall_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleEnsembleStructure_in_rulePackageDeclaration464);
            	    	    lv_ensStructs_6_0=ruleEnsembleStructure();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"ensStructs",
            	    	              		lv_ensStructs_6_0, 
            	    	              		"EnsembleStructure");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt3 >= 1 ) break loop3;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(3, input);
            	                throw eee;
            	        }
            	        cnt3++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:245:4: ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:245:4: ({...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:246:5: {...}? => ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePackageDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 3)");
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:246:113: ( ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:247:6: ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup(), 3);
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:250:6: ({...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:250:7: {...}? => ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "rulePackageDeclaration", "true");
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:250:16: ( ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}' )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:250:17: ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )* otherlv_8= '}'
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:250:17: ( (lv_roleBehaviors_7_0= ruleRoleBehavior ) )*
            	    loop4:
            	    do {
            	        int alt4=2;
            	        int LA4_0 = input.LA(1);

            	        if ( (LA4_0==34) ) {
            	            alt4=1;
            	        }


            	        switch (alt4) {
            	    	case 1 :
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:251:1: (lv_roleBehaviors_7_0= ruleRoleBehavior )
            	    	    {
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:251:1: (lv_roleBehaviors_7_0= ruleRoleBehavior )
            	    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:252:3: lv_roleBehaviors_7_0= ruleRoleBehavior
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getRoleBehaviorsRoleBehaviorParserRuleCall_3_0_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleRoleBehavior_in_rulePackageDeclaration541);
            	    	    lv_roleBehaviors_7_0=ruleRoleBehavior();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"roleBehaviors",
            	    	              		lv_roleBehaviors_7_0, 
            	    	              		"RoleBehavior");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop4;
            	        }
            	    } while (true);

            	    otherlv_8=(Token)match(input,15,FOLLOW_15_in_rulePackageDeclaration554); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_8, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_3_1());
            	          
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt5 >= 1 ) break loop5;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(5, input);
                        throw eee;
                }
                cnt5++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "rulePackageDeclaration", "getUnorderedGroupHelper().canLeave(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getPackageDeclarationAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "entryRuleComponentType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:295:1: entryRuleComponentType returns [EObject current=null] : iv_ruleComponentType= ruleComponentType EOF ;
    public final EObject entryRuleComponentType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:296:2: (iv_ruleComponentType= ruleComponentType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:297:2: iv_ruleComponentType= ruleComponentType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentTypeRule()); 
            }
            pushFollow(FOLLOW_ruleComponentType_in_entryRuleComponentType636);
            iv_ruleComponentType=ruleComponentType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentType646); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentType"


    // $ANTLR start "ruleComponentType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:304:1: ruleComponentType returns [EObject current=null] : (otherlv_0= 'componentType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( ( (lv_attrs_3_0= ruleComponentAttributeType ) ) | ( (lv_assocs_4_0= ruleComponentAssociationType ) ) | ( (lv_ops_5_0= ruleOperationType ) ) )* otherlv_6= '}' ) ;
    public final EObject ruleComponentType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attrs_3_0 = null;

        EObject lv_assocs_4_0 = null;

        EObject lv_ops_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:307:28: ( (otherlv_0= 'componentType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( ( (lv_attrs_3_0= ruleComponentAttributeType ) ) | ( (lv_assocs_4_0= ruleComponentAssociationType ) ) | ( (lv_ops_5_0= ruleOperationType ) ) )* otherlv_6= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:308:1: (otherlv_0= 'componentType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( ( (lv_attrs_3_0= ruleComponentAttributeType ) ) | ( (lv_assocs_4_0= ruleComponentAssociationType ) ) | ( (lv_ops_5_0= ruleOperationType ) ) )* otherlv_6= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:308:1: (otherlv_0= 'componentType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( ( (lv_attrs_3_0= ruleComponentAttributeType ) ) | ( (lv_assocs_4_0= ruleComponentAssociationType ) ) | ( (lv_ops_5_0= ruleOperationType ) ) )* otherlv_6= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:308:3: otherlv_0= 'componentType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( ( (lv_attrs_3_0= ruleComponentAttributeType ) ) | ( (lv_assocs_4_0= ruleComponentAssociationType ) ) | ( (lv_ops_5_0= ruleOperationType ) ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,16,FOLLOW_16_in_ruleComponentType683); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComponentTypeAccess().getComponentTypeKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:312:1: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:313:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:313:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:314:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComponentTypeAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleComponentType704);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComponentTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,14,FOLLOW_14_in_ruleComponentType716); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getComponentTypeAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:334:1: ( ( (lv_attrs_3_0= ruleComponentAttributeType ) ) | ( (lv_assocs_4_0= ruleComponentAssociationType ) ) | ( (lv_ops_5_0= ruleOperationType ) ) )*
            loop6:
            do {
                int alt6=4;
                switch ( input.LA(1) ) {
                case 17:
                    {
                    alt6=1;
                    }
                    break;
                case 19:
                    {
                    alt6=2;
                    }
                    break;
                case 20:
                    {
                    alt6=3;
                    }
                    break;

                }

                switch (alt6) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:334:2: ( (lv_attrs_3_0= ruleComponentAttributeType ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:334:2: ( (lv_attrs_3_0= ruleComponentAttributeType ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:335:1: (lv_attrs_3_0= ruleComponentAttributeType )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:335:1: (lv_attrs_3_0= ruleComponentAttributeType )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:336:3: lv_attrs_3_0= ruleComponentAttributeType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComponentTypeAccess().getAttrsComponentAttributeTypeParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleComponentAttributeType_in_ruleComponentType738);
            	    lv_attrs_3_0=ruleComponentAttributeType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComponentTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"attrs",
            	              		lv_attrs_3_0, 
            	              		"ComponentAttributeType");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:353:6: ( (lv_assocs_4_0= ruleComponentAssociationType ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:353:6: ( (lv_assocs_4_0= ruleComponentAssociationType ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:354:1: (lv_assocs_4_0= ruleComponentAssociationType )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:354:1: (lv_assocs_4_0= ruleComponentAssociationType )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:355:3: lv_assocs_4_0= ruleComponentAssociationType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComponentTypeAccess().getAssocsComponentAssociationTypeParserRuleCall_3_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleComponentAssociationType_in_ruleComponentType765);
            	    lv_assocs_4_0=ruleComponentAssociationType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComponentTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"assocs",
            	              		lv_assocs_4_0, 
            	              		"ComponentAssociationType");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:372:6: ( (lv_ops_5_0= ruleOperationType ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:372:6: ( (lv_ops_5_0= ruleOperationType ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:373:1: (lv_ops_5_0= ruleOperationType )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:373:1: (lv_ops_5_0= ruleOperationType )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:374:3: lv_ops_5_0= ruleOperationType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComponentTypeAccess().getOpsOperationTypeParserRuleCall_3_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOperationType_in_ruleComponentType792);
            	    lv_ops_5_0=ruleOperationType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComponentTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ops",
            	              		lv_ops_5_0, 
            	              		"OperationType");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_6=(Token)match(input,15,FOLLOW_15_in_ruleComponentType806); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getComponentTypeAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentType"


    // $ANTLR start "entryRuleAbstractComponentFieldType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:402:1: entryRuleAbstractComponentFieldType returns [EObject current=null] : iv_ruleAbstractComponentFieldType= ruleAbstractComponentFieldType EOF ;
    public final EObject entryRuleAbstractComponentFieldType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractComponentFieldType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:403:2: (iv_ruleAbstractComponentFieldType= ruleAbstractComponentFieldType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:404:2: iv_ruleAbstractComponentFieldType= ruleAbstractComponentFieldType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractComponentFieldTypeRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractComponentFieldType_in_entryRuleAbstractComponentFieldType842);
            iv_ruleAbstractComponentFieldType=ruleAbstractComponentFieldType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractComponentFieldType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractComponentFieldType852); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractComponentFieldType"


    // $ANTLR start "ruleAbstractComponentFieldType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:411:1: ruleAbstractComponentFieldType returns [EObject current=null] : (this_ComponentAttributeType_0= ruleComponentAttributeType | this_ComponentAssociationType_1= ruleComponentAssociationType ) ;
    public final EObject ruleAbstractComponentFieldType() throws RecognitionException {
        EObject current = null;

        EObject this_ComponentAttributeType_0 = null;

        EObject this_ComponentAssociationType_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:414:28: ( (this_ComponentAttributeType_0= ruleComponentAttributeType | this_ComponentAssociationType_1= ruleComponentAssociationType ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:415:1: (this_ComponentAttributeType_0= ruleComponentAttributeType | this_ComponentAssociationType_1= ruleComponentAssociationType )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:415:1: (this_ComponentAttributeType_0= ruleComponentAttributeType | this_ComponentAssociationType_1= ruleComponentAssociationType )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==17) ) {
                alt7=1;
            }
            else if ( (LA7_0==19) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:416:5: this_ComponentAttributeType_0= ruleComponentAttributeType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractComponentFieldTypeAccess().getComponentAttributeTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComponentAttributeType_in_ruleAbstractComponentFieldType899);
                    this_ComponentAttributeType_0=ruleComponentAttributeType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentAttributeType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:426:5: this_ComponentAssociationType_1= ruleComponentAssociationType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractComponentFieldTypeAccess().getComponentAssociationTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComponentAssociationType_in_ruleAbstractComponentFieldType926);
                    this_ComponentAssociationType_1=ruleComponentAssociationType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentAssociationType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractComponentFieldType"


    // $ANTLR start "entryRuleComponentAttributeType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:442:1: entryRuleComponentAttributeType returns [EObject current=null] : iv_ruleComponentAttributeType= ruleComponentAttributeType EOF ;
    public final EObject entryRuleComponentAttributeType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentAttributeType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:443:2: (iv_ruleComponentAttributeType= ruleComponentAttributeType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:444:2: iv_ruleComponentAttributeType= ruleComponentAttributeType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentAttributeTypeRule()); 
            }
            pushFollow(FOLLOW_ruleComponentAttributeType_in_entryRuleComponentAttributeType961);
            iv_ruleComponentAttributeType=ruleComponentAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentAttributeType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentAttributeType971); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentAttributeType"


    // $ANTLR start "ruleComponentAttributeType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:451:1: ruleComponentAttributeType returns [EObject current=null] : (otherlv_0= 'attr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' ) ;
    public final EObject ruleComponentAttributeType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_type_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:454:28: ( (otherlv_0= 'attr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:455:1: (otherlv_0= 'attr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:455:1: (otherlv_0= 'attr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:455:3: otherlv_0= 'attr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_17_in_ruleComponentAttributeType1008); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComponentAttributeTypeAccess().getAttrKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:459:1: ( (lv_type_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:460:1: (lv_type_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:460:1: (lv_type_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:461:3: lv_type_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComponentAttributeTypeAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleComponentAttributeType1029);
            lv_type_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComponentAttributeTypeRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:477:2: ( (lv_name_2_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:478:1: (lv_name_2_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:478:1: (lv_name_2_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:479:3: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComponentAttributeTypeAccess().getNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleComponentAttributeType1050);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComponentAttributeTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleComponentAttributeType1062); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getComponentAttributeTypeAccess().getSemicolonKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentAttributeType"


    // $ANTLR start "entryRuleComponentAssociationType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:507:1: entryRuleComponentAssociationType returns [EObject current=null] : iv_ruleComponentAssociationType= ruleComponentAssociationType EOF ;
    public final EObject entryRuleComponentAssociationType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentAssociationType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:508:2: (iv_ruleComponentAssociationType= ruleComponentAssociationType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:509:2: iv_ruleComponentAssociationType= ruleComponentAssociationType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentAssociationTypeRule()); 
            }
            pushFollow(FOLLOW_ruleComponentAssociationType_in_entryRuleComponentAssociationType1098);
            iv_ruleComponentAssociationType=ruleComponentAssociationType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentAssociationType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentAssociationType1108); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentAssociationType"


    // $ANTLR start "ruleComponentAssociationType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:516:1: ruleComponentAssociationType returns [EObject current=null] : (otherlv_0= 'assoc' ( (otherlv_1= RULE_ID ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' ) ;
    public final EObject ruleComponentAssociationType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:519:28: ( (otherlv_0= 'assoc' ( (otherlv_1= RULE_ID ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:520:1: (otherlv_0= 'assoc' ( (otherlv_1= RULE_ID ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:520:1: (otherlv_0= 'assoc' ( (otherlv_1= RULE_ID ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:520:3: otherlv_0= 'assoc' ( (otherlv_1= RULE_ID ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,19,FOLLOW_19_in_ruleComponentAssociationType1145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComponentAssociationTypeAccess().getAssocKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:524:1: ( (otherlv_1= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:525:1: (otherlv_1= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:525:1: (otherlv_1= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:526:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getComponentAssociationTypeRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleComponentAssociationType1165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getComponentAssociationTypeAccess().getTypeComponentTypeCrossReference_1_0()); 
              	
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:537:2: ( (lv_name_2_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:538:1: (lv_name_2_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:538:1: (lv_name_2_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:539:3: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComponentAssociationTypeAccess().getNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleComponentAssociationType1186);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComponentAssociationTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleComponentAssociationType1198); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getComponentAssociationTypeAccess().getSemicolonKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentAssociationType"


    // $ANTLR start "entryRuleOperationType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:567:1: entryRuleOperationType returns [EObject current=null] : iv_ruleOperationType= ruleOperationType EOF ;
    public final EObject entryRuleOperationType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:568:2: (iv_ruleOperationType= ruleOperationType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:569:2: iv_ruleOperationType= ruleOperationType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationTypeRule()); 
            }
            pushFollow(FOLLOW_ruleOperationType_in_entryRuleOperationType1234);
            iv_ruleOperationType=ruleOperationType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOperationType1244); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationType"


    // $ANTLR start "ruleOperationType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:576:1: ruleOperationType returns [EObject current=null] : (otherlv_0= 'op' ( (lv_returnType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) otherlv_4= ';' ) ;
    public final EObject ruleOperationType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        EObject lv_returnType_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_formalDataParamsBlock_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:579:28: ( (otherlv_0= 'op' ( (lv_returnType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) otherlv_4= ';' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:580:1: (otherlv_0= 'op' ( (lv_returnType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) otherlv_4= ';' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:580:1: (otherlv_0= 'op' ( (lv_returnType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) otherlv_4= ';' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:580:3: otherlv_0= 'op' ( (lv_returnType_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) otherlv_4= ';'
            {
            otherlv_0=(Token)match(input,20,FOLLOW_20_in_ruleOperationType1281); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getOperationTypeAccess().getOpKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:584:1: ( (lv_returnType_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:585:1: (lv_returnType_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:585:1: (lv_returnType_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:586:3: lv_returnType_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOperationTypeAccess().getReturnTypeJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleOperationType1302);
            lv_returnType_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationTypeRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:602:2: ( (lv_name_2_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:603:1: (lv_name_2_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:603:1: (lv_name_2_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:604:3: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOperationTypeAccess().getNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleOperationType1323);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:620:2: ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:621:1: (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:621:1: (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:622:3: lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOperationTypeAccess().getFormalDataParamsBlockFormalDataParamsBlockParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFormalDataParamsBlock_in_ruleOperationType1344);
            lv_formalDataParamsBlock_3_0=ruleFormalDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationTypeRule());
              	        }
                     		set(
                     			current, 
                     			"formalDataParamsBlock",
                      		lv_formalDataParamsBlock_3_0, 
                      		"FormalDataParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,18,FOLLOW_18_in_ruleOperationType1356); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getOperationTypeAccess().getSemicolonKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationType"


    // $ANTLR start "entryRuleRoleType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:650:1: entryRuleRoleType returns [EObject current=null] : iv_ruleRoleType= ruleRoleType EOF ;
    public final EObject entryRuleRoleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:651:2: (iv_ruleRoleType= ruleRoleType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:652:2: iv_ruleRoleType= ruleRoleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleTypeRule()); 
            }
            pushFollow(FOLLOW_ruleRoleType_in_entryRuleRoleType1392);
            iv_ruleRoleType=ruleRoleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleType1402); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleType"


    // $ANTLR start "ruleRoleType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:659:1: ruleRoleType returns [EObject current=null] : (otherlv_0= 'roleType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= 'over' ( (otherlv_3= RULE_ID ) ) (otherlv_4= ',' ( (otherlv_5= RULE_ID ) ) )* otherlv_6= '{' ( ( (lv_roleattrs_7_0= ruleRoleAttributeType ) ) | ( (lv_rolemsgs_8_0= ruleMessageType ) ) )* otherlv_9= '}' ) ;
    public final EObject ruleRoleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_roleattrs_7_0 = null;

        EObject lv_rolemsgs_8_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:662:28: ( (otherlv_0= 'roleType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= 'over' ( (otherlv_3= RULE_ID ) ) (otherlv_4= ',' ( (otherlv_5= RULE_ID ) ) )* otherlv_6= '{' ( ( (lv_roleattrs_7_0= ruleRoleAttributeType ) ) | ( (lv_rolemsgs_8_0= ruleMessageType ) ) )* otherlv_9= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:663:1: (otherlv_0= 'roleType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= 'over' ( (otherlv_3= RULE_ID ) ) (otherlv_4= ',' ( (otherlv_5= RULE_ID ) ) )* otherlv_6= '{' ( ( (lv_roleattrs_7_0= ruleRoleAttributeType ) ) | ( (lv_rolemsgs_8_0= ruleMessageType ) ) )* otherlv_9= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:663:1: (otherlv_0= 'roleType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= 'over' ( (otherlv_3= RULE_ID ) ) (otherlv_4= ',' ( (otherlv_5= RULE_ID ) ) )* otherlv_6= '{' ( ( (lv_roleattrs_7_0= ruleRoleAttributeType ) ) | ( (lv_rolemsgs_8_0= ruleMessageType ) ) )* otherlv_9= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:663:3: otherlv_0= 'roleType' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= 'over' ( (otherlv_3= RULE_ID ) ) (otherlv_4= ',' ( (otherlv_5= RULE_ID ) ) )* otherlv_6= '{' ( ( (lv_roleattrs_7_0= ruleRoleAttributeType ) ) | ( (lv_rolemsgs_8_0= ruleMessageType ) ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,21,FOLLOW_21_in_ruleRoleType1439); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRoleTypeAccess().getRoleTypeKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:667:1: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:668:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:668:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:669:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleTypeAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleRoleType1460);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_22_in_ruleRoleType1472); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getRoleTypeAccess().getOverKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:689:1: ( (otherlv_3= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:690:1: (otherlv_3= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:690:1: (otherlv_3= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:691:3: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getRoleTypeRule());
              	        }
                      
            }
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleRoleType1492); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_3, grammarAccess.getRoleTypeAccess().getCompTypesComponentTypeCrossReference_3_0()); 
              	
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:702:2: (otherlv_4= ',' ( (otherlv_5= RULE_ID ) ) )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==23) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:702:4: otherlv_4= ',' ( (otherlv_5= RULE_ID ) )
            	    {
            	    otherlv_4=(Token)match(input,23,FOLLOW_23_in_ruleRoleType1505); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getRoleTypeAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:706:1: ( (otherlv_5= RULE_ID ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:707:1: (otherlv_5= RULE_ID )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:707:1: (otherlv_5= RULE_ID )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:708:3: otherlv_5= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getRoleTypeRule());
            	      	        }
            	              
            	    }
            	    otherlv_5=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleRoleType1525); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		newLeafNode(otherlv_5, grammarAccess.getRoleTypeAccess().getCompTypesComponentTypeCrossReference_4_1_0()); 
            	      	
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleRoleType1539); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getRoleTypeAccess().getLeftCurlyBracketKeyword_5());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:723:1: ( ( (lv_roleattrs_7_0= ruleRoleAttributeType ) ) | ( (lv_rolemsgs_8_0= ruleMessageType ) ) )*
            loop9:
            do {
                int alt9=3;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==24) ) {
                    alt9=1;
                }
                else if ( (LA9_0==25) ) {
                    alt9=2;
                }


                switch (alt9) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:723:2: ( (lv_roleattrs_7_0= ruleRoleAttributeType ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:723:2: ( (lv_roleattrs_7_0= ruleRoleAttributeType ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:724:1: (lv_roleattrs_7_0= ruleRoleAttributeType )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:724:1: (lv_roleattrs_7_0= ruleRoleAttributeType )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:725:3: lv_roleattrs_7_0= ruleRoleAttributeType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRoleTypeAccess().getRoleattrsRoleAttributeTypeParserRuleCall_6_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRoleAttributeType_in_ruleRoleType1561);
            	    lv_roleattrs_7_0=ruleRoleAttributeType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRoleTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"roleattrs",
            	              		lv_roleattrs_7_0, 
            	              		"RoleAttributeType");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:742:6: ( (lv_rolemsgs_8_0= ruleMessageType ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:742:6: ( (lv_rolemsgs_8_0= ruleMessageType ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:743:1: (lv_rolemsgs_8_0= ruleMessageType )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:743:1: (lv_rolemsgs_8_0= ruleMessageType )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:744:3: lv_rolemsgs_8_0= ruleMessageType
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRoleTypeAccess().getRolemsgsMessageTypeParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleMessageType_in_ruleRoleType1588);
            	    lv_rolemsgs_8_0=ruleMessageType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRoleTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"rolemsgs",
            	              		lv_rolemsgs_8_0, 
            	              		"MessageType");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            otherlv_9=(Token)match(input,15,FOLLOW_15_in_ruleRoleType1602); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getRoleTypeAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleType"


    // $ANTLR start "entryRuleRoleAttributeType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:772:1: entryRuleRoleAttributeType returns [EObject current=null] : iv_ruleRoleAttributeType= ruleRoleAttributeType EOF ;
    public final EObject entryRuleRoleAttributeType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleAttributeType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:773:2: (iv_ruleRoleAttributeType= ruleRoleAttributeType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:774:2: iv_ruleRoleAttributeType= ruleRoleAttributeType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleAttributeTypeRule()); 
            }
            pushFollow(FOLLOW_ruleRoleAttributeType_in_entryRuleRoleAttributeType1638);
            iv_ruleRoleAttributeType=ruleRoleAttributeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleAttributeType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleAttributeType1648); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleAttributeType"


    // $ANTLR start "ruleRoleAttributeType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:781:1: ruleRoleAttributeType returns [EObject current=null] : (otherlv_0= 'roleattr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' ) ;
    public final EObject ruleRoleAttributeType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_type_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:784:28: ( (otherlv_0= 'roleattr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:785:1: (otherlv_0= 'roleattr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:785:1: (otherlv_0= 'roleattr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:785:3: otherlv_0= 'roleattr' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,24,FOLLOW_24_in_ruleRoleAttributeType1685); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRoleAttributeTypeAccess().getRoleattrKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:789:1: ( (lv_type_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:790:1: (lv_type_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:790:1: (lv_type_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:791:3: lv_type_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleAttributeTypeAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleRoleAttributeType1706);
            lv_type_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleAttributeTypeRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:807:2: ( (lv_name_2_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:808:1: (lv_name_2_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:808:1: (lv_name_2_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:809:3: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleAttributeTypeAccess().getNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleRoleAttributeType1727);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleAttributeTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleRoleAttributeType1739); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getRoleAttributeTypeAccess().getSemicolonKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleAttributeType"


    // $ANTLR start "entryRuleMessageType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:837:1: entryRuleMessageType returns [EObject current=null] : iv_ruleMessageType= ruleMessageType EOF ;
    public final EObject entryRuleMessageType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMessageType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:838:2: (iv_ruleMessageType= ruleMessageType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:839:2: iv_ruleMessageType= ruleMessageType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMessageTypeRule()); 
            }
            pushFollow(FOLLOW_ruleMessageType_in_entryRuleMessageType1775);
            iv_ruleMessageType=ruleMessageType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMessageType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMessageType1785); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMessageType"


    // $ANTLR start "ruleMessageType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:846:1: ruleMessageType returns [EObject current=null] : (otherlv_0= 'rolemsg' ( (lv_direction_1_0= ruleMsgDirection ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock ) ) otherlv_5= ';' ) ;
    public final EObject ruleMessageType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_5=null;
        Enumerator lv_direction_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_formalRoleParamsBlock_3_0 = null;

        EObject lv_formalDataParamsBlock_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:849:28: ( (otherlv_0= 'rolemsg' ( (lv_direction_1_0= ruleMsgDirection ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock ) ) otherlv_5= ';' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:850:1: (otherlv_0= 'rolemsg' ( (lv_direction_1_0= ruleMsgDirection ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock ) ) otherlv_5= ';' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:850:1: (otherlv_0= 'rolemsg' ( (lv_direction_1_0= ruleMsgDirection ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock ) ) otherlv_5= ';' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:850:3: otherlv_0= 'rolemsg' ( (lv_direction_1_0= ruleMsgDirection ) ) ( (lv_name_2_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock ) ) otherlv_5= ';'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_25_in_ruleMessageType1822); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMessageTypeAccess().getRolemsgKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:854:1: ( (lv_direction_1_0= ruleMsgDirection ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:855:1: (lv_direction_1_0= ruleMsgDirection )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:855:1: (lv_direction_1_0= ruleMsgDirection )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:856:3: lv_direction_1_0= ruleMsgDirection
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMessageTypeAccess().getDirectionMsgDirectionEnumRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleMsgDirection_in_ruleMessageType1843);
            lv_direction_1_0=ruleMsgDirection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMessageTypeRule());
              	        }
                     		set(
                     			current, 
                     			"direction",
                      		lv_direction_1_0, 
                      		"MsgDirection");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:872:2: ( (lv_name_2_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:873:1: (lv_name_2_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:873:1: (lv_name_2_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:874:3: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMessageTypeAccess().getNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleMessageType1864);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMessageTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:890:2: ( (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:891:1: (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:891:1: (lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:892:3: lv_formalRoleParamsBlock_3_0= ruleFormalRoleParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMessageTypeAccess().getFormalRoleParamsBlockFormalRoleParamsBlockParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFormalRoleParamsBlock_in_ruleMessageType1885);
            lv_formalRoleParamsBlock_3_0=ruleFormalRoleParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMessageTypeRule());
              	        }
                     		set(
                     			current, 
                     			"formalRoleParamsBlock",
                      		lv_formalRoleParamsBlock_3_0, 
                      		"FormalRoleParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:908:2: ( (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:909:1: (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:909:1: (lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:910:3: lv_formalDataParamsBlock_4_0= ruleFormalDataParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMessageTypeAccess().getFormalDataParamsBlockFormalDataParamsBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFormalDataParamsBlock_in_ruleMessageType1906);
            lv_formalDataParamsBlock_4_0=ruleFormalDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMessageTypeRule());
              	        }
                     		set(
                     			current, 
                     			"formalDataParamsBlock",
                      		lv_formalDataParamsBlock_4_0, 
                      		"FormalDataParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,18,FOLLOW_18_in_ruleMessageType1918); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMessageTypeAccess().getSemicolonKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMessageType"


    // $ANTLR start "entryRuleEnsembleStructure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:938:1: entryRuleEnsembleStructure returns [EObject current=null] : iv_ruleEnsembleStructure= ruleEnsembleStructure EOF ;
    public final EObject entryRuleEnsembleStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnsembleStructure = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:939:2: (iv_ruleEnsembleStructure= ruleEnsembleStructure EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:940:2: iv_ruleEnsembleStructure= ruleEnsembleStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnsembleStructureRule()); 
            }
            pushFollow(FOLLOW_ruleEnsembleStructure_in_entryRuleEnsembleStructure1954);
            iv_ruleEnsembleStructure=ruleEnsembleStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnsembleStructure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleEnsembleStructure1964); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnsembleStructure"


    // $ANTLR start "ruleEnsembleStructure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:947:1: ruleEnsembleStructure returns [EObject current=null] : (otherlv_0= 'ensembleStructure' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity ) ) ( (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity ) )* otherlv_5= '}' ) ;
    public final EObject ruleEnsembleStructure() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_rtWithMult_3_0 = null;

        EObject lv_rtWithMult_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:950:28: ( (otherlv_0= 'ensembleStructure' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity ) ) ( (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity ) )* otherlv_5= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:951:1: (otherlv_0= 'ensembleStructure' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity ) ) ( (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity ) )* otherlv_5= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:951:1: (otherlv_0= 'ensembleStructure' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity ) ) ( (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity ) )* otherlv_5= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:951:3: otherlv_0= 'ensembleStructure' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '{' ( (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity ) ) ( (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleEnsembleStructure2001); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnsembleStructureAccess().getEnsembleStructureKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:955:1: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:956:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:956:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:957:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnsembleStructureAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleEnsembleStructure2022);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnsembleStructureRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,14,FOLLOW_14_in_ruleEnsembleStructure2034); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getEnsembleStructureAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:977:1: ( (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:978:1: (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:978:1: (lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:979:3: lv_rtWithMult_3_0= ruleRoleTypeWithMultiplicity
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnsembleStructureAccess().getRtWithMultRoleTypeWithMultiplicityParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleRoleTypeWithMultiplicity_in_ruleEnsembleStructure2055);
            lv_rtWithMult_3_0=ruleRoleTypeWithMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnsembleStructureRule());
              	        }
                     		add(
                     			current, 
                     			"rtWithMult",
                      		lv_rtWithMult_3_0, 
                      		"RoleTypeWithMultiplicity");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:995:2: ( (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==27) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:996:1: (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:996:1: (lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:997:3: lv_rtWithMult_4_0= ruleRoleTypeWithMultiplicity
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnsembleStructureAccess().getRtWithMultRoleTypeWithMultiplicityParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleRoleTypeWithMultiplicity_in_ruleEnsembleStructure2076);
            	    lv_rtWithMult_4_0=ruleRoleTypeWithMultiplicity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnsembleStructureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"rtWithMult",
            	              		lv_rtWithMult_4_0, 
            	              		"RoleTypeWithMultiplicity");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            otherlv_5=(Token)match(input,15,FOLLOW_15_in_ruleEnsembleStructure2089); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getEnsembleStructureAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnsembleStructure"


    // $ANTLR start "entryRuleRoleTypeWithMultiplicity"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1025:1: entryRuleRoleTypeWithMultiplicity returns [EObject current=null] : iv_ruleRoleTypeWithMultiplicity= ruleRoleTypeWithMultiplicity EOF ;
    public final EObject entryRuleRoleTypeWithMultiplicity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleTypeWithMultiplicity = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1026:2: (iv_ruleRoleTypeWithMultiplicity= ruleRoleTypeWithMultiplicity EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1027:2: iv_ruleRoleTypeWithMultiplicity= ruleRoleTypeWithMultiplicity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleTypeWithMultiplicityRule()); 
            }
            pushFollow(FOLLOW_ruleRoleTypeWithMultiplicity_in_entryRuleRoleTypeWithMultiplicity2125);
            iv_ruleRoleTypeWithMultiplicity=ruleRoleTypeWithMultiplicity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleTypeWithMultiplicity; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleTypeWithMultiplicity2135); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleTypeWithMultiplicity"


    // $ANTLR start "ruleRoleTypeWithMultiplicity"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1034:1: ruleRoleTypeWithMultiplicity returns [EObject current=null] : (otherlv_0= '<' ( (otherlv_1= RULE_ID ) ) otherlv_2= ',' otherlv_3= 'min' otherlv_4= '=' ( (lv_min_5_0= ruleMultElem ) ) otherlv_6= ',' otherlv_7= 'max' otherlv_8= '=' ( (lv_max_9_0= ruleMultElem ) ) otherlv_10= ',' otherlv_11= 'cap' otherlv_12= '=' ( (lv_capacity_13_0= RULE_INT ) ) otherlv_14= '>' otherlv_15= ';' ) ;
    public final EObject ruleRoleTypeWithMultiplicity() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token lv_capacity_13_0=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_min_5_0 = null;

        AntlrDatatypeRuleToken lv_max_9_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1037:28: ( (otherlv_0= '<' ( (otherlv_1= RULE_ID ) ) otherlv_2= ',' otherlv_3= 'min' otherlv_4= '=' ( (lv_min_5_0= ruleMultElem ) ) otherlv_6= ',' otherlv_7= 'max' otherlv_8= '=' ( (lv_max_9_0= ruleMultElem ) ) otherlv_10= ',' otherlv_11= 'cap' otherlv_12= '=' ( (lv_capacity_13_0= RULE_INT ) ) otherlv_14= '>' otherlv_15= ';' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1038:1: (otherlv_0= '<' ( (otherlv_1= RULE_ID ) ) otherlv_2= ',' otherlv_3= 'min' otherlv_4= '=' ( (lv_min_5_0= ruleMultElem ) ) otherlv_6= ',' otherlv_7= 'max' otherlv_8= '=' ( (lv_max_9_0= ruleMultElem ) ) otherlv_10= ',' otherlv_11= 'cap' otherlv_12= '=' ( (lv_capacity_13_0= RULE_INT ) ) otherlv_14= '>' otherlv_15= ';' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1038:1: (otherlv_0= '<' ( (otherlv_1= RULE_ID ) ) otherlv_2= ',' otherlv_3= 'min' otherlv_4= '=' ( (lv_min_5_0= ruleMultElem ) ) otherlv_6= ',' otherlv_7= 'max' otherlv_8= '=' ( (lv_max_9_0= ruleMultElem ) ) otherlv_10= ',' otherlv_11= 'cap' otherlv_12= '=' ( (lv_capacity_13_0= RULE_INT ) ) otherlv_14= '>' otherlv_15= ';' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1038:3: otherlv_0= '<' ( (otherlv_1= RULE_ID ) ) otherlv_2= ',' otherlv_3= 'min' otherlv_4= '=' ( (lv_min_5_0= ruleMultElem ) ) otherlv_6= ',' otherlv_7= 'max' otherlv_8= '=' ( (lv_max_9_0= ruleMultElem ) ) otherlv_10= ',' otherlv_11= 'cap' otherlv_12= '=' ( (lv_capacity_13_0= RULE_INT ) ) otherlv_14= '>' otherlv_15= ';'
            {
            otherlv_0=(Token)match(input,27,FOLLOW_27_in_ruleRoleTypeWithMultiplicity2172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRoleTypeWithMultiplicityAccess().getLessThanSignKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1042:1: ( (otherlv_1= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1043:1: (otherlv_1= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1043:1: (otherlv_1= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1044:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getRoleTypeWithMultiplicityRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleRoleTypeWithMultiplicity2192); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getRoleTypeWithMultiplicityAccess().getRoleTypeRoleTypeCrossReference_1_0()); 
              	
            }

            }


            }

            otherlv_2=(Token)match(input,23,FOLLOW_23_in_ruleRoleTypeWithMultiplicity2204); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getRoleTypeWithMultiplicityAccess().getCommaKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,28,FOLLOW_28_in_ruleRoleTypeWithMultiplicity2216); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getRoleTypeWithMultiplicityAccess().getMinKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,29,FOLLOW_29_in_ruleRoleTypeWithMultiplicity2228); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRoleTypeWithMultiplicityAccess().getEqualsSignKeyword_4());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1067:1: ( (lv_min_5_0= ruleMultElem ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1068:1: (lv_min_5_0= ruleMultElem )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1068:1: (lv_min_5_0= ruleMultElem )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1069:3: lv_min_5_0= ruleMultElem
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleTypeWithMultiplicityAccess().getMinMultElemParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleMultElem_in_ruleRoleTypeWithMultiplicity2249);
            lv_min_5_0=ruleMultElem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleTypeWithMultiplicityRule());
              	        }
                     		set(
                     			current, 
                     			"min",
                      		lv_min_5_0, 
                      		"MultElem");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,23,FOLLOW_23_in_ruleRoleTypeWithMultiplicity2261); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getRoleTypeWithMultiplicityAccess().getCommaKeyword_6());
                  
            }
            otherlv_7=(Token)match(input,30,FOLLOW_30_in_ruleRoleTypeWithMultiplicity2273); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getRoleTypeWithMultiplicityAccess().getMaxKeyword_7());
                  
            }
            otherlv_8=(Token)match(input,29,FOLLOW_29_in_ruleRoleTypeWithMultiplicity2285); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getRoleTypeWithMultiplicityAccess().getEqualsSignKeyword_8());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1097:1: ( (lv_max_9_0= ruleMultElem ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1098:1: (lv_max_9_0= ruleMultElem )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1098:1: (lv_max_9_0= ruleMultElem )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1099:3: lv_max_9_0= ruleMultElem
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleTypeWithMultiplicityAccess().getMaxMultElemParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleMultElem_in_ruleRoleTypeWithMultiplicity2306);
            lv_max_9_0=ruleMultElem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleTypeWithMultiplicityRule());
              	        }
                     		set(
                     			current, 
                     			"max",
                      		lv_max_9_0, 
                      		"MultElem");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_10=(Token)match(input,23,FOLLOW_23_in_ruleRoleTypeWithMultiplicity2318); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getRoleTypeWithMultiplicityAccess().getCommaKeyword_10());
                  
            }
            otherlv_11=(Token)match(input,31,FOLLOW_31_in_ruleRoleTypeWithMultiplicity2330); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getRoleTypeWithMultiplicityAccess().getCapKeyword_11());
                  
            }
            otherlv_12=(Token)match(input,29,FOLLOW_29_in_ruleRoleTypeWithMultiplicity2342); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getRoleTypeWithMultiplicityAccess().getEqualsSignKeyword_12());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1127:1: ( (lv_capacity_13_0= RULE_INT ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1128:1: (lv_capacity_13_0= RULE_INT )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1128:1: (lv_capacity_13_0= RULE_INT )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1129:3: lv_capacity_13_0= RULE_INT
            {
            lv_capacity_13_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleRoleTypeWithMultiplicity2359); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_capacity_13_0, grammarAccess.getRoleTypeWithMultiplicityAccess().getCapacityINTTerminalRuleCall_13_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getRoleTypeWithMultiplicityRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"capacity",
                      		lv_capacity_13_0, 
                      		"INT");
              	    
            }

            }


            }

            otherlv_14=(Token)match(input,32,FOLLOW_32_in_ruleRoleTypeWithMultiplicity2376); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_14, grammarAccess.getRoleTypeWithMultiplicityAccess().getGreaterThanSignKeyword_14());
                  
            }
            otherlv_15=(Token)match(input,18,FOLLOW_18_in_ruleRoleTypeWithMultiplicity2388); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getRoleTypeWithMultiplicityAccess().getSemicolonKeyword_15());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleTypeWithMultiplicity"


    // $ANTLR start "entryRuleMultElem"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1161:1: entryRuleMultElem returns [String current=null] : iv_ruleMultElem= ruleMultElem EOF ;
    public final String entryRuleMultElem() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultElem = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1162:2: (iv_ruleMultElem= ruleMultElem EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1163:2: iv_ruleMultElem= ruleMultElem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultElemRule()); 
            }
            pushFollow(FOLLOW_ruleMultElem_in_entryRuleMultElem2425);
            iv_ruleMultElem=ruleMultElem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultElem.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultElem2436); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultElem"


    // $ANTLR start "ruleMultElem"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1170:1: ruleMultElem returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleMultElem() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1173:28: ( (kw= '*' | this_INT_1= RULE_INT ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1174:1: (kw= '*' | this_INT_1= RULE_INT )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1174:1: (kw= '*' | this_INT_1= RULE_INT )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==33) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_INT) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1175:2: kw= '*'
                    {
                    kw=(Token)match(input,33,FOLLOW_33_in_ruleMultElem2474); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMultElemAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1181:10: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleMultElem2495); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_1, grammarAccess.getMultElemAccess().getINTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultElem"


    // $ANTLR start "entryRuleRoleBehavior"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1196:1: entryRuleRoleBehavior returns [EObject current=null] : iv_ruleRoleBehavior= ruleRoleBehavior EOF ;
    public final EObject entryRuleRoleBehavior() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleBehavior = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1197:2: (iv_ruleRoleBehavior= ruleRoleBehavior EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1198:2: iv_ruleRoleBehavior= ruleRoleBehavior EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleBehaviorRule()); 
            }
            pushFollow(FOLLOW_ruleRoleBehavior_in_entryRuleRoleBehavior2540);
            iv_ruleRoleBehavior=ruleRoleBehavior();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleBehavior; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleBehavior2550); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleBehavior"


    // $ANTLR start "ruleRoleBehavior"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1205:1: ruleRoleBehavior returns [EObject current=null] : ( ( () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) ) ) | ( () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}' ) ) ;
    public final EObject ruleRoleBehavior() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_processExpr_4_0 = null;

        EObject lv_processInvocation_9_0 = null;

        EObject lv_processes_11_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1208:28: ( ( ( () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) ) ) | ( () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}' ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1209:1: ( ( () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) ) ) | ( () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}' ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1209:1: ( ( () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) ) ) | ( () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}' ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==34) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==RULE_ID) ) {
                    int LA13_2 = input.LA(3);

                    if ( (LA13_2==29) ) {
                        int LA13_3 = input.LA(4);

                        if ( (LA13_3==RULE_ID) ) {
                            int LA13_4 = input.LA(5);

                            if ( (LA13_4==EOF||LA13_4==15||LA13_4==29||LA13_4==34||LA13_4==37||LA13_4==43||LA13_4==46) ) {
                                alt13=1;
                            }
                            else if ( (LA13_4==14) ) {
                                alt13=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 13, 4, input);

                                throw nvae;
                            }
                        }
                        else if ( (LA13_3==36||LA13_3==38||LA13_3==41||(LA13_3>=47 && LA13_3<=48)||LA13_3==58) ) {
                            alt13=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 3, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1209:2: ( () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1209:2: ( () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1209:3: () otherlv_1= 'roleBehavior' ( (otherlv_2= RULE_ID ) ) otherlv_3= '=' ( (lv_processExpr_4_0= ruleProcessExpression ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1209:3: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1210:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getRoleBehaviorAccess().getDeclaringRoleBehaviorAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,34,FOLLOW_34_in_ruleRoleBehavior2597); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getRoleBehaviorAccess().getRoleBehaviorKeyword_0_1());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1219:1: ( (otherlv_2= RULE_ID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1220:1: (otherlv_2= RULE_ID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1220:1: (otherlv_2= RULE_ID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1221:3: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getRoleBehaviorRule());
                      	        }
                              
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleRoleBehavior2617); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_2, grammarAccess.getRoleBehaviorAccess().getRoleTypeRefRoleTypeCrossReference_0_2_0()); 
                      	
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,29,FOLLOW_29_in_ruleRoleBehavior2629); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getRoleBehaviorAccess().getEqualsSignKeyword_0_3());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1236:1: ( (lv_processExpr_4_0= ruleProcessExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1237:1: (lv_processExpr_4_0= ruleProcessExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1237:1: (lv_processExpr_4_0= ruleProcessExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1238:3: lv_processExpr_4_0= ruleProcessExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRoleBehaviorAccess().getProcessExprProcessExpressionParserRuleCall_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleProcessExpression_in_ruleRoleBehavior2650);
                    lv_processExpr_4_0=ruleProcessExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRoleBehaviorRule());
                      	        }
                             		set(
                             			current, 
                             			"processExpr",
                              		lv_processExpr_4_0, 
                              		"ProcessExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1255:6: ( () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1255:6: ( () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1255:7: () otherlv_6= 'roleBehavior' ( (otherlv_7= RULE_ID ) ) otherlv_8= '=' ( (lv_processInvocation_9_0= ruleProcessInvocation ) ) otherlv_10= '{' ( (lv_processes_11_0= ruleProcess ) )* otherlv_12= '}'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1255:7: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1256:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getRoleBehaviorAccess().getInvokingRoleBehaviorAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_6=(Token)match(input,34,FOLLOW_34_in_ruleRoleBehavior2679); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getRoleBehaviorAccess().getRoleBehaviorKeyword_1_1());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1265:1: ( (otherlv_7= RULE_ID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1266:1: (otherlv_7= RULE_ID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1266:1: (otherlv_7= RULE_ID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1267:3: otherlv_7= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getRoleBehaviorRule());
                      	        }
                              
                    }
                    otherlv_7=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleRoleBehavior2699); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_7, grammarAccess.getRoleBehaviorAccess().getRoleTypeRefRoleTypeCrossReference_1_2_0()); 
                      	
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,29,FOLLOW_29_in_ruleRoleBehavior2711); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getRoleBehaviorAccess().getEqualsSignKeyword_1_3());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1282:1: ( (lv_processInvocation_9_0= ruleProcessInvocation ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1283:1: (lv_processInvocation_9_0= ruleProcessInvocation )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1283:1: (lv_processInvocation_9_0= ruleProcessInvocation )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1284:3: lv_processInvocation_9_0= ruleProcessInvocation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getRoleBehaviorAccess().getProcessInvocationProcessInvocationParserRuleCall_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleProcessInvocation_in_ruleRoleBehavior2732);
                    lv_processInvocation_9_0=ruleProcessInvocation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRoleBehaviorRule());
                      	        }
                             		set(
                             			current, 
                             			"processInvocation",
                              		lv_processInvocation_9_0, 
                              		"ProcessInvocation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,14,FOLLOW_14_in_ruleRoleBehavior2744); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getRoleBehaviorAccess().getLeftCurlyBracketKeyword_1_5());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1304:1: ( (lv_processes_11_0= ruleProcess ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==35) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1305:1: (lv_processes_11_0= ruleProcess )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1305:1: (lv_processes_11_0= ruleProcess )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1306:3: lv_processes_11_0= ruleProcess
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getRoleBehaviorAccess().getProcessesProcessParserRuleCall_1_6_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleProcess_in_ruleRoleBehavior2765);
                    	    lv_processes_11_0=ruleProcess();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRoleBehaviorRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"processes",
                    	              		lv_processes_11_0, 
                    	              		"Process");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,15,FOLLOW_15_in_ruleRoleBehavior2778); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getRoleBehaviorAccess().getRightCurlyBracketKeyword_1_7());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleBehavior"


    // $ANTLR start "entryRuleProcess"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1334:1: entryRuleProcess returns [EObject current=null] : iv_ruleProcess= ruleProcess EOF ;
    public final EObject entryRuleProcess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcess = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1335:2: (iv_ruleProcess= ruleProcess EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1336:2: iv_ruleProcess= ruleProcess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcessRule()); 
            }
            pushFollow(FOLLOW_ruleProcess_in_entryRuleProcess2815);
            iv_ruleProcess=ruleProcess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcess; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleProcess2825); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcess"


    // $ANTLR start "ruleProcess"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1343:1: ruleProcess returns [EObject current=null] : (otherlv_0= 'process' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '=' ( (lv_processExpr_3_0= ruleProcessExpression ) ) ) ;
    public final EObject ruleProcess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_processExpr_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1346:28: ( (otherlv_0= 'process' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '=' ( (lv_processExpr_3_0= ruleProcessExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1347:1: (otherlv_0= 'process' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '=' ( (lv_processExpr_3_0= ruleProcessExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1347:1: (otherlv_0= 'process' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '=' ( (lv_processExpr_3_0= ruleProcessExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1347:3: otherlv_0= 'process' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '=' ( (lv_processExpr_3_0= ruleProcessExpression ) )
            {
            otherlv_0=(Token)match(input,35,FOLLOW_35_in_ruleProcess2862); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1351:1: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1352:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1352:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1353:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProcessAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleProcess2883);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProcessRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,29,FOLLOW_29_in_ruleProcess2895); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getProcessAccess().getEqualsSignKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1373:1: ( (lv_processExpr_3_0= ruleProcessExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1374:1: (lv_processExpr_3_0= ruleProcessExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1374:1: (lv_processExpr_3_0= ruleProcessExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1375:3: lv_processExpr_3_0= ruleProcessExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProcessAccess().getProcessExprProcessExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_ruleProcess2916);
            lv_processExpr_3_0=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProcessRule());
              	        }
                     		set(
                     			current, 
                     			"processExpr",
                      		lv_processExpr_3_0, 
                      		"ProcessExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcess"


    // $ANTLR start "entryRuleProcessExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1399:1: entryRuleProcessExpression returns [EObject current=null] : iv_ruleProcessExpression= ruleProcessExpression EOF ;
    public final EObject entryRuleProcessExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcessExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1400:2: (iv_ruleProcessExpression= ruleProcessExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1401:2: iv_ruleProcessExpression= ruleProcessExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcessExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_entryRuleProcessExpression2952);
            iv_ruleProcessExpression=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcessExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleProcessExpression2962); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcessExpression"


    // $ANTLR start "ruleProcessExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1408:1: ruleProcessExpression returns [EObject current=null] : ( ( () otherlv_1= 'quit' ) | this_ActionPrefix_2= ruleActionPrefix | this_NondeterministicChoice_3= ruleNondeterministicChoice | this_IfThenElse_4= ruleIfThenElse | this_ProcessInvocation_5= ruleProcessInvocation ) ;
    public final EObject ruleProcessExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_ActionPrefix_2 = null;

        EObject this_NondeterministicChoice_3 = null;

        EObject this_IfThenElse_4 = null;

        EObject this_ProcessInvocation_5 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1411:28: ( ( ( () otherlv_1= 'quit' ) | this_ActionPrefix_2= ruleActionPrefix | this_NondeterministicChoice_3= ruleNondeterministicChoice | this_IfThenElse_4= ruleIfThenElse | this_ProcessInvocation_5= ruleProcessInvocation ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1412:1: ( ( () otherlv_1= 'quit' ) | this_ActionPrefix_2= ruleActionPrefix | this_NondeterministicChoice_3= ruleNondeterministicChoice | this_IfThenElse_4= ruleIfThenElse | this_ProcessInvocation_5= ruleProcessInvocation )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1412:1: ( ( () otherlv_1= 'quit' ) | this_ActionPrefix_2= ruleActionPrefix | this_NondeterministicChoice_3= ruleNondeterministicChoice | this_IfThenElse_4= ruleIfThenElse | this_ProcessInvocation_5= ruleProcessInvocation )
            int alt14=5;
            switch ( input.LA(1) ) {
            case 36:
                {
                alt14=1;
                }
                break;
            case RULE_ID:
                {
                int LA14_2 = input.LA(2);

                if ( (LA14_2==29||LA14_2==37||LA14_2==43||LA14_2==46) ) {
                    alt14=2;
                }
                else if ( (LA14_2==EOF||LA14_2==15||(LA14_2>=34 && LA14_2<=35)||(LA14_2>=39 && LA14_2<=40)) ) {
                    alt14=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 2, input);

                    throw nvae;
                }
                }
                break;
            case 47:
            case 48:
            case 58:
                {
                alt14=2;
                }
                break;
            case 38:
                {
                alt14=3;
                }
                break;
            case 41:
                {
                alt14=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1412:2: ( () otherlv_1= 'quit' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1412:2: ( () otherlv_1= 'quit' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1412:3: () otherlv_1= 'quit'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1412:3: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1413:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getProcessExpressionAccess().getQuitTermAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,36,FOLLOW_36_in_ruleProcessExpression3009); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getProcessExpressionAccess().getQuitKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1424:5: this_ActionPrefix_2= ruleActionPrefix
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProcessExpressionAccess().getActionPrefixParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleActionPrefix_in_ruleProcessExpression3038);
                    this_ActionPrefix_2=ruleActionPrefix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ActionPrefix_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1434:5: this_NondeterministicChoice_3= ruleNondeterministicChoice
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProcessExpressionAccess().getNondeterministicChoiceParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNondeterministicChoice_in_ruleProcessExpression3065);
                    this_NondeterministicChoice_3=ruleNondeterministicChoice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NondeterministicChoice_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1444:5: this_IfThenElse_4= ruleIfThenElse
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProcessExpressionAccess().getIfThenElseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleIfThenElse_in_ruleProcessExpression3092);
                    this_IfThenElse_4=ruleIfThenElse();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IfThenElse_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1454:5: this_ProcessInvocation_5= ruleProcessInvocation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getProcessExpressionAccess().getProcessInvocationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleProcessInvocation_in_ruleProcessExpression3119);
                    this_ProcessInvocation_5=ruleProcessInvocation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProcessInvocation_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcessExpression"


    // $ANTLR start "entryRuleActionPrefix"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1470:1: entryRuleActionPrefix returns [EObject current=null] : iv_ruleActionPrefix= ruleActionPrefix EOF ;
    public final EObject entryRuleActionPrefix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionPrefix = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1471:2: (iv_ruleActionPrefix= ruleActionPrefix EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1472:2: iv_ruleActionPrefix= ruleActionPrefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionPrefixRule()); 
            }
            pushFollow(FOLLOW_ruleActionPrefix_in_entryRuleActionPrefix3154);
            iv_ruleActionPrefix=ruleActionPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionPrefix; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleActionPrefix3164); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionPrefix"


    // $ANTLR start "ruleActionPrefix"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1479:1: ruleActionPrefix returns [EObject current=null] : ( ( (lv_action_0_0= ruleAction ) ) otherlv_1= '.' ( (lv_processExpr_2_0= ruleProcessExpression ) ) ) ;
    public final EObject ruleActionPrefix() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_action_0_0 = null;

        EObject lv_processExpr_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1482:28: ( ( ( (lv_action_0_0= ruleAction ) ) otherlv_1= '.' ( (lv_processExpr_2_0= ruleProcessExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1483:1: ( ( (lv_action_0_0= ruleAction ) ) otherlv_1= '.' ( (lv_processExpr_2_0= ruleProcessExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1483:1: ( ( (lv_action_0_0= ruleAction ) ) otherlv_1= '.' ( (lv_processExpr_2_0= ruleProcessExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1483:2: ( (lv_action_0_0= ruleAction ) ) otherlv_1= '.' ( (lv_processExpr_2_0= ruleProcessExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1483:2: ( (lv_action_0_0= ruleAction ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1484:1: (lv_action_0_0= ruleAction )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1484:1: (lv_action_0_0= ruleAction )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1485:3: lv_action_0_0= ruleAction
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getActionPrefixAccess().getActionActionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleAction_in_ruleActionPrefix3210);
            lv_action_0_0=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getActionPrefixRule());
              	        }
                     		set(
                     			current, 
                     			"action",
                      		lv_action_0_0, 
                      		"Action");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,37,FOLLOW_37_in_ruleActionPrefix3222); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getActionPrefixAccess().getFullStopKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1505:1: ( (lv_processExpr_2_0= ruleProcessExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1506:1: (lv_processExpr_2_0= ruleProcessExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1506:1: (lv_processExpr_2_0= ruleProcessExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1507:3: lv_processExpr_2_0= ruleProcessExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getActionPrefixAccess().getProcessExprProcessExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_ruleActionPrefix3243);
            lv_processExpr_2_0=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getActionPrefixRule());
              	        }
                     		set(
                     			current, 
                     			"processExpr",
                      		lv_processExpr_2_0, 
                      		"ProcessExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionPrefix"


    // $ANTLR start "entryRuleNondeterministicChoice"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1531:1: entryRuleNondeterministicChoice returns [EObject current=null] : iv_ruleNondeterministicChoice= ruleNondeterministicChoice EOF ;
    public final EObject entryRuleNondeterministicChoice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNondeterministicChoice = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1532:2: (iv_ruleNondeterministicChoice= ruleNondeterministicChoice EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1533:2: iv_ruleNondeterministicChoice= ruleNondeterministicChoice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNondeterministicChoiceRule()); 
            }
            pushFollow(FOLLOW_ruleNondeterministicChoice_in_entryRuleNondeterministicChoice3279);
            iv_ruleNondeterministicChoice=ruleNondeterministicChoice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNondeterministicChoice; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNondeterministicChoice3289); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNondeterministicChoice"


    // $ANTLR start "ruleNondeterministicChoice"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1540:1: ruleNondeterministicChoice returns [EObject current=null] : (otherlv_0= '(' ( (lv_first_1_0= ruleProcessExpression ) ) otherlv_2= '+' ( (lv_second_3_0= ruleProcessExpression ) ) otherlv_4= ')' ) ;
    public final EObject ruleNondeterministicChoice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_first_1_0 = null;

        EObject lv_second_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1543:28: ( (otherlv_0= '(' ( (lv_first_1_0= ruleProcessExpression ) ) otherlv_2= '+' ( (lv_second_3_0= ruleProcessExpression ) ) otherlv_4= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1544:1: (otherlv_0= '(' ( (lv_first_1_0= ruleProcessExpression ) ) otherlv_2= '+' ( (lv_second_3_0= ruleProcessExpression ) ) otherlv_4= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1544:1: (otherlv_0= '(' ( (lv_first_1_0= ruleProcessExpression ) ) otherlv_2= '+' ( (lv_second_3_0= ruleProcessExpression ) ) otherlv_4= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1544:3: otherlv_0= '(' ( (lv_first_1_0= ruleProcessExpression ) ) otherlv_2= '+' ( (lv_second_3_0= ruleProcessExpression ) ) otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,38,FOLLOW_38_in_ruleNondeterministicChoice3326); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNondeterministicChoiceAccess().getLeftParenthesisKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1548:1: ( (lv_first_1_0= ruleProcessExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1549:1: (lv_first_1_0= ruleProcessExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1549:1: (lv_first_1_0= ruleProcessExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1550:3: lv_first_1_0= ruleProcessExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNondeterministicChoiceAccess().getFirstProcessExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_ruleNondeterministicChoice3347);
            lv_first_1_0=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNondeterministicChoiceRule());
              	        }
                     		set(
                     			current, 
                     			"first",
                      		lv_first_1_0, 
                      		"ProcessExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,39,FOLLOW_39_in_ruleNondeterministicChoice3359); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNondeterministicChoiceAccess().getPlusSignKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1570:1: ( (lv_second_3_0= ruleProcessExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1571:1: (lv_second_3_0= ruleProcessExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1571:1: (lv_second_3_0= ruleProcessExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1572:3: lv_second_3_0= ruleProcessExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNondeterministicChoiceAccess().getSecondProcessExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_ruleNondeterministicChoice3380);
            lv_second_3_0=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNondeterministicChoiceRule());
              	        }
                     		set(
                     			current, 
                     			"second",
                      		lv_second_3_0, 
                      		"ProcessExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_40_in_ruleNondeterministicChoice3392); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getNondeterministicChoiceAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNondeterministicChoice"


    // $ANTLR start "entryRuleIfThenElse"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1600:1: entryRuleIfThenElse returns [EObject current=null] : iv_ruleIfThenElse= ruleIfThenElse EOF ;
    public final EObject entryRuleIfThenElse() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfThenElse = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1601:2: (iv_ruleIfThenElse= ruleIfThenElse EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1602:2: iv_ruleIfThenElse= ruleIfThenElse EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfThenElseRule()); 
            }
            pushFollow(FOLLOW_ruleIfThenElse_in_entryRuleIfThenElse3428);
            iv_ruleIfThenElse=ruleIfThenElse();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfThenElse; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfThenElse3438); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfThenElse"


    // $ANTLR start "ruleIfThenElse"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1609:1: ruleIfThenElse returns [EObject current=null] : (otherlv_0= 'if' otherlv_1= '(' ( (lv_guard_2_0= ruleGuard ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_ifProcessExpr_5_0= ruleProcessExpression ) ) otherlv_6= '}' otherlv_7= 'else' otherlv_8= '{' ( (lv_elseProcessExpr_9_0= ruleProcessExpression ) ) otherlv_10= '}' ) ;
    public final EObject ruleIfThenElse() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_guard_2_0 = null;

        EObject lv_ifProcessExpr_5_0 = null;

        EObject lv_elseProcessExpr_9_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1612:28: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_guard_2_0= ruleGuard ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_ifProcessExpr_5_0= ruleProcessExpression ) ) otherlv_6= '}' otherlv_7= 'else' otherlv_8= '{' ( (lv_elseProcessExpr_9_0= ruleProcessExpression ) ) otherlv_10= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1613:1: (otherlv_0= 'if' otherlv_1= '(' ( (lv_guard_2_0= ruleGuard ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_ifProcessExpr_5_0= ruleProcessExpression ) ) otherlv_6= '}' otherlv_7= 'else' otherlv_8= '{' ( (lv_elseProcessExpr_9_0= ruleProcessExpression ) ) otherlv_10= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1613:1: (otherlv_0= 'if' otherlv_1= '(' ( (lv_guard_2_0= ruleGuard ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_ifProcessExpr_5_0= ruleProcessExpression ) ) otherlv_6= '}' otherlv_7= 'else' otherlv_8= '{' ( (lv_elseProcessExpr_9_0= ruleProcessExpression ) ) otherlv_10= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1613:3: otherlv_0= 'if' otherlv_1= '(' ( (lv_guard_2_0= ruleGuard ) ) otherlv_3= ')' otherlv_4= '{' ( (lv_ifProcessExpr_5_0= ruleProcessExpression ) ) otherlv_6= '}' otherlv_7= 'else' otherlv_8= '{' ( (lv_elseProcessExpr_9_0= ruleProcessExpression ) ) otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,41,FOLLOW_41_in_ruleIfThenElse3475); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfThenElseAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleIfThenElse3487); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfThenElseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1621:1: ( (lv_guard_2_0= ruleGuard ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1622:1: (lv_guard_2_0= ruleGuard )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1622:1: (lv_guard_2_0= ruleGuard )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1623:3: lv_guard_2_0= ruleGuard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfThenElseAccess().getGuardGuardParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleGuard_in_ruleIfThenElse3508);
            lv_guard_2_0=ruleGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfThenElseRule());
              	        }
                     		set(
                     			current, 
                     			"guard",
                      		lv_guard_2_0, 
                      		"Guard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,40,FOLLOW_40_in_ruleIfThenElse3520); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfThenElseAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,14,FOLLOW_14_in_ruleIfThenElse3532); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getIfThenElseAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1647:1: ( (lv_ifProcessExpr_5_0= ruleProcessExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1648:1: (lv_ifProcessExpr_5_0= ruleProcessExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1648:1: (lv_ifProcessExpr_5_0= ruleProcessExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1649:3: lv_ifProcessExpr_5_0= ruleProcessExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfThenElseAccess().getIfProcessExprProcessExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_ruleIfThenElse3553);
            lv_ifProcessExpr_5_0=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfThenElseRule());
              	        }
                     		set(
                     			current, 
                     			"ifProcessExpr",
                      		lv_ifProcessExpr_5_0, 
                      		"ProcessExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,15,FOLLOW_15_in_ruleIfThenElse3565); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getIfThenElseAccess().getRightCurlyBracketKeyword_6());
                  
            }
            otherlv_7=(Token)match(input,42,FOLLOW_42_in_ruleIfThenElse3577); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getIfThenElseAccess().getElseKeyword_7());
                  
            }
            otherlv_8=(Token)match(input,14,FOLLOW_14_in_ruleIfThenElse3589); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getIfThenElseAccess().getLeftCurlyBracketKeyword_8());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1677:1: ( (lv_elseProcessExpr_9_0= ruleProcessExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1678:1: (lv_elseProcessExpr_9_0= ruleProcessExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1678:1: (lv_elseProcessExpr_9_0= ruleProcessExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1679:3: lv_elseProcessExpr_9_0= ruleProcessExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfThenElseAccess().getElseProcessExprProcessExpressionParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleProcessExpression_in_ruleIfThenElse3610);
            lv_elseProcessExpr_9_0=ruleProcessExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfThenElseRule());
              	        }
                     		set(
                     			current, 
                     			"elseProcessExpr",
                      		lv_elseProcessExpr_9_0, 
                      		"ProcessExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_10=(Token)match(input,15,FOLLOW_15_in_ruleIfThenElse3622); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getIfThenElseAccess().getRightCurlyBracketKeyword_10());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfThenElse"


    // $ANTLR start "entryRuleProcessInvocation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1707:1: entryRuleProcessInvocation returns [EObject current=null] : iv_ruleProcessInvocation= ruleProcessInvocation EOF ;
    public final EObject entryRuleProcessInvocation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcessInvocation = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1708:2: (iv_ruleProcessInvocation= ruleProcessInvocation EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1709:2: iv_ruleProcessInvocation= ruleProcessInvocation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcessInvocationRule()); 
            }
            pushFollow(FOLLOW_ruleProcessInvocation_in_entryRuleProcessInvocation3658);
            iv_ruleProcessInvocation=ruleProcessInvocation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcessInvocation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleProcessInvocation3668); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcessInvocation"


    // $ANTLR start "ruleProcessInvocation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1716:1: ruleProcessInvocation returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleProcessInvocation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1719:28: ( ( (otherlv_0= RULE_ID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1720:1: ( (otherlv_0= RULE_ID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1720:1: ( (otherlv_0= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1721:1: (otherlv_0= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1721:1: (otherlv_0= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1722:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getProcessInvocationRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleProcessInvocation3712); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getProcessInvocationAccess().getProcessProcessCrossReference_0()); 
              	
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcessInvocation"


    // $ANTLR start "entryRuleAction"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1741:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1742:2: (iv_ruleAction= ruleAction EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1743:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_ruleAction_in_entryRuleAction3747);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAction3757); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1750:1: ruleAction returns [EObject current=null] : (this_AbstractAssignment_0= ruleAbstractAssignment | this_AbstractMessageCall_1= ruleAbstractMessageCall | this_OperationCall_2= ruleOperationCall | this_ComponentAttributeSetter_3= ruleComponentAttributeSetter | this_RoleAttributeSetter_4= ruleRoleAttributeSetter | this_Label_5= ruleLabel ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        EObject this_AbstractAssignment_0 = null;

        EObject this_AbstractMessageCall_1 = null;

        EObject this_OperationCall_2 = null;

        EObject this_ComponentAttributeSetter_3 = null;

        EObject this_RoleAttributeSetter_4 = null;

        EObject this_Label_5 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1753:28: ( (this_AbstractAssignment_0= ruleAbstractAssignment | this_AbstractMessageCall_1= ruleAbstractMessageCall | this_OperationCall_2= ruleOperationCall | this_ComponentAttributeSetter_3= ruleComponentAttributeSetter | this_RoleAttributeSetter_4= ruleRoleAttributeSetter | this_Label_5= ruleLabel ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1754:1: (this_AbstractAssignment_0= ruleAbstractAssignment | this_AbstractMessageCall_1= ruleAbstractMessageCall | this_OperationCall_2= ruleOperationCall | this_ComponentAttributeSetter_3= ruleComponentAttributeSetter | this_RoleAttributeSetter_4= ruleRoleAttributeSetter | this_Label_5= ruleLabel )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1754:1: (this_AbstractAssignment_0= ruleAbstractAssignment | this_AbstractMessageCall_1= ruleAbstractMessageCall | this_OperationCall_2= ruleOperationCall | this_ComponentAttributeSetter_3= ruleComponentAttributeSetter | this_RoleAttributeSetter_4= ruleRoleAttributeSetter | this_Label_5= ruleLabel )
            int alt15=6;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1755:5: this_AbstractAssignment_0= ruleAbstractAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActionAccess().getAbstractAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractAssignment_in_ruleAction3804);
                    this_AbstractAssignment_0=ruleAbstractAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractAssignment_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1765:5: this_AbstractMessageCall_1= ruleAbstractMessageCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActionAccess().getAbstractMessageCallParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractMessageCall_in_ruleAction3831);
                    this_AbstractMessageCall_1=ruleAbstractMessageCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractMessageCall_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1775:5: this_OperationCall_2= ruleOperationCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActionAccess().getOperationCallParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOperationCall_in_ruleAction3858);
                    this_OperationCall_2=ruleOperationCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OperationCall_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1785:5: this_ComponentAttributeSetter_3= ruleComponentAttributeSetter
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActionAccess().getComponentAttributeSetterParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComponentAttributeSetter_in_ruleAction3885);
                    this_ComponentAttributeSetter_3=ruleComponentAttributeSetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentAttributeSetter_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1795:5: this_RoleAttributeSetter_4= ruleRoleAttributeSetter
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActionAccess().getRoleAttributeSetterParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRoleAttributeSetter_in_ruleAction3912);
                    this_RoleAttributeSetter_4=ruleRoleAttributeSetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RoleAttributeSetter_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1805:5: this_Label_5= ruleLabel
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActionAccess().getLabelParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLabel_in_ruleAction3939);
                    this_Label_5=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Label_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleAbstractAssignment"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1821:1: entryRuleAbstractAssignment returns [EObject current=null] : iv_ruleAbstractAssignment= ruleAbstractAssignment EOF ;
    public final EObject entryRuleAbstractAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractAssignment = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1822:2: (iv_ruleAbstractAssignment= ruleAbstractAssignment EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1823:2: iv_ruleAbstractAssignment= ruleAbstractAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractAssignmentRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractAssignment_in_entryRuleAbstractAssignment3974);
            iv_ruleAbstractAssignment=ruleAbstractAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractAssignment; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractAssignment3984); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractAssignment"


    // $ANTLR start "ruleAbstractAssignment"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1830:1: ruleAbstractAssignment returns [EObject current=null] : ( ( () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')' ) | ( () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')' ) ) ;
    public final EObject ruleAbstractAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_roleInst_1_0 = null;

        EObject lv_compInstance_7_0 = null;

        EObject lv_roleInst_10_0 = null;

        EObject lv_compInstance_16_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1833:28: ( ( ( () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')' ) | ( () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')' ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1834:1: ( ( () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')' ) | ( () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')' ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1834:1: ( ( () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')' ) | ( () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_ID) ) {
                int LA16_1 = input.LA(2);

                if ( (LA16_1==43) ) {
                    int LA16_2 = input.LA(3);

                    if ( (LA16_2==44) ) {
                        alt16=1;
                    }
                    else if ( (LA16_2==45) ) {
                        alt16=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 16, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1834:2: ( () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1834:2: ( () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1834:3: () ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) ) otherlv_2= '<-' otherlv_3= 'get' otherlv_4= '(' ( (otherlv_5= RULE_ID ) ) otherlv_6= ',' ( (lv_compInstance_7_0= ruleComponentInstance ) ) otherlv_8= ')'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1834:3: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1835:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAbstractAssignmentAccess().getGetAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1840:2: ( (lv_roleInst_1_0= ruleRoleInstanceVariable ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1841:1: (lv_roleInst_1_0= ruleRoleInstanceVariable )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1841:1: (lv_roleInst_1_0= ruleRoleInstanceVariable )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1842:3: lv_roleInst_1_0= ruleRoleInstanceVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAbstractAssignmentAccess().getRoleInstRoleInstanceVariableParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleRoleInstanceVariable_in_ruleAbstractAssignment4040);
                    lv_roleInst_1_0=ruleRoleInstanceVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAbstractAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"roleInst",
                              		lv_roleInst_1_0, 
                              		"RoleInstanceVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,43,FOLLOW_43_in_ruleAbstractAssignment4052); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAbstractAssignmentAccess().getLessThanSignHyphenMinusKeyword_0_2());
                          
                    }
                    otherlv_3=(Token)match(input,44,FOLLOW_44_in_ruleAbstractAssignment4064); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getAbstractAssignmentAccess().getGetKeyword_0_3());
                          
                    }
                    otherlv_4=(Token)match(input,38,FOLLOW_38_in_ruleAbstractAssignment4076); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAbstractAssignmentAccess().getLeftParenthesisKeyword_0_4());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1870:1: ( (otherlv_5= RULE_ID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1871:1: (otherlv_5= RULE_ID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1871:1: (otherlv_5= RULE_ID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1872:3: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getAbstractAssignmentRule());
                      	        }
                              
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAbstractAssignment4096); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_5, grammarAccess.getAbstractAssignmentAccess().getRoleTypeRefRoleTypeCrossReference_0_5_0()); 
                      	
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,23,FOLLOW_23_in_ruleAbstractAssignment4108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getAbstractAssignmentAccess().getCommaKeyword_0_6());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1887:1: ( (lv_compInstance_7_0= ruleComponentInstance ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1888:1: (lv_compInstance_7_0= ruleComponentInstance )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1888:1: (lv_compInstance_7_0= ruleComponentInstance )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1889:3: lv_compInstance_7_0= ruleComponentInstance
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAbstractAssignmentAccess().getCompInstanceComponentInstanceParserRuleCall_0_7_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleComponentInstance_in_ruleAbstractAssignment4129);
                    lv_compInstance_7_0=ruleComponentInstance();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAbstractAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"compInstance",
                              		lv_compInstance_7_0, 
                              		"ComponentInstance");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,40,FOLLOW_40_in_ruleAbstractAssignment4141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAbstractAssignmentAccess().getRightParenthesisKeyword_0_8());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1910:6: ( () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1910:6: ( () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1910:7: () ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) ) otherlv_11= '<-' otherlv_12= 'create' otherlv_13= '(' ( (otherlv_14= RULE_ID ) ) otherlv_15= ',' ( (lv_compInstance_16_0= ruleComponentInstance ) ) otherlv_17= ')'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1910:7: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1911:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAbstractAssignmentAccess().getCreateAssignmentAction_1_0(),
                                  current);
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1916:2: ( (lv_roleInst_10_0= ruleRoleInstanceVariable ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1917:1: (lv_roleInst_10_0= ruleRoleInstanceVariable )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1917:1: (lv_roleInst_10_0= ruleRoleInstanceVariable )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1918:3: lv_roleInst_10_0= ruleRoleInstanceVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAbstractAssignmentAccess().getRoleInstRoleInstanceVariableParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleRoleInstanceVariable_in_ruleAbstractAssignment4179);
                    lv_roleInst_10_0=ruleRoleInstanceVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAbstractAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"roleInst",
                              		lv_roleInst_10_0, 
                              		"RoleInstanceVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,43,FOLLOW_43_in_ruleAbstractAssignment4191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getAbstractAssignmentAccess().getLessThanSignHyphenMinusKeyword_1_2());
                          
                    }
                    otherlv_12=(Token)match(input,45,FOLLOW_45_in_ruleAbstractAssignment4203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAbstractAssignmentAccess().getCreateKeyword_1_3());
                          
                    }
                    otherlv_13=(Token)match(input,38,FOLLOW_38_in_ruleAbstractAssignment4215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getAbstractAssignmentAccess().getLeftParenthesisKeyword_1_4());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1946:1: ( (otherlv_14= RULE_ID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1947:1: (otherlv_14= RULE_ID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1947:1: (otherlv_14= RULE_ID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1948:3: otherlv_14= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getAbstractAssignmentRule());
                      	        }
                              
                    }
                    otherlv_14=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAbstractAssignment4235); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_14, grammarAccess.getAbstractAssignmentAccess().getRoleTypeRefRoleTypeCrossReference_1_5_0()); 
                      	
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,23,FOLLOW_23_in_ruleAbstractAssignment4247); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getAbstractAssignmentAccess().getCommaKeyword_1_6());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1963:1: ( (lv_compInstance_16_0= ruleComponentInstance ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1964:1: (lv_compInstance_16_0= ruleComponentInstance )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1964:1: (lv_compInstance_16_0= ruleComponentInstance )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1965:3: lv_compInstance_16_0= ruleComponentInstance
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAbstractAssignmentAccess().getCompInstanceComponentInstanceParserRuleCall_1_7_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleComponentInstance_in_ruleAbstractAssignment4268);
                    lv_compInstance_16_0=ruleComponentInstance();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAbstractAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"compInstance",
                              		lv_compInstance_16_0, 
                              		"ComponentInstance");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,40,FOLLOW_40_in_ruleAbstractAssignment4280); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getAbstractAssignmentAccess().getRightParenthesisKeyword_1_8());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractAssignment"


    // $ANTLR start "entryRuleAbstractMessageCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1993:1: entryRuleAbstractMessageCall returns [EObject current=null] : iv_ruleAbstractMessageCall= ruleAbstractMessageCall EOF ;
    public final EObject entryRuleAbstractMessageCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractMessageCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1994:2: (iv_ruleAbstractMessageCall= ruleAbstractMessageCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:1995:2: iv_ruleAbstractMessageCall= ruleAbstractMessageCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractMessageCallRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractMessageCall_in_entryRuleAbstractMessageCall4317);
            iv_ruleAbstractMessageCall=ruleAbstractMessageCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractMessageCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractMessageCall4327); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractMessageCall"


    // $ANTLR start "ruleAbstractMessageCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2002:1: ruleAbstractMessageCall returns [EObject current=null] : (this_OutgoingMessageCall_0= ruleOutgoingMessageCall | this_IncomingMessageCall_1= ruleIncomingMessageCall ) ;
    public final EObject ruleAbstractMessageCall() throws RecognitionException {
        EObject current = null;

        EObject this_OutgoingMessageCall_0 = null;

        EObject this_IncomingMessageCall_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2005:28: ( (this_OutgoingMessageCall_0= ruleOutgoingMessageCall | this_IncomingMessageCall_1= ruleIncomingMessageCall ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2006:1: (this_OutgoingMessageCall_0= ruleOutgoingMessageCall | this_IncomingMessageCall_1= ruleIncomingMessageCall )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2006:1: (this_OutgoingMessageCall_0= ruleOutgoingMessageCall | this_IncomingMessageCall_1= ruleIncomingMessageCall )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==47) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2007:5: this_OutgoingMessageCall_0= ruleOutgoingMessageCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractMessageCallAccess().getOutgoingMessageCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOutgoingMessageCall_in_ruleAbstractMessageCall4374);
                    this_OutgoingMessageCall_0=ruleOutgoingMessageCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OutgoingMessageCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2017:5: this_IncomingMessageCall_1= ruleIncomingMessageCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractMessageCallAccess().getIncomingMessageCallParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleIncomingMessageCall_in_ruleAbstractMessageCall4401);
                    this_IncomingMessageCall_1=ruleIncomingMessageCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IncomingMessageCall_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractMessageCall"


    // $ANTLR start "entryRuleOutgoingMessageCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2033:1: entryRuleOutgoingMessageCall returns [EObject current=null] : iv_ruleOutgoingMessageCall= ruleOutgoingMessageCall EOF ;
    public final EObject entryRuleOutgoingMessageCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutgoingMessageCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2034:2: (iv_ruleOutgoingMessageCall= ruleOutgoingMessageCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2035:2: iv_ruleOutgoingMessageCall= ruleOutgoingMessageCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutgoingMessageCallRule()); 
            }
            pushFollow(FOLLOW_ruleOutgoingMessageCall_in_entryRuleOutgoingMessageCall4436);
            iv_ruleOutgoingMessageCall=ruleOutgoingMessageCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutgoingMessageCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOutgoingMessageCall4446); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutgoingMessageCall"


    // $ANTLR start "ruleOutgoingMessageCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2042:1: ruleOutgoingMessageCall returns [EObject current=null] : ( ( (lv_receiver_0_0= ruleAbstractRoleInstanceReference ) ) otherlv_1= '!' ( (lv_msgName_2_0= ruleValidID ) ) ( (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) ) ;
    public final EObject ruleOutgoingMessageCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_receiver_0_0 = null;

        AntlrDatatypeRuleToken lv_msgName_2_0 = null;

        EObject lv_actualRoleParamsBlock_3_0 = null;

        EObject lv_actualDataParamsBlock_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2045:28: ( ( ( (lv_receiver_0_0= ruleAbstractRoleInstanceReference ) ) otherlv_1= '!' ( (lv_msgName_2_0= ruleValidID ) ) ( (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2046:1: ( ( (lv_receiver_0_0= ruleAbstractRoleInstanceReference ) ) otherlv_1= '!' ( (lv_msgName_2_0= ruleValidID ) ) ( (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2046:1: ( ( (lv_receiver_0_0= ruleAbstractRoleInstanceReference ) ) otherlv_1= '!' ( (lv_msgName_2_0= ruleValidID ) ) ( (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2046:2: ( (lv_receiver_0_0= ruleAbstractRoleInstanceReference ) ) otherlv_1= '!' ( (lv_msgName_2_0= ruleValidID ) ) ( (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2046:2: ( (lv_receiver_0_0= ruleAbstractRoleInstanceReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2047:1: (lv_receiver_0_0= ruleAbstractRoleInstanceReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2047:1: (lv_receiver_0_0= ruleAbstractRoleInstanceReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2048:3: lv_receiver_0_0= ruleAbstractRoleInstanceReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOutgoingMessageCallAccess().getReceiverAbstractRoleInstanceReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleAbstractRoleInstanceReference_in_ruleOutgoingMessageCall4492);
            lv_receiver_0_0=ruleAbstractRoleInstanceReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOutgoingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"receiver",
                      		lv_receiver_0_0, 
                      		"AbstractRoleInstanceReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,46,FOLLOW_46_in_ruleOutgoingMessageCall4504); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getOutgoingMessageCallAccess().getExclamationMarkKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2068:1: ( (lv_msgName_2_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2069:1: (lv_msgName_2_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2069:1: (lv_msgName_2_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2070:3: lv_msgName_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOutgoingMessageCallAccess().getMsgNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleOutgoingMessageCall4525);
            lv_msgName_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOutgoingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"msgName",
                      		lv_msgName_2_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2086:2: ( (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2087:1: (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2087:1: (lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2088:3: lv_actualRoleParamsBlock_3_0= ruleActualRoleParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOutgoingMessageCallAccess().getActualRoleParamsBlockActualRoleParamsBlockParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleActualRoleParamsBlock_in_ruleOutgoingMessageCall4546);
            lv_actualRoleParamsBlock_3_0=ruleActualRoleParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOutgoingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"actualRoleParamsBlock",
                      		lv_actualRoleParamsBlock_3_0, 
                      		"ActualRoleParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2104:2: ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2105:1: (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2105:1: (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2106:3: lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOutgoingMessageCallAccess().getActualDataParamsBlockActualDataParamsBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleActualDataParamsBlock_in_ruleOutgoingMessageCall4567);
            lv_actualDataParamsBlock_4_0=ruleActualDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOutgoingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"actualDataParamsBlock",
                      		lv_actualDataParamsBlock_4_0, 
                      		"ActualDataParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutgoingMessageCall"


    // $ANTLR start "entryRuleIncomingMessageCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2130:1: entryRuleIncomingMessageCall returns [EObject current=null] : iv_ruleIncomingMessageCall= ruleIncomingMessageCall EOF ;
    public final EObject entryRuleIncomingMessageCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncomingMessageCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2131:2: (iv_ruleIncomingMessageCall= ruleIncomingMessageCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2132:2: iv_ruleIncomingMessageCall= ruleIncomingMessageCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncomingMessageCallRule()); 
            }
            pushFollow(FOLLOW_ruleIncomingMessageCall_in_entryRuleIncomingMessageCall4603);
            iv_ruleIncomingMessageCall=ruleIncomingMessageCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncomingMessageCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIncomingMessageCall4613); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncomingMessageCall"


    // $ANTLR start "ruleIncomingMessageCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2139:1: ruleIncomingMessageCall returns [EObject current=null] : (otherlv_0= '?' ( (lv_msgName_1_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) ) ;
    public final EObject ruleIncomingMessageCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_msgName_1_0 = null;

        EObject lv_formalRoleParamsBlock_2_0 = null;

        EObject lv_formalDataParamsBlock_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2142:28: ( (otherlv_0= '?' ( (lv_msgName_1_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2143:1: (otherlv_0= '?' ( (lv_msgName_1_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2143:1: (otherlv_0= '?' ( (lv_msgName_1_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2143:3: otherlv_0= '?' ( (lv_msgName_1_0= ruleValidID ) ) ( (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock ) ) ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_47_in_ruleIncomingMessageCall4650); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIncomingMessageCallAccess().getQuestionMarkKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2147:1: ( (lv_msgName_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2148:1: (lv_msgName_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2148:1: (lv_msgName_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2149:3: lv_msgName_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIncomingMessageCallAccess().getMsgNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleIncomingMessageCall4671);
            lv_msgName_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIncomingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"msgName",
                      		lv_msgName_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2165:2: ( (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2166:1: (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2166:1: (lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2167:3: lv_formalRoleParamsBlock_2_0= ruleFormalRoleParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIncomingMessageCallAccess().getFormalRoleParamsBlockFormalRoleParamsBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFormalRoleParamsBlock_in_ruleIncomingMessageCall4692);
            lv_formalRoleParamsBlock_2_0=ruleFormalRoleParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIncomingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"formalRoleParamsBlock",
                      		lv_formalRoleParamsBlock_2_0, 
                      		"FormalRoleParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2183:2: ( (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2184:1: (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2184:1: (lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2185:3: lv_formalDataParamsBlock_3_0= ruleFormalDataParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIncomingMessageCallAccess().getFormalDataParamsBlockFormalDataParamsBlockParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFormalDataParamsBlock_in_ruleIncomingMessageCall4713);
            lv_formalDataParamsBlock_3_0=ruleFormalDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIncomingMessageCallRule());
              	        }
                     		set(
                     			current, 
                     			"formalDataParamsBlock",
                      		lv_formalDataParamsBlock_3_0, 
                      		"FormalDataParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncomingMessageCall"


    // $ANTLR start "entryRuleOperationCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2209:1: entryRuleOperationCall returns [EObject current=null] : iv_ruleOperationCall= ruleOperationCall EOF ;
    public final EObject entryRuleOperationCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2210:2: (iv_ruleOperationCall= ruleOperationCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2211:2: iv_ruleOperationCall= ruleOperationCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationCallRule()); 
            }
            pushFollow(FOLLOW_ruleOperationCall_in_entryRuleOperationCall4749);
            iv_ruleOperationCall=ruleOperationCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOperationCall4759); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationCall"


    // $ANTLR start "ruleOperationCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2218:1: ruleOperationCall returns [EObject current=null] : ( ( ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '=' )? otherlv_2= 'owner.' ( (lv_opName_3_0= ruleValidID ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) ) ;
    public final EObject ruleOperationCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_variable_0_0 = null;

        AntlrDatatypeRuleToken lv_opName_3_0 = null;

        EObject lv_actualDataParamsBlock_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2221:28: ( ( ( ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '=' )? otherlv_2= 'owner.' ( (lv_opName_3_0= ruleValidID ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2222:1: ( ( ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '=' )? otherlv_2= 'owner.' ( (lv_opName_3_0= ruleValidID ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2222:1: ( ( ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '=' )? otherlv_2= 'owner.' ( (lv_opName_3_0= ruleValidID ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2222:2: ( ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '=' )? otherlv_2= 'owner.' ( (lv_opName_3_0= ruleValidID ) ) ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2222:2: ( ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '=' )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_ID) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2222:3: ( (lv_variable_0_0= ruleDataVariable ) ) otherlv_1= '='
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2222:3: ( (lv_variable_0_0= ruleDataVariable ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2223:1: (lv_variable_0_0= ruleDataVariable )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2223:1: (lv_variable_0_0= ruleDataVariable )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2224:3: lv_variable_0_0= ruleDataVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOperationCallAccess().getVariableDataVariableParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleDataVariable_in_ruleOperationCall4806);
                    lv_variable_0_0=ruleDataVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCallRule());
                      	        }
                             		set(
                             			current, 
                             			"variable",
                              		lv_variable_0_0, 
                              		"DataVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,29,FOLLOW_29_in_ruleOperationCall4818); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getOperationCallAccess().getEqualsSignKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,48,FOLLOW_48_in_ruleOperationCall4832); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getOperationCallAccess().getOwnerKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2248:1: ( (lv_opName_3_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2249:1: (lv_opName_3_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2249:1: (lv_opName_3_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2250:3: lv_opName_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOperationCallAccess().getOpNameValidIDParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleOperationCall4853);
            lv_opName_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationCallRule());
              	        }
                     		set(
                     			current, 
                     			"opName",
                      		lv_opName_3_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2266:2: ( (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2267:1: (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2267:1: (lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2268:3: lv_actualDataParamsBlock_4_0= ruleActualDataParamsBlock
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOperationCallAccess().getActualDataParamsBlockActualDataParamsBlockParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleActualDataParamsBlock_in_ruleOperationCall4874);
            lv_actualDataParamsBlock_4_0=ruleActualDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationCallRule());
              	        }
                     		set(
                     			current, 
                     			"actualDataParamsBlock",
                      		lv_actualDataParamsBlock_4_0, 
                      		"ActualDataParamsBlock");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationCall"


    // $ANTLR start "entryRuleComponentAttributeSetter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2292:1: entryRuleComponentAttributeSetter returns [EObject current=null] : iv_ruleComponentAttributeSetter= ruleComponentAttributeSetter EOF ;
    public final EObject entryRuleComponentAttributeSetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentAttributeSetter = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2293:2: (iv_ruleComponentAttributeSetter= ruleComponentAttributeSetter EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2294:2: iv_ruleComponentAttributeSetter= ruleComponentAttributeSetter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentAttributeSetterRule()); 
            }
            pushFollow(FOLLOW_ruleComponentAttributeSetter_in_entryRuleComponentAttributeSetter4910);
            iv_ruleComponentAttributeSetter=ruleComponentAttributeSetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentAttributeSetter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentAttributeSetter4920); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentAttributeSetter"


    // $ANTLR start "ruleComponentAttributeSetter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2301:1: ruleComponentAttributeSetter returns [EObject current=null] : ( ( (lv_attr_0_0= ruleComponentAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) ) ;
    public final EObject ruleComponentAttributeSetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_attr_0_0 = null;

        EObject lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2304:28: ( ( ( (lv_attr_0_0= ruleComponentAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2305:1: ( ( (lv_attr_0_0= ruleComponentAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2305:1: ( ( (lv_attr_0_0= ruleComponentAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2305:2: ( (lv_attr_0_0= ruleComponentAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2305:2: ( (lv_attr_0_0= ruleComponentAttributeTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2306:1: (lv_attr_0_0= ruleComponentAttributeTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2306:1: (lv_attr_0_0= ruleComponentAttributeTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2307:3: lv_attr_0_0= ruleComponentAttributeTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComponentAttributeSetterAccess().getAttrComponentAttributeTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleComponentAttributeTypeReference_in_ruleComponentAttributeSetter4966);
            lv_attr_0_0=ruleComponentAttributeTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComponentAttributeSetterRule());
              	        }
                     		set(
                     			current, 
                     			"attr",
                      		lv_attr_0_0, 
                      		"ComponentAttributeTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_29_in_ruleComponentAttributeSetter4978); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getComponentAttributeSetterAccess().getEqualsSignKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2327:1: ( (lv_value_2_0= ruleDataExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2328:1: (lv_value_2_0= ruleDataExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2328:1: (lv_value_2_0= ruleDataExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2329:3: lv_value_2_0= ruleDataExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getComponentAttributeSetterAccess().getValueDataExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleDataExpression_in_ruleComponentAttributeSetter4999);
            lv_value_2_0=ruleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getComponentAttributeSetterRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"DataExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentAttributeSetter"


    // $ANTLR start "entryRuleRoleAttributeSetter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2353:1: entryRuleRoleAttributeSetter returns [EObject current=null] : iv_ruleRoleAttributeSetter= ruleRoleAttributeSetter EOF ;
    public final EObject entryRuleRoleAttributeSetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleAttributeSetter = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2354:2: (iv_ruleRoleAttributeSetter= ruleRoleAttributeSetter EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2355:2: iv_ruleRoleAttributeSetter= ruleRoleAttributeSetter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleAttributeSetterRule()); 
            }
            pushFollow(FOLLOW_ruleRoleAttributeSetter_in_entryRuleRoleAttributeSetter5035);
            iv_ruleRoleAttributeSetter=ruleRoleAttributeSetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleAttributeSetter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleAttributeSetter5045); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleAttributeSetter"


    // $ANTLR start "ruleRoleAttributeSetter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2362:1: ruleRoleAttributeSetter returns [EObject current=null] : ( ( (lv_attr_0_0= ruleRoleAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) ) ;
    public final EObject ruleRoleAttributeSetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_attr_0_0 = null;

        EObject lv_value_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2365:28: ( ( ( (lv_attr_0_0= ruleRoleAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2366:1: ( ( (lv_attr_0_0= ruleRoleAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2366:1: ( ( (lv_attr_0_0= ruleRoleAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2366:2: ( (lv_attr_0_0= ruleRoleAttributeTypeReference ) ) otherlv_1= '=' ( (lv_value_2_0= ruleDataExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2366:2: ( (lv_attr_0_0= ruleRoleAttributeTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2367:1: (lv_attr_0_0= ruleRoleAttributeTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2367:1: (lv_attr_0_0= ruleRoleAttributeTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2368:3: lv_attr_0_0= ruleRoleAttributeTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleAttributeSetterAccess().getAttrRoleAttributeTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleRoleAttributeTypeReference_in_ruleRoleAttributeSetter5091);
            lv_attr_0_0=ruleRoleAttributeTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleAttributeSetterRule());
              	        }
                     		set(
                     			current, 
                     			"attr",
                      		lv_attr_0_0, 
                      		"RoleAttributeTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_29_in_ruleRoleAttributeSetter5103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRoleAttributeSetterAccess().getEqualsSignKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2388:1: ( (lv_value_2_0= ruleDataExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2389:1: (lv_value_2_0= ruleDataExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2389:1: (lv_value_2_0= ruleDataExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2390:3: lv_value_2_0= ruleDataExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleAttributeSetterAccess().getValueDataExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleDataExpression_in_ruleRoleAttributeSetter5124);
            lv_value_2_0=ruleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleAttributeSetterRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"DataExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleAttributeSetter"


    // $ANTLR start "entryRuleLabel"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2414:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2415:2: (iv_ruleLabel= ruleLabel EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2416:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_ruleLabel_in_entryRuleLabel5160);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabel5170); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2423:1: ruleLabel returns [EObject current=null] : ( (lv_name_0_0= ruleValidID ) ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2426:28: ( ( (lv_name_0_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2427:1: ( (lv_name_0_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2427:1: ( (lv_name_0_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2428:1: (lv_name_0_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2428:1: (lv_name_0_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2429:3: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelAccess().getNameValidIDParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleLabel5215);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleGuard"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2453:1: entryRuleGuard returns [EObject current=null] : iv_ruleGuard= ruleGuard EOF ;
    public final EObject entryRuleGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuard = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2454:2: (iv_ruleGuard= ruleGuard EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2455:2: iv_ruleGuard= ruleGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardRule()); 
            }
            pushFollow(FOLLOW_ruleGuard_in_entryRuleGuard5250);
            iv_ruleGuard=ruleGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuard; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGuard5260); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuard"


    // $ANTLR start "ruleGuard"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2462:1: ruleGuard returns [EObject current=null] : this_OrTerm_0= ruleOrTerm ;
    public final EObject ruleGuard() throws RecognitionException {
        EObject current = null;

        EObject this_OrTerm_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2465:28: (this_OrTerm_0= ruleOrTerm )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2467:5: this_OrTerm_0= ruleOrTerm
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getGuardAccess().getOrTermParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_ruleOrTerm_in_ruleGuard5306);
            this_OrTerm_0=ruleOrTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_OrTerm_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuard"


    // $ANTLR start "entryRuleOrTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2483:1: entryRuleOrTerm returns [EObject current=null] : iv_ruleOrTerm= ruleOrTerm EOF ;
    public final EObject entryRuleOrTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrTerm = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2484:2: (iv_ruleOrTerm= ruleOrTerm EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2485:2: iv_ruleOrTerm= ruleOrTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrTermRule()); 
            }
            pushFollow(FOLLOW_ruleOrTerm_in_entryRuleOrTerm5340);
            iv_ruleOrTerm=ruleOrTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrTerm; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOrTerm5350); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrTerm"


    // $ANTLR start "ruleOrTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2492:1: ruleOrTerm returns [EObject current=null] : (this_AndTerm_0= ruleAndTerm ( () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) ) )* ) ;
    public final EObject ruleOrTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_AndTerm_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2495:28: ( (this_AndTerm_0= ruleAndTerm ( () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2496:1: (this_AndTerm_0= ruleAndTerm ( () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2496:1: (this_AndTerm_0= ruleAndTerm ( () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2497:5: this_AndTerm_0= ruleAndTerm ( () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getOrTermAccess().getAndTermParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleAndTerm_in_ruleOrTerm5397);
            this_AndTerm_0=ruleAndTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_AndTerm_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2505:1: ( () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==49) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2505:2: () otherlv_2= '||' ( (lv_right_3_0= ruleAndTerm ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2505:2: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2506:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getOrTermAccess().getOrTermLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,49,FOLLOW_49_in_ruleOrTerm5418); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getOrTermAccess().getVerticalLineVerticalLineKeyword_1_1());
            	          
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2515:1: ( (lv_right_3_0= ruleAndTerm ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2516:1: (lv_right_3_0= ruleAndTerm )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2516:1: (lv_right_3_0= ruleAndTerm )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2517:3: lv_right_3_0= ruleAndTerm
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOrTermAccess().getRightAndTermParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleAndTerm_in_ruleOrTerm5439);
            	    lv_right_3_0=ruleAndTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOrTermRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"AndTerm");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrTerm"


    // $ANTLR start "entryRuleAndTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2541:1: entryRuleAndTerm returns [EObject current=null] : iv_ruleAndTerm= ruleAndTerm EOF ;
    public final EObject entryRuleAndTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndTerm = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2542:2: (iv_ruleAndTerm= ruleAndTerm EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2543:2: iv_ruleAndTerm= ruleAndTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndTermRule()); 
            }
            pushFollow(FOLLOW_ruleAndTerm_in_entryRuleAndTerm5477);
            iv_ruleAndTerm=ruleAndTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndTerm; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAndTerm5487); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndTerm"


    // $ANTLR start "ruleAndTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2550:1: ruleAndTerm returns [EObject current=null] : (this_EqualityTerm_0= ruleEqualityTerm ( () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) ) )* ) ;
    public final EObject ruleAndTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_EqualityTerm_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2553:28: ( (this_EqualityTerm_0= ruleEqualityTerm ( () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2554:1: (this_EqualityTerm_0= ruleEqualityTerm ( () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2554:1: (this_EqualityTerm_0= ruleEqualityTerm ( () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2555:5: this_EqualityTerm_0= ruleEqualityTerm ( () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAndTermAccess().getEqualityTermParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleEqualityTerm_in_ruleAndTerm5534);
            this_EqualityTerm_0=ruleEqualityTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_EqualityTerm_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2563:1: ( () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==50) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2563:2: () otherlv_2= '&&' ( (lv_right_3_0= ruleEqualityTerm ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2563:2: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2564:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAndTermAccess().getAndTermLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,50,FOLLOW_50_in_ruleAndTerm5555); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getAndTermAccess().getAmpersandAmpersandKeyword_1_1());
            	          
            	    }
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2573:1: ( (lv_right_3_0= ruleEqualityTerm ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2574:1: (lv_right_3_0= ruleEqualityTerm )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2574:1: (lv_right_3_0= ruleEqualityTerm )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2575:3: lv_right_3_0= ruleEqualityTerm
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAndTermAccess().getRightEqualityTermParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleEqualityTerm_in_ruleAndTerm5576);
            	    lv_right_3_0=ruleEqualityTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAndTermRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"EqualityTerm");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndTerm"


    // $ANTLR start "entryRuleEqualityTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2599:1: entryRuleEqualityTerm returns [EObject current=null] : iv_ruleEqualityTerm= ruleEqualityTerm EOF ;
    public final EObject entryRuleEqualityTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityTerm = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2600:2: (iv_ruleEqualityTerm= ruleEqualityTerm EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2601:2: iv_ruleEqualityTerm= ruleEqualityTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityTermRule()); 
            }
            pushFollow(FOLLOW_ruleEqualityTerm_in_entryRuleEqualityTerm5614);
            iv_ruleEqualityTerm=ruleEqualityTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityTerm; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleEqualityTerm5624); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityTerm"


    // $ANTLR start "ruleEqualityTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2608:1: ruleEqualityTerm returns [EObject current=null] : (this_NotTerm_0= ruleNotTerm ( () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) ) )* ) ;
    public final EObject ruleEqualityTerm() throws RecognitionException {
        EObject current = null;

        EObject this_NotTerm_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2611:28: ( (this_NotTerm_0= ruleNotTerm ( () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2612:1: (this_NotTerm_0= ruleNotTerm ( () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2612:1: (this_NotTerm_0= ruleNotTerm ( () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2613:5: this_NotTerm_0= ruleNotTerm ( () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityTermAccess().getNotTermParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleNotTerm_in_ruleEqualityTerm5671);
            this_NotTerm_0=ruleNotTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_NotTerm_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2621:1: ( () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( ((LA21_0>=52 && LA21_0<=53)) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2621:2: () ( (lv_operator_2_0= ruleOpEquality ) ) ( (lv_right_3_0= ruleNotTerm ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2621:2: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2622:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityTermAccess().getEqualityTermLeftAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2627:2: ( (lv_operator_2_0= ruleOpEquality ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2628:1: (lv_operator_2_0= ruleOpEquality )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2628:1: (lv_operator_2_0= ruleOpEquality )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2629:3: lv_operator_2_0= ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityTermAccess().getOperatorOpEqualityParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpEquality_in_ruleEqualityTerm5701);
            	    lv_operator_2_0=ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityTermRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"OpEquality");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2645:2: ( (lv_right_3_0= ruleNotTerm ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2646:1: (lv_right_3_0= ruleNotTerm )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2646:1: (lv_right_3_0= ruleNotTerm )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2647:3: lv_right_3_0= ruleNotTerm
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityTermAccess().getRightNotTermParserRuleCall_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleNotTerm_in_ruleEqualityTerm5722);
            	    lv_right_3_0=ruleNotTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityTermRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"NotTerm");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityTerm"


    // $ANTLR start "entryRuleNotTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2671:1: entryRuleNotTerm returns [EObject current=null] : iv_ruleNotTerm= ruleNotTerm EOF ;
    public final EObject entryRuleNotTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotTerm = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2672:2: (iv_ruleNotTerm= ruleNotTerm EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2673:2: iv_ruleNotTerm= ruleNotTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotTermRule()); 
            }
            pushFollow(FOLLOW_ruleNotTerm_in_entryRuleNotTerm5760);
            iv_ruleNotTerm=ruleNotTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotTerm; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNotTerm5770); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotTerm"


    // $ANTLR start "ruleNotTerm"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2680:1: ruleNotTerm returns [EObject current=null] : ( () ( (lv_not_1_0= '!' ) )? ( (lv_atom_2_0= ruleAtom ) ) ) ;
    public final EObject ruleNotTerm() throws RecognitionException {
        EObject current = null;

        Token lv_not_1_0=null;
        EObject lv_atom_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2683:28: ( ( () ( (lv_not_1_0= '!' ) )? ( (lv_atom_2_0= ruleAtom ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2684:1: ( () ( (lv_not_1_0= '!' ) )? ( (lv_atom_2_0= ruleAtom ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2684:1: ( () ( (lv_not_1_0= '!' ) )? ( (lv_atom_2_0= ruleAtom ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2684:2: () ( (lv_not_1_0= '!' ) )? ( (lv_atom_2_0= ruleAtom ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2684:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2685:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNotTermAccess().getNotTermAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2690:2: ( (lv_not_1_0= '!' ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==46) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2691:1: (lv_not_1_0= '!' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2691:1: (lv_not_1_0= '!' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2692:3: lv_not_1_0= '!'
                    {
                    lv_not_1_0=(Token)match(input,46,FOLLOW_46_in_ruleNotTerm5822); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_not_1_0, grammarAccess.getNotTermAccess().getNotExclamationMarkKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNotTermRule());
                      	        }
                             		setWithLastConsumed(current, "not", lv_not_1_0, "!");
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2705:3: ( (lv_atom_2_0= ruleAtom ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2706:1: (lv_atom_2_0= ruleAtom )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2706:1: (lv_atom_2_0= ruleAtom )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2707:3: lv_atom_2_0= ruleAtom
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNotTermAccess().getAtomAtomParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleAtom_in_ruleNotTerm5857);
            lv_atom_2_0=ruleAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNotTermRule());
              	        }
                     		set(
                     			current, 
                     			"atom",
                      		lv_atom_2_0, 
                      		"Atom");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotTerm"


    // $ANTLR start "entryRuleAtom"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2731:1: entryRuleAtom returns [EObject current=null] : iv_ruleAtom= ruleAtom EOF ;
    public final EObject entryRuleAtom() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtom = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2732:2: (iv_ruleAtom= ruleAtom EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2733:2: iv_ruleAtom= ruleAtom EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomRule()); 
            }
            pushFollow(FOLLOW_ruleAtom_in_entryRuleAtom5893);
            iv_ruleAtom=ruleAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtom; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAtom5903); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtom"


    // $ANTLR start "ruleAtom"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2740:1: ruleAtom returns [EObject current=null] : (this_DataExpression_0= ruleDataExpression | this_PlaysQuery_1= rulePlaysQuery | this_Relation_2= ruleRelation | this_GuardInParentheses_3= ruleGuardInParentheses ) ;
    public final EObject ruleAtom() throws RecognitionException {
        EObject current = null;

        EObject this_DataExpression_0 = null;

        EObject this_PlaysQuery_1 = null;

        EObject this_Relation_2 = null;

        EObject this_GuardInParentheses_3 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2743:28: ( (this_DataExpression_0= ruleDataExpression | this_PlaysQuery_1= rulePlaysQuery | this_Relation_2= ruleRelation | this_GuardInParentheses_3= ruleGuardInParentheses ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2744:1: (this_DataExpression_0= ruleDataExpression | this_PlaysQuery_1= rulePlaysQuery | this_Relation_2= ruleRelation | this_GuardInParentheses_3= ruleGuardInParentheses )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2744:1: (this_DataExpression_0= ruleDataExpression | this_PlaysQuery_1= rulePlaysQuery | this_Relation_2= ruleRelation | this_GuardInParentheses_3= ruleGuardInParentheses )
            int alt23=4;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2745:5: this_DataExpression_0= ruleDataExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomAccess().getDataExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDataExpression_in_ruleAtom5950);
                    this_DataExpression_0=ruleDataExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2755:5: this_PlaysQuery_1= rulePlaysQuery
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomAccess().getPlaysQueryParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_rulePlaysQuery_in_ruleAtom5977);
                    this_PlaysQuery_1=rulePlaysQuery();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PlaysQuery_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2765:5: this_Relation_2= ruleRelation
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomAccess().getRelationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRelation_in_ruleAtom6004);
                    this_Relation_2=ruleRelation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Relation_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2775:5: this_GuardInParentheses_3= ruleGuardInParentheses
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAtomAccess().getGuardInParenthesesParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleGuardInParentheses_in_ruleAtom6031);
                    this_GuardInParentheses_3=ruleGuardInParentheses();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_GuardInParentheses_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtom"


    // $ANTLR start "entryRulePlaysQuery"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2791:1: entryRulePlaysQuery returns [EObject current=null] : iv_rulePlaysQuery= rulePlaysQuery EOF ;
    public final EObject entryRulePlaysQuery() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePlaysQuery = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2792:2: (iv_rulePlaysQuery= rulePlaysQuery EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2793:2: iv_rulePlaysQuery= rulePlaysQuery EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPlaysQueryRule()); 
            }
            pushFollow(FOLLOW_rulePlaysQuery_in_entryRulePlaysQuery6066);
            iv_rulePlaysQuery=rulePlaysQuery();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePlaysQuery; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePlaysQuery6076); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePlaysQuery"


    // $ANTLR start "rulePlaysQuery"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2800:1: rulePlaysQuery returns [EObject current=null] : (otherlv_0= 'plays' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ',' ( (lv_compInstance_4_0= ruleComponentInstance ) ) otherlv_5= ')' ) ;
    public final EObject rulePlaysQuery() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_compInstance_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2803:28: ( (otherlv_0= 'plays' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ',' ( (lv_compInstance_4_0= ruleComponentInstance ) ) otherlv_5= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2804:1: (otherlv_0= 'plays' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ',' ( (lv_compInstance_4_0= ruleComponentInstance ) ) otherlv_5= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2804:1: (otherlv_0= 'plays' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ',' ( (lv_compInstance_4_0= ruleComponentInstance ) ) otherlv_5= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2804:3: otherlv_0= 'plays' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ',' ( (lv_compInstance_4_0= ruleComponentInstance ) ) otherlv_5= ')'
            {
            otherlv_0=(Token)match(input,51,FOLLOW_51_in_rulePlaysQuery6113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPlaysQueryAccess().getPlaysKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,38,FOLLOW_38_in_rulePlaysQuery6125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPlaysQueryAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2812:1: ( (otherlv_2= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2813:1: (otherlv_2= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2813:1: (otherlv_2= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2814:3: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPlaysQueryRule());
              	        }
                      
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_rulePlaysQuery6145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_2, grammarAccess.getPlaysQueryAccess().getRoleTypeRefRoleTypeCrossReference_2_0()); 
              	
            }

            }


            }

            otherlv_3=(Token)match(input,23,FOLLOW_23_in_rulePlaysQuery6157); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPlaysQueryAccess().getCommaKeyword_3());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2829:1: ( (lv_compInstance_4_0= ruleComponentInstance ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2830:1: (lv_compInstance_4_0= ruleComponentInstance )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2830:1: (lv_compInstance_4_0= ruleComponentInstance )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2831:3: lv_compInstance_4_0= ruleComponentInstance
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPlaysQueryAccess().getCompInstanceComponentInstanceParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleComponentInstance_in_rulePlaysQuery6178);
            lv_compInstance_4_0=ruleComponentInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPlaysQueryRule());
              	        }
                     		set(
                     			current, 
                     			"compInstance",
                      		lv_compInstance_4_0, 
                      		"ComponentInstance");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,40,FOLLOW_40_in_rulePlaysQuery6190); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPlaysQueryAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePlaysQuery"


    // $ANTLR start "entryRuleRelation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2859:1: entryRuleRelation returns [EObject current=null] : iv_ruleRelation= ruleRelation EOF ;
    public final EObject entryRuleRelation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelation = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2860:2: (iv_ruleRelation= ruleRelation EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2861:2: iv_ruleRelation= ruleRelation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationRule()); 
            }
            pushFollow(FOLLOW_ruleRelation_in_entryRuleRelation6226);
            iv_ruleRelation=ruleRelation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRelation6236); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelation"


    // $ANTLR start "ruleRelation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2868:1: ruleRelation returns [EObject current=null] : ( ( (lv_left_0_0= ruleDataExpression ) ) ( (lv_operator_1_0= ruleOpCompare ) ) ( (lv_right_2_0= ruleDataExpression ) ) ) ;
    public final EObject ruleRelation() throws RecognitionException {
        EObject current = null;

        EObject lv_left_0_0 = null;

        AntlrDatatypeRuleToken lv_operator_1_0 = null;

        EObject lv_right_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2871:28: ( ( ( (lv_left_0_0= ruleDataExpression ) ) ( (lv_operator_1_0= ruleOpCompare ) ) ( (lv_right_2_0= ruleDataExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2872:1: ( ( (lv_left_0_0= ruleDataExpression ) ) ( (lv_operator_1_0= ruleOpCompare ) ) ( (lv_right_2_0= ruleDataExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2872:1: ( ( (lv_left_0_0= ruleDataExpression ) ) ( (lv_operator_1_0= ruleOpCompare ) ) ( (lv_right_2_0= ruleDataExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2872:2: ( (lv_left_0_0= ruleDataExpression ) ) ( (lv_operator_1_0= ruleOpCompare ) ) ( (lv_right_2_0= ruleDataExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2872:2: ( (lv_left_0_0= ruleDataExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2873:1: (lv_left_0_0= ruleDataExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2873:1: (lv_left_0_0= ruleDataExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2874:3: lv_left_0_0= ruleDataExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRelationAccess().getLeftDataExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleDataExpression_in_ruleRelation6282);
            lv_left_0_0=ruleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRelationRule());
              	        }
                     		set(
                     			current, 
                     			"left",
                      		lv_left_0_0, 
                      		"DataExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2890:2: ( (lv_operator_1_0= ruleOpCompare ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2891:1: (lv_operator_1_0= ruleOpCompare )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2891:1: (lv_operator_1_0= ruleOpCompare )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2892:3: lv_operator_1_0= ruleOpCompare
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRelationAccess().getOperatorOpCompareParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleOpCompare_in_ruleRelation6303);
            lv_operator_1_0=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRelationRule());
              	        }
                     		set(
                     			current, 
                     			"operator",
                      		lv_operator_1_0, 
                      		"OpCompare");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2908:2: ( (lv_right_2_0= ruleDataExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2909:1: (lv_right_2_0= ruleDataExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2909:1: (lv_right_2_0= ruleDataExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2910:3: lv_right_2_0= ruleDataExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRelationAccess().getRightDataExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleDataExpression_in_ruleRelation6324);
            lv_right_2_0=ruleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRelationRule());
              	        }
                     		set(
                     			current, 
                     			"right",
                      		lv_right_2_0, 
                      		"DataExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelation"


    // $ANTLR start "entryRuleGuardInParentheses"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2934:1: entryRuleGuardInParentheses returns [EObject current=null] : iv_ruleGuardInParentheses= ruleGuardInParentheses EOF ;
    public final EObject entryRuleGuardInParentheses() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardInParentheses = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2935:2: (iv_ruleGuardInParentheses= ruleGuardInParentheses EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2936:2: iv_ruleGuardInParentheses= ruleGuardInParentheses EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardInParenthesesRule()); 
            }
            pushFollow(FOLLOW_ruleGuardInParentheses_in_entryRuleGuardInParentheses6360);
            iv_ruleGuardInParentheses=ruleGuardInParentheses();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardInParentheses; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGuardInParentheses6370); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardInParentheses"


    // $ANTLR start "ruleGuardInParentheses"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2943:1: ruleGuardInParentheses returns [EObject current=null] : (otherlv_0= '(' ( (lv_guard_1_0= ruleGuard ) ) otherlv_2= ')' ) ;
    public final EObject ruleGuardInParentheses() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_guard_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2946:28: ( (otherlv_0= '(' ( (lv_guard_1_0= ruleGuard ) ) otherlv_2= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2947:1: (otherlv_0= '(' ( (lv_guard_1_0= ruleGuard ) ) otherlv_2= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2947:1: (otherlv_0= '(' ( (lv_guard_1_0= ruleGuard ) ) otherlv_2= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2947:3: otherlv_0= '(' ( (lv_guard_1_0= ruleGuard ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,38,FOLLOW_38_in_ruleGuardInParentheses6407); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGuardInParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2951:1: ( (lv_guard_1_0= ruleGuard ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2952:1: (lv_guard_1_0= ruleGuard )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2952:1: (lv_guard_1_0= ruleGuard )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2953:3: lv_guard_1_0= ruleGuard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGuardInParenthesesAccess().getGuardGuardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleGuard_in_ruleGuardInParentheses6428);
            lv_guard_1_0=ruleGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGuardInParenthesesRule());
              	        }
                     		set(
                     			current, 
                     			"guard",
                      		lv_guard_1_0, 
                      		"Guard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_40_in_ruleGuardInParentheses6440); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getGuardInParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardInParentheses"


    // $ANTLR start "entryRuleAbstractDataValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2981:1: entryRuleAbstractDataValue returns [EObject current=null] : iv_ruleAbstractDataValue= ruleAbstractDataValue EOF ;
    public final EObject entryRuleAbstractDataValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractDataValue = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2982:2: (iv_ruleAbstractDataValue= ruleAbstractDataValue EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2983:2: iv_ruleAbstractDataValue= ruleAbstractDataValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractDataValueRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractDataValue_in_entryRuleAbstractDataValue6476);
            iv_ruleAbstractDataValue=ruleAbstractDataValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractDataValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractDataValue6486); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractDataValue"


    // $ANTLR start "ruleAbstractDataValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2990:1: ruleAbstractDataValue returns [EObject current=null] : (this_BooleanValue_0= ruleBooleanValue | this_NumberValue_1= ruleNumberValue | this_StringValue_2= ruleStringValue ) ;
    public final EObject ruleAbstractDataValue() throws RecognitionException {
        EObject current = null;

        EObject this_BooleanValue_0 = null;

        EObject this_NumberValue_1 = null;

        EObject this_StringValue_2 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2993:28: ( (this_BooleanValue_0= ruleBooleanValue | this_NumberValue_1= ruleNumberValue | this_StringValue_2= ruleStringValue ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2994:1: (this_BooleanValue_0= ruleBooleanValue | this_NumberValue_1= ruleNumberValue | this_StringValue_2= ruleStringValue )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2994:1: (this_BooleanValue_0= ruleBooleanValue | this_NumberValue_1= ruleNumberValue | this_StringValue_2= ruleStringValue )
            int alt24=3;
            switch ( input.LA(1) ) {
            case 98:
            case 99:
                {
                alt24=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
                {
                alt24=2;
                }
                break;
            case RULE_STRING:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:2995:5: this_BooleanValue_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataValueAccess().getBooleanValueParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleBooleanValue_in_ruleAbstractDataValue6533);
                    this_BooleanValue_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BooleanValue_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3005:5: this_NumberValue_1= ruleNumberValue
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataValueAccess().getNumberValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNumberValue_in_ruleAbstractDataValue6560);
                    this_NumberValue_1=ruleNumberValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NumberValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3015:5: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataValueAccess().getStringValueParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleStringValue_in_ruleAbstractDataValue6587);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringValue_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractDataValue"


    // $ANTLR start "entryRuleBooleanValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3031:1: entryRuleBooleanValue returns [EObject current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final EObject entryRuleBooleanValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanValue = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3032:2: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3033:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_ruleBooleanValue_in_entryRuleBooleanValue6622);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBooleanValue6632); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3040:1: ruleBooleanValue returns [EObject current=null] : ( (lv_value_0_0= ruleXBooleanLiteral ) ) ;
    public final EObject ruleBooleanValue() throws RecognitionException {
        EObject current = null;

        EObject lv_value_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3043:28: ( ( (lv_value_0_0= ruleXBooleanLiteral ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3044:1: ( (lv_value_0_0= ruleXBooleanLiteral ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3044:1: ( (lv_value_0_0= ruleXBooleanLiteral ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3045:1: (lv_value_0_0= ruleXBooleanLiteral )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3045:1: (lv_value_0_0= ruleXBooleanLiteral )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3046:3: lv_value_0_0= ruleXBooleanLiteral
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBooleanValueAccess().getValueXBooleanLiteralParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXBooleanLiteral_in_ruleBooleanValue6677);
            lv_value_0_0=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBooleanValueRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"XBooleanLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleNumberValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3070:1: entryRuleNumberValue returns [EObject current=null] : iv_ruleNumberValue= ruleNumberValue EOF ;
    public final EObject entryRuleNumberValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberValue = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3071:2: (iv_ruleNumberValue= ruleNumberValue EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3072:2: iv_ruleNumberValue= ruleNumberValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberValueRule()); 
            }
            pushFollow(FOLLOW_ruleNumberValue_in_entryRuleNumberValue6712);
            iv_ruleNumberValue=ruleNumberValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumberValue6722); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberValue"


    // $ANTLR start "ruleNumberValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3079:1: ruleNumberValue returns [EObject current=null] : ( (lv_value_0_0= ruleXNumberLiteral ) ) ;
    public final EObject ruleNumberValue() throws RecognitionException {
        EObject current = null;

        EObject lv_value_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3082:28: ( ( (lv_value_0_0= ruleXNumberLiteral ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3083:1: ( (lv_value_0_0= ruleXNumberLiteral ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3083:1: ( (lv_value_0_0= ruleXNumberLiteral ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3084:1: (lv_value_0_0= ruleXNumberLiteral )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3084:1: (lv_value_0_0= ruleXNumberLiteral )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3085:3: lv_value_0_0= ruleXNumberLiteral
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNumberValueAccess().getValueXNumberLiteralParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXNumberLiteral_in_ruleNumberValue6767);
            lv_value_0_0=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNumberValueRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"XNumberLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberValue"


    // $ANTLR start "entryRuleStringValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3109:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3110:2: (iv_ruleStringValue= ruleStringValue EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3111:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FOLLOW_ruleStringValue_in_entryRuleStringValue6802);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStringValue6812); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3118:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= ruleXStringLiteral ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        EObject lv_value_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3121:28: ( ( (lv_value_0_0= ruleXStringLiteral ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3122:1: ( (lv_value_0_0= ruleXStringLiteral ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3122:1: ( (lv_value_0_0= ruleXStringLiteral ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3123:1: (lv_value_0_0= ruleXStringLiteral )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3123:1: (lv_value_0_0= ruleXStringLiteral )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3124:3: lv_value_0_0= ruleXStringLiteral
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringValueAccess().getValueXStringLiteralParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXStringLiteral_in_ruleStringValue6857);
            lv_value_0_0=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringValueRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"XStringLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleOpEquality"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3148:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3149:2: (iv_ruleOpEquality= ruleOpEquality EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3150:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_ruleOpEquality_in_entryRuleOpEquality6893);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpEquality6904); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3157:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3160:28: ( (kw= '==' | kw= '!=' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3161:1: (kw= '==' | kw= '!=' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3161:1: (kw= '==' | kw= '!=' )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==52) ) {
                alt25=1;
            }
            else if ( (LA25_0==53) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3162:2: kw= '=='
                    {
                    kw=(Token)match(input,52,FOLLOW_52_in_ruleOpEquality6942); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3169:2: kw= '!='
                    {
                    kw=(Token)match(input,53,FOLLOW_53_in_ruleOpEquality6961); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleOpCompare"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3182:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3183:2: (iv_ruleOpCompare= ruleOpCompare EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3184:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_ruleOpCompare_in_entryRuleOpCompare7002);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpCompare7013); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3191:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3194:28: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3195:1: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3195:1: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt26=4;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt26=1;
                }
                break;
            case 27:
                {
                int LA26_2 = input.LA(2);

                if ( (LA26_2==EOF||(LA26_2>=RULE_ID && LA26_2<=RULE_DECIMAL)||LA26_2==14||LA26_2==27||(LA26_2>=38 && LA26_2<=39)||LA26_2==41||LA26_2==46||LA26_2==48||(LA26_2>=57 && LA26_2<=58)||(LA26_2>=79 && LA26_2<=80)||LA26_2==83||(LA26_2>=87 && LA26_2<=89)||(LA26_2>=92 && LA26_2<=104)||LA26_2==106) ) {
                    alt26=4;
                }
                else if ( (LA26_2==29) ) {
                    alt26=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 2, input);

                    throw nvae;
                }
                }
                break;
            case 32:
                {
                alt26=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3196:2: kw= '>='
                    {
                    kw=(Token)match(input,54,FOLLOW_54_in_ruleOpCompare7051); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3202:6: (kw= '<' kw= '=' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3202:6: (kw= '<' kw= '=' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3203:2: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,27,FOLLOW_27_in_ruleOpCompare7071); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); 
                          
                    }
                    kw=(Token)match(input,29,FOLLOW_29_in_ruleOpCompare7084); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3216:2: kw= '>'
                    {
                    kw=(Token)match(input,32,FOLLOW_32_in_ruleOpCompare7104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3223:2: kw= '<'
                    {
                    kw=(Token)match(input,27,FOLLOW_27_in_ruleOpCompare7123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleComponentInstance"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3236:1: entryRuleComponentInstance returns [EObject current=null] : iv_ruleComponentInstance= ruleComponentInstance EOF ;
    public final EObject entryRuleComponentInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentInstance = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3237:2: (iv_ruleComponentInstance= ruleComponentInstance EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3238:2: iv_ruleComponentInstance= ruleComponentInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentInstanceRule()); 
            }
            pushFollow(FOLLOW_ruleComponentInstance_in_entryRuleComponentInstance7163);
            iv_ruleComponentInstance=ruleComponentInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentInstance; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentInstance7173); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentInstance"


    // $ANTLR start "ruleComponentInstance"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3245:1: ruleComponentInstance returns [EObject current=null] : (this_ComponentAssociationTypeReference_0= ruleComponentAssociationTypeReference | this_OwnerReference_1= ruleOwnerReference ) ;
    public final EObject ruleComponentInstance() throws RecognitionException {
        EObject current = null;

        EObject this_ComponentAssociationTypeReference_0 = null;

        EObject this_OwnerReference_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3248:28: ( (this_ComponentAssociationTypeReference_0= ruleComponentAssociationTypeReference | this_OwnerReference_1= ruleOwnerReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3249:1: (this_ComponentAssociationTypeReference_0= ruleComponentAssociationTypeReference | this_OwnerReference_1= ruleOwnerReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3249:1: (this_ComponentAssociationTypeReference_0= ruleComponentAssociationTypeReference | this_OwnerReference_1= ruleOwnerReference )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==48) ) {
                alt27=1;
            }
            else if ( (LA27_0==55) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3250:5: this_ComponentAssociationTypeReference_0= ruleComponentAssociationTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentInstanceAccess().getComponentAssociationTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComponentAssociationTypeReference_in_ruleComponentInstance7220);
                    this_ComponentAssociationTypeReference_0=ruleComponentAssociationTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentAssociationTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3260:5: this_OwnerReference_1= ruleOwnerReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentInstanceAccess().getOwnerReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOwnerReference_in_ruleComponentInstance7247);
                    this_OwnerReference_1=ruleOwnerReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OwnerReference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentInstance"


    // $ANTLR start "entryRuleComponentAssociationTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3276:1: entryRuleComponentAssociationTypeReference returns [EObject current=null] : iv_ruleComponentAssociationTypeReference= ruleComponentAssociationTypeReference EOF ;
    public final EObject entryRuleComponentAssociationTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentAssociationTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3277:2: (iv_ruleComponentAssociationTypeReference= ruleComponentAssociationTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3278:2: iv_ruleComponentAssociationTypeReference= ruleComponentAssociationTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentAssociationTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleComponentAssociationTypeReference_in_entryRuleComponentAssociationTypeReference7282);
            iv_ruleComponentAssociationTypeReference=ruleComponentAssociationTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentAssociationTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentAssociationTypeReference7292); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentAssociationTypeReference"


    // $ANTLR start "ruleComponentAssociationTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3285:1: ruleComponentAssociationTypeReference returns [EObject current=null] : (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleComponentAssociationTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3288:28: ( (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3289:1: (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3289:1: (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3289:3: otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_48_in_ruleComponentAssociationTypeReference7329); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComponentAssociationTypeReferenceAccess().getOwnerKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3293:1: ( (otherlv_1= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3294:1: (otherlv_1= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3294:1: (otherlv_1= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3295:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getComponentAssociationTypeReferenceRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleComponentAssociationTypeReference7349); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getComponentAssociationTypeReferenceAccess().getRefComponentAssociationTypeCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentAssociationTypeReference"


    // $ANTLR start "entryRuleOwnerReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3314:1: entryRuleOwnerReference returns [EObject current=null] : iv_ruleOwnerReference= ruleOwnerReference EOF ;
    public final EObject entryRuleOwnerReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwnerReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3315:2: (iv_ruleOwnerReference= ruleOwnerReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3316:2: iv_ruleOwnerReference= ruleOwnerReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwnerReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleOwnerReference_in_entryRuleOwnerReference7385);
            iv_ruleOwnerReference=ruleOwnerReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwnerReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOwnerReference7395); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwnerReference"


    // $ANTLR start "ruleOwnerReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3323:1: ruleOwnerReference returns [EObject current=null] : ( () otherlv_1= 'owner' ) ;
    public final EObject ruleOwnerReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3326:28: ( ( () otherlv_1= 'owner' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3327:1: ( () otherlv_1= 'owner' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3327:1: ( () otherlv_1= 'owner' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3327:2: () otherlv_1= 'owner'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3327:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3328:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getOwnerReferenceAccess().getOwnerReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,55,FOLLOW_55_in_ruleOwnerReference7441); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getOwnerReferenceAccess().getOwnerKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwnerReference"


    // $ANTLR start "entryRuleAbstractRoleInstance"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3345:1: entryRuleAbstractRoleInstance returns [EObject current=null] : iv_ruleAbstractRoleInstance= ruleAbstractRoleInstance EOF ;
    public final EObject entryRuleAbstractRoleInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractRoleInstance = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3346:2: (iv_ruleAbstractRoleInstance= ruleAbstractRoleInstance EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3347:2: iv_ruleAbstractRoleInstance= ruleAbstractRoleInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractRoleInstanceRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractRoleInstance_in_entryRuleAbstractRoleInstance7477);
            iv_ruleAbstractRoleInstance=ruleAbstractRoleInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractRoleInstance; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractRoleInstance7487); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractRoleInstance"


    // $ANTLR start "ruleAbstractRoleInstance"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3354:1: ruleAbstractRoleInstance returns [EObject current=null] : (this_RoleInstanceVariable_0= ruleRoleInstanceVariable | this_FormalRoleParam_1= ruleFormalRoleParam ) ;
    public final EObject ruleAbstractRoleInstance() throws RecognitionException {
        EObject current = null;

        EObject this_RoleInstanceVariable_0 = null;

        EObject this_FormalRoleParam_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3357:28: ( (this_RoleInstanceVariable_0= ruleRoleInstanceVariable | this_FormalRoleParam_1= ruleFormalRoleParam ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3358:1: (this_RoleInstanceVariable_0= ruleRoleInstanceVariable | this_FormalRoleParam_1= ruleFormalRoleParam )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3358:1: (this_RoleInstanceVariable_0= ruleRoleInstanceVariable | this_FormalRoleParam_1= ruleFormalRoleParam )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_ID) ) {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==RULE_ID) ) {
                    alt28=2;
                }
                else if ( (LA28_1==EOF) ) {
                    alt28=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3359:5: this_RoleInstanceVariable_0= ruleRoleInstanceVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractRoleInstanceAccess().getRoleInstanceVariableParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRoleInstanceVariable_in_ruleAbstractRoleInstance7534);
                    this_RoleInstanceVariable_0=ruleRoleInstanceVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RoleInstanceVariable_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3369:5: this_FormalRoleParam_1= ruleFormalRoleParam
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractRoleInstanceAccess().getFormalRoleParamParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFormalRoleParam_in_ruleAbstractRoleInstance7561);
                    this_FormalRoleParam_1=ruleFormalRoleParam();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FormalRoleParam_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractRoleInstance"


    // $ANTLR start "entryRuleRoleInstanceVariable"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3385:1: entryRuleRoleInstanceVariable returns [EObject current=null] : iv_ruleRoleInstanceVariable= ruleRoleInstanceVariable EOF ;
    public final EObject entryRuleRoleInstanceVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleInstanceVariable = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3386:2: (iv_ruleRoleInstanceVariable= ruleRoleInstanceVariable EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3387:2: iv_ruleRoleInstanceVariable= ruleRoleInstanceVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleInstanceVariableRule()); 
            }
            pushFollow(FOLLOW_ruleRoleInstanceVariable_in_entryRuleRoleInstanceVariable7596);
            iv_ruleRoleInstanceVariable=ruleRoleInstanceVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleInstanceVariable; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleInstanceVariable7606); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleInstanceVariable"


    // $ANTLR start "ruleRoleInstanceVariable"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3394:1: ruleRoleInstanceVariable returns [EObject current=null] : ( (lv_name_0_0= ruleValidID ) ) ;
    public final EObject ruleRoleInstanceVariable() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3397:28: ( ( (lv_name_0_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3398:1: ( (lv_name_0_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3398:1: ( (lv_name_0_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3399:1: (lv_name_0_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3399:1: (lv_name_0_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3400:3: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRoleInstanceVariableAccess().getNameValidIDParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleRoleInstanceVariable7651);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRoleInstanceVariableRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleInstanceVariable"


    // $ANTLR start "entryRuleFormalRoleParam"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3424:1: entryRuleFormalRoleParam returns [EObject current=null] : iv_ruleFormalRoleParam= ruleFormalRoleParam EOF ;
    public final EObject entryRuleFormalRoleParam() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalRoleParam = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3425:2: (iv_ruleFormalRoleParam= ruleFormalRoleParam EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3426:2: iv_ruleFormalRoleParam= ruleFormalRoleParam EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalRoleParamRule()); 
            }
            pushFollow(FOLLOW_ruleFormalRoleParam_in_entryRuleFormalRoleParam7686);
            iv_ruleFormalRoleParam=ruleFormalRoleParam();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalRoleParam; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFormalRoleParam7696); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormalRoleParam"


    // $ANTLR start "ruleFormalRoleParam"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3433:1: ruleFormalRoleParam returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFormalRoleParam() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3436:28: ( ( ( (otherlv_0= RULE_ID ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3437:1: ( ( (otherlv_0= RULE_ID ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3437:1: ( ( (otherlv_0= RULE_ID ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3437:2: ( (otherlv_0= RULE_ID ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3437:2: ( (otherlv_0= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3438:1: (otherlv_0= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3438:1: (otherlv_0= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3439:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getFormalRoleParamRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFormalRoleParam7741); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getFormalRoleParamAccess().getTypeRoleTypeCrossReference_0_0()); 
              	
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3450:2: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3451:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3451:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3452:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFormalRoleParamAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleFormalRoleParam7762);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFormalRoleParamRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormalRoleParam"


    // $ANTLR start "entryRuleFormalRoleParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3476:1: entryRuleFormalRoleParamsBlock returns [EObject current=null] : iv_ruleFormalRoleParamsBlock= ruleFormalRoleParamsBlock EOF ;
    public final EObject entryRuleFormalRoleParamsBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalRoleParamsBlock = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3477:2: (iv_ruleFormalRoleParamsBlock= ruleFormalRoleParamsBlock EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3478:2: iv_ruleFormalRoleParamsBlock= ruleFormalRoleParamsBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalRoleParamsBlockRule()); 
            }
            pushFollow(FOLLOW_ruleFormalRoleParamsBlock_in_entryRuleFormalRoleParamsBlock7798);
            iv_ruleFormalRoleParamsBlock=ruleFormalRoleParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalRoleParamsBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFormalRoleParamsBlock7808); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormalRoleParamsBlock"


    // $ANTLR start "ruleFormalRoleParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3485:1: ruleFormalRoleParamsBlock returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleFormalRoleParamsBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_params_2_0 = null;

        EObject lv_params_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3488:28: ( ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )* )? otherlv_5= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3489:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )* )? otherlv_5= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3489:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )* )? otherlv_5= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3489:2: () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )* )? otherlv_5= ')'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3489:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3490:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalRoleParamsBlockAccess().getFormalRoleParamsBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleFormalRoleParamsBlock7854); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFormalRoleParamsBlockAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3499:1: ( ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )* )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_ID) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3499:2: ( (lv_params_2_0= ruleFormalRoleParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3499:2: ( (lv_params_2_0= ruleFormalRoleParam ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3500:1: (lv_params_2_0= ruleFormalRoleParam )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3500:1: (lv_params_2_0= ruleFormalRoleParam )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3501:3: lv_params_2_0= ruleFormalRoleParam
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFormalRoleParamsBlockAccess().getParamsFormalRoleParamParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFormalRoleParam_in_ruleFormalRoleParamsBlock7876);
                    lv_params_2_0=ruleFormalRoleParam();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFormalRoleParamsBlockRule());
                      	        }
                             		add(
                             			current, 
                             			"params",
                              		lv_params_2_0, 
                              		"FormalRoleParam");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3517:2: (otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==23) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3517:4: otherlv_3= ',' ( (lv_params_4_0= ruleFormalRoleParam ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleFormalRoleParamsBlock7889); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getFormalRoleParamsBlockAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3521:1: ( (lv_params_4_0= ruleFormalRoleParam ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3522:1: (lv_params_4_0= ruleFormalRoleParam )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3522:1: (lv_params_4_0= ruleFormalRoleParam )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3523:3: lv_params_4_0= ruleFormalRoleParam
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFormalRoleParamsBlockAccess().getParamsFormalRoleParamParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleFormalRoleParam_in_ruleFormalRoleParamsBlock7910);
                    	    lv_params_4_0=ruleFormalRoleParam();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFormalRoleParamsBlockRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"params",
                    	              		lv_params_4_0, 
                    	              		"FormalRoleParam");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,40,FOLLOW_40_in_ruleFormalRoleParamsBlock7926); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getFormalRoleParamsBlockAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormalRoleParamsBlock"


    // $ANTLR start "entryRuleRoleInstanceReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3551:1: entryRuleRoleInstanceReference returns [EObject current=null] : iv_ruleRoleInstanceReference= ruleRoleInstanceReference EOF ;
    public final EObject entryRuleRoleInstanceReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleInstanceReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3552:2: (iv_ruleRoleInstanceReference= ruleRoleInstanceReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3553:2: iv_ruleRoleInstanceReference= ruleRoleInstanceReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleInstanceReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleRoleInstanceReference_in_entryRuleRoleInstanceReference7962);
            iv_ruleRoleInstanceReference=ruleRoleInstanceReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleInstanceReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleInstanceReference7972); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleInstanceReference"


    // $ANTLR start "ruleRoleInstanceReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3560:1: ruleRoleInstanceReference returns [EObject current=null] : (this_AbstractRoleInstanceReference_0= ruleAbstractRoleInstanceReference | ( () otherlv_2= 'self' ) ) ;
    public final EObject ruleRoleInstanceReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_AbstractRoleInstanceReference_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3563:28: ( (this_AbstractRoleInstanceReference_0= ruleAbstractRoleInstanceReference | ( () otherlv_2= 'self' ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3564:1: (this_AbstractRoleInstanceReference_0= ruleAbstractRoleInstanceReference | ( () otherlv_2= 'self' ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3564:1: (this_AbstractRoleInstanceReference_0= ruleAbstractRoleInstanceReference | ( () otherlv_2= 'self' ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_ID) ) {
                alt31=1;
            }
            else if ( (LA31_0==56) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3565:5: this_AbstractRoleInstanceReference_0= ruleAbstractRoleInstanceReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRoleInstanceReferenceAccess().getAbstractRoleInstanceReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractRoleInstanceReference_in_ruleRoleInstanceReference8019);
                    this_AbstractRoleInstanceReference_0=ruleAbstractRoleInstanceReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractRoleInstanceReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3574:6: ( () otherlv_2= 'self' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3574:6: ( () otherlv_2= 'self' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3574:7: () otherlv_2= 'self'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3574:7: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3575:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getRoleInstanceReferenceAccess().getSelfReferenceAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,56,FOLLOW_56_in_ruleRoleInstanceReference8046); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getRoleInstanceReferenceAccess().getSelfKeyword_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleInstanceReference"


    // $ANTLR start "entryRuleAbstractRoleInstanceReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3592:1: entryRuleAbstractRoleInstanceReference returns [EObject current=null] : iv_ruleAbstractRoleInstanceReference= ruleAbstractRoleInstanceReference EOF ;
    public final EObject entryRuleAbstractRoleInstanceReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractRoleInstanceReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3593:2: (iv_ruleAbstractRoleInstanceReference= ruleAbstractRoleInstanceReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3594:2: iv_ruleAbstractRoleInstanceReference= ruleAbstractRoleInstanceReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractRoleInstanceReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractRoleInstanceReference_in_entryRuleAbstractRoleInstanceReference8083);
            iv_ruleAbstractRoleInstanceReference=ruleAbstractRoleInstanceReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractRoleInstanceReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractRoleInstanceReference8093); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractRoleInstanceReference"


    // $ANTLR start "ruleAbstractRoleInstanceReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3601:1: ruleAbstractRoleInstanceReference returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleAbstractRoleInstanceReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3604:28: ( ( (otherlv_0= RULE_ID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3605:1: ( (otherlv_0= RULE_ID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3605:1: ( (otherlv_0= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3606:1: (otherlv_0= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3606:1: (otherlv_0= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3607:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAbstractRoleInstanceReferenceRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAbstractRoleInstanceReference8137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getAbstractRoleInstanceReferenceAccess().getRefAbstractRoleInstanceCrossReference_0()); 
              	
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractRoleInstanceReference"


    // $ANTLR start "entryRuleActualRoleParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3626:1: entryRuleActualRoleParamsBlock returns [EObject current=null] : iv_ruleActualRoleParamsBlock= ruleActualRoleParamsBlock EOF ;
    public final EObject entryRuleActualRoleParamsBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActualRoleParamsBlock = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3627:2: (iv_ruleActualRoleParamsBlock= ruleActualRoleParamsBlock EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3628:2: iv_ruleActualRoleParamsBlock= ruleActualRoleParamsBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActualRoleParamsBlockRule()); 
            }
            pushFollow(FOLLOW_ruleActualRoleParamsBlock_in_entryRuleActualRoleParamsBlock8172);
            iv_ruleActualRoleParamsBlock=ruleActualRoleParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActualRoleParamsBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleActualRoleParamsBlock8182); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActualRoleParamsBlock"


    // $ANTLR start "ruleActualRoleParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3635:1: ruleActualRoleParamsBlock returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleActualRoleParamsBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_params_2_0 = null;

        EObject lv_params_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3638:28: ( ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )* )? otherlv_5= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3639:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )* )? otherlv_5= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3639:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )* )? otherlv_5= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3639:2: () otherlv_1= '(' ( ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )* )? otherlv_5= ')'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3639:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3640:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getActualRoleParamsBlockAccess().getActualRoleParamsBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleActualRoleParamsBlock8228); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getActualRoleParamsBlockAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3649:1: ( ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )* )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_ID||LA33_0==56) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3649:2: ( (lv_params_2_0= ruleRoleInstanceReference ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3649:2: ( (lv_params_2_0= ruleRoleInstanceReference ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3650:1: (lv_params_2_0= ruleRoleInstanceReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3650:1: (lv_params_2_0= ruleRoleInstanceReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3651:3: lv_params_2_0= ruleRoleInstanceReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getActualRoleParamsBlockAccess().getParamsRoleInstanceReferenceParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleRoleInstanceReference_in_ruleActualRoleParamsBlock8250);
                    lv_params_2_0=ruleRoleInstanceReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getActualRoleParamsBlockRule());
                      	        }
                             		add(
                             			current, 
                             			"params",
                              		lv_params_2_0, 
                              		"RoleInstanceReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3667:2: (otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==23) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3667:4: otherlv_3= ',' ( (lv_params_4_0= ruleRoleInstanceReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleActualRoleParamsBlock8263); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getActualRoleParamsBlockAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3671:1: ( (lv_params_4_0= ruleRoleInstanceReference ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3672:1: (lv_params_4_0= ruleRoleInstanceReference )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3672:1: (lv_params_4_0= ruleRoleInstanceReference )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3673:3: lv_params_4_0= ruleRoleInstanceReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getActualRoleParamsBlockAccess().getParamsRoleInstanceReferenceParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleRoleInstanceReference_in_ruleActualRoleParamsBlock8284);
                    	    lv_params_4_0=ruleRoleInstanceReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getActualRoleParamsBlockRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"params",
                    	              		lv_params_4_0, 
                    	              		"RoleInstanceReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,40,FOLLOW_40_in_ruleActualRoleParamsBlock8300); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getActualRoleParamsBlockAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActualRoleParamsBlock"


    // $ANTLR start "entryRuleAbstractDataVariable"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3701:1: entryRuleAbstractDataVariable returns [EObject current=null] : iv_ruleAbstractDataVariable= ruleAbstractDataVariable EOF ;
    public final EObject entryRuleAbstractDataVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractDataVariable = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3702:2: (iv_ruleAbstractDataVariable= ruleAbstractDataVariable EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3703:2: iv_ruleAbstractDataVariable= ruleAbstractDataVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractDataVariableRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractDataVariable_in_entryRuleAbstractDataVariable8336);
            iv_ruleAbstractDataVariable=ruleAbstractDataVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractDataVariable; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractDataVariable8346); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractDataVariable"


    // $ANTLR start "ruleAbstractDataVariable"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3710:1: ruleAbstractDataVariable returns [EObject current=null] : (this_FormalDataParam_0= ruleFormalDataParam | this_DataVariable_1= ruleDataVariable ) ;
    public final EObject ruleAbstractDataVariable() throws RecognitionException {
        EObject current = null;

        EObject this_FormalDataParam_0 = null;

        EObject this_DataVariable_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3713:28: ( (this_FormalDataParam_0= ruleFormalDataParam | this_DataVariable_1= ruleDataVariable ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3714:1: (this_FormalDataParam_0= ruleFormalDataParam | this_DataVariable_1= ruleDataVariable )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3714:1: (this_FormalDataParam_0= ruleFormalDataParam | this_DataVariable_1= ruleDataVariable )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_ID) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==RULE_ID||LA34_1==27||LA34_1==37||LA34_1==80) ) {
                    alt34=1;
                }
                else if ( (LA34_1==EOF) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA34_0==38||LA34_0==68) ) {
                alt34=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3715:5: this_FormalDataParam_0= ruleFormalDataParam
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataVariableAccess().getFormalDataParamParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFormalDataParam_in_ruleAbstractDataVariable8393);
                    this_FormalDataParam_0=ruleFormalDataParam();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FormalDataParam_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3725:5: this_DataVariable_1= ruleDataVariable
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataVariableAccess().getDataVariableParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDataVariable_in_ruleAbstractDataVariable8420);
                    this_DataVariable_1=ruleDataVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DataVariable_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractDataVariable"


    // $ANTLR start "entryRuleDataVariable"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3741:1: entryRuleDataVariable returns [EObject current=null] : iv_ruleDataVariable= ruleDataVariable EOF ;
    public final EObject entryRuleDataVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataVariable = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3742:2: (iv_ruleDataVariable= ruleDataVariable EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3743:2: iv_ruleDataVariable= ruleDataVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataVariableRule()); 
            }
            pushFollow(FOLLOW_ruleDataVariable_in_entryRuleDataVariable8455);
            iv_ruleDataVariable=ruleDataVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataVariable; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDataVariable8465); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataVariable"


    // $ANTLR start "ruleDataVariable"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3750:1: ruleDataVariable returns [EObject current=null] : ( (lv_name_0_0= ruleValidID ) ) ;
    public final EObject ruleDataVariable() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3753:28: ( ( (lv_name_0_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3754:1: ( (lv_name_0_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3754:1: ( (lv_name_0_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3755:1: (lv_name_0_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3755:1: (lv_name_0_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3756:3: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDataVariableAccess().getNameValidIDParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleDataVariable8510);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataVariableRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataVariable"


    // $ANTLR start "entryRuleFormalDataParam"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3780:1: entryRuleFormalDataParam returns [EObject current=null] : iv_ruleFormalDataParam= ruleFormalDataParam EOF ;
    public final EObject entryRuleFormalDataParam() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalDataParam = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3781:2: (iv_ruleFormalDataParam= ruleFormalDataParam EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3782:2: iv_ruleFormalDataParam= ruleFormalDataParam EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalDataParamRule()); 
            }
            pushFollow(FOLLOW_ruleFormalDataParam_in_entryRuleFormalDataParam8545);
            iv_ruleFormalDataParam=ruleFormalDataParam();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalDataParam; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFormalDataParam8555); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormalDataParam"


    // $ANTLR start "ruleFormalDataParam"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3789:1: ruleFormalDataParam returns [EObject current=null] : ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFormalDataParam() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3792:28: ( ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3793:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3793:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3793:2: ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3793:2: ( (lv_type_0_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3794:1: (lv_type_0_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3794:1: (lv_type_0_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3795:3: lv_type_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFormalDataParamAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleFormalDataParam8601);
            lv_type_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFormalDataParamRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3811:2: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3812:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3812:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3813:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFormalDataParamAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleFormalDataParam8622);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFormalDataParamRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormalDataParam"


    // $ANTLR start "entryRuleFormalDataParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3837:1: entryRuleFormalDataParamsBlock returns [EObject current=null] : iv_ruleFormalDataParamsBlock= ruleFormalDataParamsBlock EOF ;
    public final EObject entryRuleFormalDataParamsBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalDataParamsBlock = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3838:2: (iv_ruleFormalDataParamsBlock= ruleFormalDataParamsBlock EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3839:2: iv_ruleFormalDataParamsBlock= ruleFormalDataParamsBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalDataParamsBlockRule()); 
            }
            pushFollow(FOLLOW_ruleFormalDataParamsBlock_in_entryRuleFormalDataParamsBlock8658);
            iv_ruleFormalDataParamsBlock=ruleFormalDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalDataParamsBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFormalDataParamsBlock8668); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormalDataParamsBlock"


    // $ANTLR start "ruleFormalDataParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3846:1: ruleFormalDataParamsBlock returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleFormalDataParamsBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_params_2_0 = null;

        EObject lv_params_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3849:28: ( ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )* )? otherlv_5= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3850:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )* )? otherlv_5= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3850:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )* )? otherlv_5= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3850:2: () otherlv_1= '(' ( ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )* )? otherlv_5= ')'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3850:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3851:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalDataParamsBlockAccess().getFormalDataParamsBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleFormalDataParamsBlock8714); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFormalDataParamsBlockAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3860:1: ( ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )* )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_ID||LA36_0==38||LA36_0==68) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3860:2: ( (lv_params_2_0= ruleFormalDataParam ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3860:2: ( (lv_params_2_0= ruleFormalDataParam ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3861:1: (lv_params_2_0= ruleFormalDataParam )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3861:1: (lv_params_2_0= ruleFormalDataParam )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3862:3: lv_params_2_0= ruleFormalDataParam
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFormalDataParamsBlockAccess().getParamsFormalDataParamParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFormalDataParam_in_ruleFormalDataParamsBlock8736);
                    lv_params_2_0=ruleFormalDataParam();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFormalDataParamsBlockRule());
                      	        }
                             		add(
                             			current, 
                             			"params",
                              		lv_params_2_0, 
                              		"FormalDataParam");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3878:2: (otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==23) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3878:4: otherlv_3= ',' ( (lv_params_4_0= ruleFormalDataParam ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleFormalDataParamsBlock8749); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getFormalDataParamsBlockAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3882:1: ( (lv_params_4_0= ruleFormalDataParam ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3883:1: (lv_params_4_0= ruleFormalDataParam )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3883:1: (lv_params_4_0= ruleFormalDataParam )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3884:3: lv_params_4_0= ruleFormalDataParam
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFormalDataParamsBlockAccess().getParamsFormalDataParamParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleFormalDataParam_in_ruleFormalDataParamsBlock8770);
                    	    lv_params_4_0=ruleFormalDataParam();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFormalDataParamsBlockRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"params",
                    	              		lv_params_4_0, 
                    	              		"FormalDataParam");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,40,FOLLOW_40_in_ruleFormalDataParamsBlock8786); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getFormalDataParamsBlockAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormalDataParamsBlock"


    // $ANTLR start "entryRuleDataExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3912:1: entryRuleDataExpression returns [EObject current=null] : iv_ruleDataExpression= ruleDataExpression EOF ;
    public final EObject entryRuleDataExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3913:2: (iv_ruleDataExpression= ruleDataExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3914:2: iv_ruleDataExpression= ruleDataExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleDataExpression_in_entryRuleDataExpression8822);
            iv_ruleDataExpression=ruleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDataExpression8832); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataExpression"


    // $ANTLR start "ruleDataExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3921:1: ruleDataExpression returns [EObject current=null] : (this_SimpleDataExpression_0= ruleSimpleDataExpression | this_Addition_1= ruleAddition | this_Subtraction_2= ruleSubtraction ) ;
    public final EObject ruleDataExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SimpleDataExpression_0 = null;

        EObject this_Addition_1 = null;

        EObject this_Subtraction_2 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3924:28: ( (this_SimpleDataExpression_0= ruleSimpleDataExpression | this_Addition_1= ruleAddition | this_Subtraction_2= ruleSubtraction ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3925:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression | this_Addition_1= ruleAddition | this_Subtraction_2= ruleSubtraction )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3925:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression | this_Addition_1= ruleAddition | this_Subtraction_2= ruleSubtraction )
            int alt37=3;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3926:5: this_SimpleDataExpression_0= ruleSimpleDataExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataExpressionAccess().getSimpleDataExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleSimpleDataExpression_in_ruleDataExpression8879);
                    this_SimpleDataExpression_0=ruleSimpleDataExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleDataExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3936:5: this_Addition_1= ruleAddition
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataExpressionAccess().getAdditionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAddition_in_ruleDataExpression8906);
                    this_Addition_1=ruleAddition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Addition_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3946:5: this_Subtraction_2= ruleSubtraction
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDataExpressionAccess().getSubtractionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleSubtraction_in_ruleDataExpression8933);
                    this_Subtraction_2=ruleSubtraction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Subtraction_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataExpression"


    // $ANTLR start "entryRuleAddition"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3962:1: entryRuleAddition returns [EObject current=null] : iv_ruleAddition= ruleAddition EOF ;
    public final EObject entryRuleAddition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddition = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3963:2: (iv_ruleAddition= ruleAddition EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3964:2: iv_ruleAddition= ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_ruleAddition_in_entryRuleAddition8968);
            iv_ruleAddition=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddition; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAddition8978); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3971:1: ruleAddition returns [EObject current=null] : (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) ) ;
    public final EObject ruleAddition() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_SimpleDataExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3974:28: ( (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3975:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3975:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3976:5: this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) )
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditionAccess().getSimpleDataExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleSimpleDataExpression_in_ruleAddition9025);
            this_SimpleDataExpression_0=ruleSimpleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SimpleDataExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3984:1: ( () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3984:2: () ( (lv_operator_2_0= '+' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3984:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3985:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElementAndSet(
                          grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3990:2: ( (lv_operator_2_0= '+' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3991:1: (lv_operator_2_0= '+' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3991:1: (lv_operator_2_0= '+' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:3992:3: lv_operator_2_0= '+'
            {
            lv_operator_2_0=(Token)match(input,39,FOLLOW_39_in_ruleAddition9052); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_operator_2_0, grammarAccess.getAdditionAccess().getOperatorPlusSignKeyword_1_1_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAdditionRule());
              	        }
                     		setWithLastConsumed(current, "operator", lv_operator_2_0, "+");
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4005:2: ( (lv_right_3_0= ruleSimpleDataExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4006:1: (lv_right_3_0= ruleSimpleDataExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4006:1: (lv_right_3_0= ruleSimpleDataExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4007:3: lv_right_3_0= ruleSimpleDataExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAdditionAccess().getRightSimpleDataExpressionParserRuleCall_1_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSimpleDataExpression_in_ruleAddition9086);
            lv_right_3_0=ruleSimpleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAdditionRule());
              	        }
                     		set(
                     			current, 
                     			"right",
                      		lv_right_3_0, 
                      		"SimpleDataExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "entryRuleSubtraction"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4031:1: entryRuleSubtraction returns [EObject current=null] : iv_ruleSubtraction= ruleSubtraction EOF ;
    public final EObject entryRuleSubtraction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubtraction = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4032:2: (iv_ruleSubtraction= ruleSubtraction EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4033:2: iv_ruleSubtraction= ruleSubtraction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubtractionRule()); 
            }
            pushFollow(FOLLOW_ruleSubtraction_in_entryRuleSubtraction9123);
            iv_ruleSubtraction=ruleSubtraction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubtraction; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSubtraction9133); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubtraction"


    // $ANTLR start "ruleSubtraction"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4040:1: ruleSubtraction returns [EObject current=null] : (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) ) ;
    public final EObject ruleSubtraction() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_0=null;
        EObject this_SimpleDataExpression_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4043:28: ( (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4044:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4044:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4045:5: this_SimpleDataExpression_0= ruleSimpleDataExpression ( () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) )
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getSubtractionAccess().getSimpleDataExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleSimpleDataExpression_in_ruleSubtraction9180);
            this_SimpleDataExpression_0=ruleSimpleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_SimpleDataExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4053:1: ( () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4053:2: () ( (lv_operator_2_0= '-' ) ) ( (lv_right_3_0= ruleSimpleDataExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4053:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4054:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElementAndSet(
                          grammarAccess.getSubtractionAccess().getSubtractionLeftAction_1_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4059:2: ( (lv_operator_2_0= '-' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4060:1: (lv_operator_2_0= '-' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4060:1: (lv_operator_2_0= '-' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4061:3: lv_operator_2_0= '-'
            {
            lv_operator_2_0=(Token)match(input,57,FOLLOW_57_in_ruleSubtraction9207); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_operator_2_0, grammarAccess.getSubtractionAccess().getOperatorHyphenMinusKeyword_1_1_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSubtractionRule());
              	        }
                     		setWithLastConsumed(current, "operator", lv_operator_2_0, "-");
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4074:2: ( (lv_right_3_0= ruleSimpleDataExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4075:1: (lv_right_3_0= ruleSimpleDataExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4075:1: (lv_right_3_0= ruleSimpleDataExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4076:3: lv_right_3_0= ruleSimpleDataExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubtractionAccess().getRightSimpleDataExpressionParserRuleCall_1_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSimpleDataExpression_in_ruleSubtraction9241);
            lv_right_3_0=ruleSimpleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubtractionRule());
              	        }
                     		set(
                     			current, 
                     			"right",
                      		lv_right_3_0, 
                      		"SimpleDataExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubtraction"


    // $ANTLR start "entryRuleSimpleDataExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4100:1: entryRuleSimpleDataExpression returns [EObject current=null] : iv_ruleSimpleDataExpression= ruleSimpleDataExpression EOF ;
    public final EObject entryRuleSimpleDataExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleDataExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4101:2: (iv_ruleSimpleDataExpression= ruleSimpleDataExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4102:2: iv_ruleSimpleDataExpression= ruleSimpleDataExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleDataExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleSimpleDataExpression_in_entryRuleSimpleDataExpression9278);
            iv_ruleSimpleDataExpression=ruleSimpleDataExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleDataExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSimpleDataExpression9288); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleDataExpression"


    // $ANTLR start "ruleSimpleDataExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4109:1: ruleSimpleDataExpression returns [EObject current=null] : (this_AbstractDataReference_0= ruleAbstractDataReference | this_AbstractDataValue_1= ruleAbstractDataValue ) ;
    public final EObject ruleSimpleDataExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AbstractDataReference_0 = null;

        EObject this_AbstractDataValue_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4112:28: ( (this_AbstractDataReference_0= ruleAbstractDataReference | this_AbstractDataValue_1= ruleAbstractDataValue ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4113:1: (this_AbstractDataReference_0= ruleAbstractDataReference | this_AbstractDataValue_1= ruleAbstractDataValue )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4113:1: (this_AbstractDataReference_0= ruleAbstractDataReference | this_AbstractDataValue_1= ruleAbstractDataValue )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_ID||LA38_0==48||LA38_0==58) ) {
                alt38=1;
            }
            else if ( ((LA38_0>=RULE_INT && LA38_0<=RULE_DECIMAL)||(LA38_0>=98 && LA38_0<=99)) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4114:5: this_AbstractDataReference_0= ruleAbstractDataReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleDataExpressionAccess().getAbstractDataReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractDataReference_in_ruleSimpleDataExpression9335);
                    this_AbstractDataReference_0=ruleAbstractDataReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractDataReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4124:5: this_AbstractDataValue_1= ruleAbstractDataValue
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleDataExpressionAccess().getAbstractDataValueParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractDataValue_in_ruleSimpleDataExpression9362);
                    this_AbstractDataValue_1=ruleAbstractDataValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractDataValue_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleDataExpression"


    // $ANTLR start "entryRuleAbstractDataReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4140:1: entryRuleAbstractDataReference returns [EObject current=null] : iv_ruleAbstractDataReference= ruleAbstractDataReference EOF ;
    public final EObject entryRuleAbstractDataReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractDataReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4141:2: (iv_ruleAbstractDataReference= ruleAbstractDataReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4142:2: iv_ruleAbstractDataReference= ruleAbstractDataReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractDataReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractDataReference_in_entryRuleAbstractDataReference9397);
            iv_ruleAbstractDataReference=ruleAbstractDataReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractDataReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractDataReference9407); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractDataReference"


    // $ANTLR start "ruleAbstractDataReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4149:1: ruleAbstractDataReference returns [EObject current=null] : (this_AbstractDataVariableReference_0= ruleAbstractDataVariableReference | this_RoleAttributeTypeReference_1= ruleRoleAttributeTypeReference | this_ComponentAttributeTypeReference_2= ruleComponentAttributeTypeReference ) ;
    public final EObject ruleAbstractDataReference() throws RecognitionException {
        EObject current = null;

        EObject this_AbstractDataVariableReference_0 = null;

        EObject this_RoleAttributeTypeReference_1 = null;

        EObject this_ComponentAttributeTypeReference_2 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4152:28: ( (this_AbstractDataVariableReference_0= ruleAbstractDataVariableReference | this_RoleAttributeTypeReference_1= ruleRoleAttributeTypeReference | this_ComponentAttributeTypeReference_2= ruleComponentAttributeTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4153:1: (this_AbstractDataVariableReference_0= ruleAbstractDataVariableReference | this_RoleAttributeTypeReference_1= ruleRoleAttributeTypeReference | this_ComponentAttributeTypeReference_2= ruleComponentAttributeTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4153:1: (this_AbstractDataVariableReference_0= ruleAbstractDataVariableReference | this_RoleAttributeTypeReference_1= ruleRoleAttributeTypeReference | this_ComponentAttributeTypeReference_2= ruleComponentAttributeTypeReference )
            int alt39=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt39=1;
                }
                break;
            case 58:
                {
                alt39=2;
                }
                break;
            case 48:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4154:5: this_AbstractDataVariableReference_0= ruleAbstractDataVariableReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataReferenceAccess().getAbstractDataVariableReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractDataVariableReference_in_ruleAbstractDataReference9454);
                    this_AbstractDataVariableReference_0=ruleAbstractDataVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractDataVariableReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4164:5: this_RoleAttributeTypeReference_1= ruleRoleAttributeTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataReferenceAccess().getRoleAttributeTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRoleAttributeTypeReference_in_ruleAbstractDataReference9481);
                    this_RoleAttributeTypeReference_1=ruleRoleAttributeTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RoleAttributeTypeReference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4174:5: this_ComponentAttributeTypeReference_2= ruleComponentAttributeTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractDataReferenceAccess().getComponentAttributeTypeReferenceParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComponentAttributeTypeReference_in_ruleAbstractDataReference9508);
                    this_ComponentAttributeTypeReference_2=ruleComponentAttributeTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentAttributeTypeReference_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractDataReference"


    // $ANTLR start "entryRuleAbstractDataVariableReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4190:1: entryRuleAbstractDataVariableReference returns [EObject current=null] : iv_ruleAbstractDataVariableReference= ruleAbstractDataVariableReference EOF ;
    public final EObject entryRuleAbstractDataVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractDataVariableReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4191:2: (iv_ruleAbstractDataVariableReference= ruleAbstractDataVariableReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4192:2: iv_ruleAbstractDataVariableReference= ruleAbstractDataVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractDataVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractDataVariableReference_in_entryRuleAbstractDataVariableReference9543);
            iv_ruleAbstractDataVariableReference=ruleAbstractDataVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractDataVariableReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractDataVariableReference9553); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractDataVariableReference"


    // $ANTLR start "ruleAbstractDataVariableReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4199:1: ruleAbstractDataVariableReference returns [EObject current=null] : ( (otherlv_0= RULE_ID ) ) ;
    public final EObject ruleAbstractDataVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4202:28: ( ( (otherlv_0= RULE_ID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4203:1: ( (otherlv_0= RULE_ID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4203:1: ( (otherlv_0= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4204:1: (otherlv_0= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4204:1: (otherlv_0= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4205:3: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAbstractDataVariableReferenceRule());
              	        }
                      
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleAbstractDataVariableReference9597); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_0, grammarAccess.getAbstractDataVariableReferenceAccess().getRefAbstractDataVariableCrossReference_0()); 
              	
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractDataVariableReference"


    // $ANTLR start "entryRuleRoleAttributeTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4224:1: entryRuleRoleAttributeTypeReference returns [EObject current=null] : iv_ruleRoleAttributeTypeReference= ruleRoleAttributeTypeReference EOF ;
    public final EObject entryRuleRoleAttributeTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoleAttributeTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4225:2: (iv_ruleRoleAttributeTypeReference= ruleRoleAttributeTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4226:2: iv_ruleRoleAttributeTypeReference= ruleRoleAttributeTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleAttributeTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleRoleAttributeTypeReference_in_entryRuleRoleAttributeTypeReference9632);
            iv_ruleRoleAttributeTypeReference=ruleRoleAttributeTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoleAttributeTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRoleAttributeTypeReference9642); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoleAttributeTypeReference"


    // $ANTLR start "ruleRoleAttributeTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4233:1: ruleRoleAttributeTypeReference returns [EObject current=null] : (otherlv_0= 'self.' ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleRoleAttributeTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4236:28: ( (otherlv_0= 'self.' ( (otherlv_1= RULE_ID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4237:1: (otherlv_0= 'self.' ( (otherlv_1= RULE_ID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4237:1: (otherlv_0= 'self.' ( (otherlv_1= RULE_ID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4237:3: otherlv_0= 'self.' ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,58,FOLLOW_58_in_ruleRoleAttributeTypeReference9679); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRoleAttributeTypeReferenceAccess().getSelfKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4241:1: ( (otherlv_1= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4242:1: (otherlv_1= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4242:1: (otherlv_1= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4243:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getRoleAttributeTypeReferenceRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleRoleAttributeTypeReference9699); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getRoleAttributeTypeReferenceAccess().getRefRoleAttributeTypeCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoleAttributeTypeReference"


    // $ANTLR start "entryRuleComponentAttributeTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4262:1: entryRuleComponentAttributeTypeReference returns [EObject current=null] : iv_ruleComponentAttributeTypeReference= ruleComponentAttributeTypeReference EOF ;
    public final EObject entryRuleComponentAttributeTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponentAttributeTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4263:2: (iv_ruleComponentAttributeTypeReference= ruleComponentAttributeTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4264:2: iv_ruleComponentAttributeTypeReference= ruleComponentAttributeTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentAttributeTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleComponentAttributeTypeReference_in_entryRuleComponentAttributeTypeReference9735);
            iv_ruleComponentAttributeTypeReference=ruleComponentAttributeTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentAttributeTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentAttributeTypeReference9745); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentAttributeTypeReference"


    // $ANTLR start "ruleComponentAttributeTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4271:1: ruleComponentAttributeTypeReference returns [EObject current=null] : (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleComponentAttributeTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4274:28: ( (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4275:1: (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4275:1: (otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4275:3: otherlv_0= 'owner.' ( (otherlv_1= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_48_in_ruleComponentAttributeTypeReference9782); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComponentAttributeTypeReferenceAccess().getOwnerKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4279:1: ( (otherlv_1= RULE_ID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4280:1: (otherlv_1= RULE_ID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4280:1: (otherlv_1= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4281:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getComponentAttributeTypeReferenceRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleComponentAttributeTypeReference9802); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getComponentAttributeTypeReferenceAccess().getRefComponentAttributeTypeCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentAttributeTypeReference"


    // $ANTLR start "entryRuleActualDataParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4300:1: entryRuleActualDataParamsBlock returns [EObject current=null] : iv_ruleActualDataParamsBlock= ruleActualDataParamsBlock EOF ;
    public final EObject entryRuleActualDataParamsBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActualDataParamsBlock = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4301:2: (iv_ruleActualDataParamsBlock= ruleActualDataParamsBlock EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4302:2: iv_ruleActualDataParamsBlock= ruleActualDataParamsBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActualDataParamsBlockRule()); 
            }
            pushFollow(FOLLOW_ruleActualDataParamsBlock_in_entryRuleActualDataParamsBlock9838);
            iv_ruleActualDataParamsBlock=ruleActualDataParamsBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActualDataParamsBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleActualDataParamsBlock9848); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActualDataParamsBlock"


    // $ANTLR start "ruleActualDataParamsBlock"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4309:1: ruleActualDataParamsBlock returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleActualDataParamsBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_params_2_0 = null;

        EObject lv_params_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4312:28: ( ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )* )? otherlv_5= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4313:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )* )? otherlv_5= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4313:1: ( () otherlv_1= '(' ( ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )* )? otherlv_5= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4313:2: () otherlv_1= '(' ( ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )* )? otherlv_5= ')'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4313:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4314:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getActualDataParamsBlockAccess().getActualDataParamsBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleActualDataParamsBlock9894); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getActualDataParamsBlockAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4323:1: ( ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )* )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=RULE_ID && LA41_0<=RULE_DECIMAL)||LA41_0==48||LA41_0==58||(LA41_0>=98 && LA41_0<=99)) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4323:2: ( (lv_params_2_0= ruleDataExpression ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4323:2: ( (lv_params_2_0= ruleDataExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4324:1: (lv_params_2_0= ruleDataExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4324:1: (lv_params_2_0= ruleDataExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4325:3: lv_params_2_0= ruleDataExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getActualDataParamsBlockAccess().getParamsDataExpressionParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleDataExpression_in_ruleActualDataParamsBlock9916);
                    lv_params_2_0=ruleDataExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getActualDataParamsBlockRule());
                      	        }
                             		add(
                             			current, 
                             			"params",
                              		lv_params_2_0, 
                              		"DataExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4341:2: (otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) ) )*
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==23) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4341:4: otherlv_3= ',' ( (lv_params_4_0= ruleDataExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleActualDataParamsBlock9929); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getActualDataParamsBlockAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4345:1: ( (lv_params_4_0= ruleDataExpression ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4346:1: (lv_params_4_0= ruleDataExpression )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4346:1: (lv_params_4_0= ruleDataExpression )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4347:3: lv_params_4_0= ruleDataExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getActualDataParamsBlockAccess().getParamsDataExpressionParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleDataExpression_in_ruleActualDataParamsBlock9950);
                    	    lv_params_4_0=ruleDataExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getActualDataParamsBlockRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"params",
                    	              		lv_params_4_0, 
                    	              		"DataExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop40;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,40,FOLLOW_40_in_ruleActualDataParamsBlock9966); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getActualDataParamsBlockAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActualDataParamsBlock"


    // $ANTLR start "entryRuleAbstractHelenaEntity"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4377:1: entryRuleAbstractHelenaEntity returns [EObject current=null] : iv_ruleAbstractHelenaEntity= ruleAbstractHelenaEntity EOF ;
    public final EObject entryRuleAbstractHelenaEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractHelenaEntity = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4378:2: (iv_ruleAbstractHelenaEntity= ruleAbstractHelenaEntity EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4379:2: iv_ruleAbstractHelenaEntity= ruleAbstractHelenaEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractHelenaEntityRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractHelenaEntity_in_entryRuleAbstractHelenaEntity10004);
            iv_ruleAbstractHelenaEntity=ruleAbstractHelenaEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractHelenaEntity; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractHelenaEntity10014); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractHelenaEntity"


    // $ANTLR start "ruleAbstractHelenaEntity"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4386:1: ruleAbstractHelenaEntity returns [EObject current=null] : (this_ComponentType_0= ruleComponentType | this_RoleType_1= ruleRoleType | this_EnsembleStructure_2= ruleEnsembleStructure ) ;
    public final EObject ruleAbstractHelenaEntity() throws RecognitionException {
        EObject current = null;

        EObject this_ComponentType_0 = null;

        EObject this_RoleType_1 = null;

        EObject this_EnsembleStructure_2 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4389:28: ( (this_ComponentType_0= ruleComponentType | this_RoleType_1= ruleRoleType | this_EnsembleStructure_2= ruleEnsembleStructure ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4390:1: (this_ComponentType_0= ruleComponentType | this_RoleType_1= ruleRoleType | this_EnsembleStructure_2= ruleEnsembleStructure )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4390:1: (this_ComponentType_0= ruleComponentType | this_RoleType_1= ruleRoleType | this_EnsembleStructure_2= ruleEnsembleStructure )
            int alt42=3;
            switch ( input.LA(1) ) {
            case 16:
                {
                alt42=1;
                }
                break;
            case 21:
                {
                alt42=2;
                }
                break;
            case 26:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4391:5: this_ComponentType_0= ruleComponentType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractHelenaEntityAccess().getComponentTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComponentType_in_ruleAbstractHelenaEntity10061);
                    this_ComponentType_0=ruleComponentType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4401:5: this_RoleType_1= ruleRoleType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractHelenaEntityAccess().getRoleTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRoleType_in_ruleAbstractHelenaEntity10088);
                    this_RoleType_1=ruleRoleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RoleType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4411:5: this_EnsembleStructure_2= ruleEnsembleStructure
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractHelenaEntityAccess().getEnsembleStructureParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleEnsembleStructure_in_ruleAbstractHelenaEntity10115);
                    this_EnsembleStructure_2=ruleEnsembleStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnsembleStructure_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractHelenaEntity"


    // $ANTLR start "entryRuleAbstractFieldType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4427:1: entryRuleAbstractFieldType returns [EObject current=null] : iv_ruleAbstractFieldType= ruleAbstractFieldType EOF ;
    public final EObject entryRuleAbstractFieldType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractFieldType = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4428:2: (iv_ruleAbstractFieldType= ruleAbstractFieldType EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4429:2: iv_ruleAbstractFieldType= ruleAbstractFieldType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractFieldTypeRule()); 
            }
            pushFollow(FOLLOW_ruleAbstractFieldType_in_entryRuleAbstractFieldType10150);
            iv_ruleAbstractFieldType=ruleAbstractFieldType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractFieldType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAbstractFieldType10160); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractFieldType"


    // $ANTLR start "ruleAbstractFieldType"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4436:1: ruleAbstractFieldType returns [EObject current=null] : (this_AbstractComponentFieldType_0= ruleAbstractComponentFieldType | this_RoleAttributeType_1= ruleRoleAttributeType ) ;
    public final EObject ruleAbstractFieldType() throws RecognitionException {
        EObject current = null;

        EObject this_AbstractComponentFieldType_0 = null;

        EObject this_RoleAttributeType_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4439:28: ( (this_AbstractComponentFieldType_0= ruleAbstractComponentFieldType | this_RoleAttributeType_1= ruleRoleAttributeType ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4440:1: (this_AbstractComponentFieldType_0= ruleAbstractComponentFieldType | this_RoleAttributeType_1= ruleRoleAttributeType )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4440:1: (this_AbstractComponentFieldType_0= ruleAbstractComponentFieldType | this_RoleAttributeType_1= ruleRoleAttributeType )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==17||LA43_0==19) ) {
                alt43=1;
            }
            else if ( (LA43_0==24) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4441:5: this_AbstractComponentFieldType_0= ruleAbstractComponentFieldType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractFieldTypeAccess().getAbstractComponentFieldTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAbstractComponentFieldType_in_ruleAbstractFieldType10207);
                    this_AbstractComponentFieldType_0=ruleAbstractComponentFieldType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AbstractComponentFieldType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4451:5: this_RoleAttributeType_1= ruleRoleAttributeType
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAbstractFieldTypeAccess().getRoleAttributeTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRoleAttributeType_in_ruleAbstractFieldType10234);
                    this_RoleAttributeType_1=ruleRoleAttributeType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RoleAttributeType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractFieldType"


    // $ANTLR start "entryRuleXExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4471:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4472:2: (iv_ruleXExpression= ruleXExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4473:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXExpression_in_entryRuleXExpression10273);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpression10283); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4480:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4483:28: (this_XAssignment_0= ruleXAssignment )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4485:5: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_ruleXAssignment_in_ruleXExpression10329);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4501:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4502:2: (iv_ruleXAssignment= ruleXAssignment EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4503:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_ruleXAssignment_in_entryRuleXAssignment10363);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAssignment10373); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4510:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4513:28: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4514:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4514:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt45=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA45_1 = input.LA(2);

                if ( (LA45_1==29) ) {
                    alt45=1;
                }
                else if ( (LA45_1==EOF||(LA45_1>=RULE_ID && LA45_1<=RULE_DECIMAL)||(LA45_1>=14 && LA45_1<=15)||LA45_1==18||LA45_1==23||LA45_1==27||(LA45_1>=32 && LA45_1<=33)||(LA45_1>=37 && LA45_1<=42)||LA45_1==46||(LA45_1>=49 && LA45_1<=50)||(LA45_1>=52 && LA45_1<=54)||LA45_1==57||(LA45_1>=59 && LA45_1<=81)||(LA45_1>=83 && LA45_1<=107)) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 1, input);

                    throw nvae;
                }
                }
                break;
            case 92:
                {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==29) ) {
                    alt45=1;
                }
                else if ( (LA45_2==EOF||(LA45_2>=RULE_ID && LA45_2<=RULE_DECIMAL)||(LA45_2>=14 && LA45_2<=15)||LA45_2==18||LA45_2==23||LA45_2==27||(LA45_2>=32 && LA45_2<=33)||(LA45_2>=37 && LA45_2<=42)||LA45_2==46||(LA45_2>=49 && LA45_2<=50)||(LA45_2>=52 && LA45_2<=54)||LA45_2==57||(LA45_2>=59 && LA45_2<=81)||(LA45_2>=83 && LA45_2<=107)) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }
                }
                break;
            case 93:
                {
                int LA45_3 = input.LA(2);

                if ( (LA45_3==29) ) {
                    alt45=1;
                }
                else if ( (LA45_3==EOF||(LA45_3>=RULE_ID && LA45_3<=RULE_DECIMAL)||(LA45_3>=14 && LA45_3<=15)||LA45_3==18||LA45_3==23||LA45_3==27||(LA45_3>=32 && LA45_3<=33)||(LA45_3>=37 && LA45_3<=42)||LA45_3==46||(LA45_3>=49 && LA45_3<=50)||(LA45_3>=52 && LA45_3<=54)||LA45_3==57||(LA45_3>=59 && LA45_3<=81)||(LA45_3>=83 && LA45_3<=107)) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 3, input);

                    throw nvae;
                }
                }
                break;
            case 94:
                {
                int LA45_4 = input.LA(2);

                if ( (LA45_4==29) ) {
                    alt45=1;
                }
                else if ( (LA45_4==EOF||(LA45_4>=RULE_ID && LA45_4<=RULE_DECIMAL)||(LA45_4>=14 && LA45_4<=15)||LA45_4==18||LA45_4==23||LA45_4==27||(LA45_4>=32 && LA45_4<=33)||(LA45_4>=37 && LA45_4<=42)||LA45_4==46||(LA45_4>=49 && LA45_4<=50)||(LA45_4>=52 && LA45_4<=54)||LA45_4==57||(LA45_4>=59 && LA45_4<=81)||(LA45_4>=83 && LA45_4<=107)) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 4, input);

                    throw nvae;
                }
                }
                break;
            case 95:
                {
                int LA45_5 = input.LA(2);

                if ( (LA45_5==29) ) {
                    alt45=1;
                }
                else if ( (LA45_5==EOF||(LA45_5>=RULE_ID && LA45_5<=RULE_DECIMAL)||(LA45_5>=14 && LA45_5<=15)||LA45_5==18||LA45_5==23||LA45_5==27||(LA45_5>=32 && LA45_5<=33)||(LA45_5>=37 && LA45_5<=42)||LA45_5==46||(LA45_5>=49 && LA45_5<=50)||(LA45_5>=52 && LA45_5<=54)||LA45_5==57||(LA45_5>=59 && LA45_5<=81)||(LA45_5>=83 && LA45_5<=107)) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 14:
            case 27:
            case 38:
            case 39:
            case 41:
            case 46:
            case 57:
            case 79:
            case 80:
            case 83:
            case 87:
            case 88:
            case 89:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 106:
                {
                alt45=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4514:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4514:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4514:3: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4514:3: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4515:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4520:2: ( ( ruleFeatureCallID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4521:1: ( ruleFeatureCallID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4521:1: ( ruleFeatureCallID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4522:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXAssignment10431);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXAssignment10447);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4543:1: ( (lv_value_3_0= ruleXAssignment ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4544:1: (lv_value_3_0= ruleXAssignment )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4544:1: (lv_value_3_0= ruleXAssignment )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4545:3: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXAssignment_in_ruleXAssignment10467);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"XAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4562:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4562:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4563:5: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXOrExpression_in_ruleXAssignment10497);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XOrExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt44=2;
                    alt44 = dfa44.predict(input);
                    switch (alt44) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4576:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4576:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4576:7: ()
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4577:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4582:2: ( ( ruleOpMultiAssign ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4583:1: ( ruleOpMultiAssign )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4583:1: ( ruleOpMultiAssign )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4584:3: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getXAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleOpMultiAssign_in_ruleXAssignment10550);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4597:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4598:1: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4598:1: (lv_rightOperand_7_0= ruleXAssignment )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4599:3: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXAssignment_in_ruleXAssignment10573);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rightOperand",
                                      		lv_rightOperand_7_0, 
                                      		"XAssignment");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4623:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4624:2: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4625:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign10613);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpSingleAssign10624); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4632:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4635:28: (kw= '=' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4637:2: kw= '='
            {
            kw=(Token)match(input,29,FOLLOW_29_in_ruleOpSingleAssign10661); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4650:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4651:2: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4652:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign10701);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpMultiAssign10712); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4659:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4662:28: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4663:1: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4663:1: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt47=7;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt47=1;
                }
                break;
            case 60:
                {
                alt47=2;
                }
                break;
            case 61:
                {
                alt47=3;
                }
                break;
            case 62:
                {
                alt47=4;
                }
                break;
            case 63:
                {
                alt47=5;
                }
                break;
            case 27:
                {
                alt47=6;
                }
                break;
            case 32:
                {
                alt47=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4664:2: kw= '+='
                    {
                    kw=(Token)match(input,59,FOLLOW_59_in_ruleOpMultiAssign10750); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4671:2: kw= '-='
                    {
                    kw=(Token)match(input,60,FOLLOW_60_in_ruleOpMultiAssign10769); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4678:2: kw= '*='
                    {
                    kw=(Token)match(input,61,FOLLOW_61_in_ruleOpMultiAssign10788); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4685:2: kw= '/='
                    {
                    kw=(Token)match(input,62,FOLLOW_62_in_ruleOpMultiAssign10807); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4692:2: kw= '%='
                    {
                    kw=(Token)match(input,63,FOLLOW_63_in_ruleOpMultiAssign10826); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4698:6: (kw= '<' kw= '<' kw= '=' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4698:6: (kw= '<' kw= '<' kw= '=' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4699:2: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,27,FOLLOW_27_in_ruleOpMultiAssign10846); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); 
                          
                    }
                    kw=(Token)match(input,27,FOLLOW_27_in_ruleOpMultiAssign10859); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); 
                          
                    }
                    kw=(Token)match(input,29,FOLLOW_29_in_ruleOpMultiAssign10872); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4717:6: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4717:6: (kw= '>' (kw= '>' )? kw= '>=' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4718:2: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,32,FOLLOW_32_in_ruleOpMultiAssign10893); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4723:1: (kw= '>' )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==32) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4724:2: kw= '>'
                            {
                            kw=(Token)match(input,32,FOLLOW_32_in_ruleOpMultiAssign10907); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,54,FOLLOW_54_in_ruleOpMultiAssign10922); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4743:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4744:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4745:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression10963);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXOrExpression10973); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4752:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4755:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4756:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4756:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4757:5: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression11020);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==49) ) {
                    int LA48_2 = input.LA(2);

                    if ( (synpred2_InternalHelenaText()) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4770:6: ( () ( ( ruleOpOr ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4770:7: () ( ( ruleOpOr ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4770:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4771:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4776:2: ( ( ruleOpOr ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4777:1: ( ruleOpOr )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4777:1: ( ruleOpOr )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4778:3: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpOr_in_ruleXOrExpression11073);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4791:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4792:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4792:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4793:3: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression11096);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4817:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4818:2: (iv_ruleOpOr= ruleOpOr EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4819:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_ruleOpOr_in_entryRuleOpOr11135);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpOr11146); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4826:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4829:28: (kw= '||' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4831:2: kw= '||'
            {
            kw=(Token)match(input,49,FOLLOW_49_in_ruleOpOr11183); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4844:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4845:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4846:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression11222);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAndExpression11232); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4853:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4856:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4857:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4857:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4858:5: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression11279);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XEqualityExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==50) ) {
                    int LA49_2 = input.LA(2);

                    if ( (synpred3_InternalHelenaText()) ) {
                        alt49=1;
                    }


                }


                switch (alt49) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4871:6: ( () ( ( ruleOpAnd ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4871:7: () ( ( ruleOpAnd ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4871:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4872:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4877:2: ( ( ruleOpAnd ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4878:1: ( ruleOpAnd )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4878:1: ( ruleOpAnd )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4879:3: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpAnd_in_ruleXAndExpression11332);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4892:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4893:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4893:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4894:3: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression11355);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4918:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4919:2: (iv_ruleOpAnd= ruleOpAnd EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4920:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_ruleOpAnd_in_entryRuleOpAnd11394);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpAnd11405); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4927:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4930:28: (kw= '&&' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4932:2: kw= '&&'
            {
            kw=(Token)match(input,50,FOLLOW_50_in_ruleOpAnd11442); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4945:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4946:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4947:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression11481);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXEqualityExpression11491); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4954:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4957:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4958:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4958:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4959:5: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression11538);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XRelationalExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==52) ) {
                    int LA50_2 = input.LA(2);

                    if ( (synpred4_InternalHelenaText()) ) {
                        alt50=1;
                    }


                }
                else if ( (LA50_0==53) ) {
                    int LA50_3 = input.LA(2);

                    if ( (synpred4_InternalHelenaText()) ) {
                        alt50=1;
                    }


                }


                switch (alt50) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4972:6: ( () ( ( ruleOpEquality ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4972:7: () ( ( ruleOpEquality ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4972:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4973:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4978:2: ( ( ruleOpEquality ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4979:1: ( ruleOpEquality )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4979:1: ( ruleOpEquality )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4980:3: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpEquality_in_ruleXEqualityExpression11591);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4993:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4994:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4994:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4995:3: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression11614);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XRelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleXRelationalExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5019:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5020:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5021:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression11652);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXRelationalExpression11662); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5028:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5031:28: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5032:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5032:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5033:5: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression11709);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XOtherOperatorExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:1: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop51:
            do {
                int alt51=3;
                switch ( input.LA(1) ) {
                case 27:
                    {
                    int LA51_2 = input.LA(2);

                    if ( (synpred6_InternalHelenaText()) ) {
                        alt51=2;
                    }


                    }
                    break;
                case 32:
                    {
                    int LA51_3 = input.LA(2);

                    if ( (synpred6_InternalHelenaText()) ) {
                        alt51=2;
                    }


                    }
                    break;
                case 64:
                    {
                    int LA51_4 = input.LA(2);

                    if ( (synpred5_InternalHelenaText()) ) {
                        alt51=1;
                    }


                    }
                    break;
                case 54:
                    {
                    int LA51_5 = input.LA(2);

                    if ( (synpred6_InternalHelenaText()) ) {
                        alt51=2;
                    }


                    }
                    break;

                }

                switch (alt51) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:4: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5043:5: ( () otherlv_2= 'instanceof' )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5043:6: () otherlv_2= 'instanceof'
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5043:6: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5044:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,64,FOLLOW_64_in_ruleXRelationalExpression11745); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5053:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5054:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5054:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5055:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression11768);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5077:6: ( () ( ( ruleOpCompare ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5077:7: () ( ( ruleOpCompare ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5077:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5078:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5083:2: ( ( ruleOpCompare ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5084:1: ( ruleOpCompare )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5084:1: ( ruleOpCompare )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5085:3: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpCompare_in_ruleXRelationalExpression11829);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5098:4: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5099:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5099:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5100:3: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression11852);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_6_0, 
            	              		"XOtherOperatorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5124:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5125:2: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5126:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_entryRuleXOtherOperatorExpression11891);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXOtherOperatorExpression11901); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5133:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5136:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5137:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5137:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5138:5: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression11948);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAdditiveExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop52:
            do {
                int alt52=2;
                alt52 = dfa52.predict(input);
                switch (alt52) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5151:6: ( () ( ( ruleOpOther ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5151:7: () ( ( ruleOpOther ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5151:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5152:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5157:2: ( ( ruleOpOther ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5158:1: ( ruleOpOther )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5158:1: ( ruleOpOther )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5159:3: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpOther_in_ruleXOtherOperatorExpression12001);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5172:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5173:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5173:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5174:3: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression12024);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5198:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5199:2: (iv_ruleOpOther= ruleOpOther EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5200:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_ruleOpOther_in_entryRuleOpOther12063);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpOther12074); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5207:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5210:28: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5211:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5211:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt55=9;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5212:2: kw= '->'
                    {
                    kw=(Token)match(input,65,FOLLOW_65_in_ruleOpOther12112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5219:2: kw= '..<'
                    {
                    kw=(Token)match(input,66,FOLLOW_66_in_ruleOpOther12131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5225:6: (kw= '>' kw= '..' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5225:6: (kw= '>' kw= '..' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5226:2: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,32,FOLLOW_32_in_ruleOpOther12151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,67,FOLLOW_67_in_ruleOpOther12164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5239:2: kw= '..'
                    {
                    kw=(Token)match(input,67,FOLLOW_67_in_ruleOpOther12184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5246:2: kw= '=>'
                    {
                    kw=(Token)match(input,68,FOLLOW_68_in_ruleOpOther12203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5252:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5252:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5253:2: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,32,FOLLOW_32_in_ruleOpOther12223); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:1: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==32) ) {
                        int LA53_1 = input.LA(2);

                        if ( (LA53_1==EOF||(LA53_1>=RULE_ID && LA53_1<=RULE_DECIMAL)||LA53_1==14||LA53_1==27||(LA53_1>=38 && LA53_1<=39)||LA53_1==41||LA53_1==46||LA53_1==57||(LA53_1>=79 && LA53_1<=80)||LA53_1==83||(LA53_1>=87 && LA53_1<=89)||(LA53_1>=92 && LA53_1<=104)||LA53_1==106) ) {
                            alt53=2;
                        }
                        else if ( (LA53_1==32) && (synpred8_InternalHelenaText())) {
                            alt53=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 53, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 53, 0, input);

                        throw nvae;
                    }
                    switch (alt53) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:3: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5262:5: (kw= '>' kw= '>' )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5263:2: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,32,FOLLOW_32_in_ruleOpOther12254); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,32,FOLLOW_32_in_ruleOpOther12267); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5276:2: kw= '>'
                            {
                            kw=(Token)match(input,32,FOLLOW_32_in_ruleOpOther12288); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5282:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5282:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5283:2: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,27,FOLLOW_27_in_ruleOpOther12310); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:1: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt54=3;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==27) ) {
                        int LA54_1 = input.LA(2);

                        if ( (synpred9_InternalHelenaText()) ) {
                            alt54=1;
                        }
                        else if ( (true) ) {
                            alt54=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 54, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA54_0==68) ) {
                        alt54=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 54, 0, input);

                        throw nvae;
                    }
                    switch (alt54) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:3: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5292:5: (kw= '<' kw= '<' )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5293:2: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,27,FOLLOW_27_in_ruleOpOther12341); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,27,FOLLOW_27_in_ruleOpOther12354); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5306:2: kw= '<'
                            {
                            kw=(Token)match(input,27,FOLLOW_27_in_ruleOpOther12375); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5313:2: kw= '=>'
                            {
                            kw=(Token)match(input,68,FOLLOW_68_in_ruleOpOther12394); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5320:2: kw= '<>'
                    {
                    kw=(Token)match(input,69,FOLLOW_69_in_ruleOpOther12415); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5327:2: kw= '?:'
                    {
                    kw=(Token)match(input,70,FOLLOW_70_in_ruleOpOther12434); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5340:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5341:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5342:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression12474);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAdditiveExpression12484); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5349:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5352:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5353:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5353:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5354:5: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression12531);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMultiplicativeExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==39) ) {
                    int LA56_2 = input.LA(2);

                    if ( (synpred10_InternalHelenaText()) ) {
                        alt56=1;
                    }


                }
                else if ( (LA56_0==57) ) {
                    int LA56_3 = input.LA(2);

                    if ( (synpred10_InternalHelenaText()) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5367:6: ( () ( ( ruleOpAdd ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5367:7: () ( ( ruleOpAdd ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5367:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5368:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5373:2: ( ( ruleOpAdd ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5374:1: ( ruleOpAdd )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5374:1: ( ruleOpAdd )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5375:3: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression12584);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5388:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5389:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5389:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5390:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression12607);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5414:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5415:2: (iv_ruleOpAdd= ruleOpAdd EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5416:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_ruleOpAdd_in_entryRuleOpAdd12646);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpAdd12657); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5423:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5426:28: ( (kw= '+' | kw= '-' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5427:1: (kw= '+' | kw= '-' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5427:1: (kw= '+' | kw= '-' )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==39) ) {
                alt57=1;
            }
            else if ( (LA57_0==57) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5428:2: kw= '+'
                    {
                    kw=(Token)match(input,39,FOLLOW_39_in_ruleOpAdd12695); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5435:2: kw= '-'
                    {
                    kw=(Token)match(input,57,FOLLOW_57_in_ruleOpAdd12714); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5448:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5449:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5450:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression12754);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXMultiplicativeExpression12764); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5457:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5460:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5461:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5461:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5462:5: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression12811);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XUnaryOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop58:
            do {
                int alt58=2;
                switch ( input.LA(1) ) {
                case 33:
                    {
                    int LA58_2 = input.LA(2);

                    if ( (synpred11_InternalHelenaText()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case 71:
                    {
                    int LA58_3 = input.LA(2);

                    if ( (synpred11_InternalHelenaText()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case 72:
                    {
                    int LA58_4 = input.LA(2);

                    if ( (synpred11_InternalHelenaText()) ) {
                        alt58=1;
                    }


                    }
                    break;
                case 73:
                    {
                    int LA58_5 = input.LA(2);

                    if ( (synpred11_InternalHelenaText()) ) {
                        alt58=1;
                    }


                    }
                    break;

                }

                switch (alt58) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5475:6: ( () ( ( ruleOpMulti ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5475:7: () ( ( ruleOpMulti ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5475:7: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5476:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5481:2: ( ( ruleOpMulti ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5482:1: ( ruleOpMulti )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5482:1: ( ruleOpMulti )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5483:3: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression12864);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5496:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5497:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5497:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5498:3: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression12887);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5522:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5523:2: (iv_ruleOpMulti= ruleOpMulti EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5524:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_ruleOpMulti_in_entryRuleOpMulti12926);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpMulti12937); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5531:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5534:28: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5535:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5535:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt59=4;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt59=1;
                }
                break;
            case 71:
                {
                alt59=2;
                }
                break;
            case 72:
                {
                alt59=3;
                }
                break;
            case 73:
                {
                alt59=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }

            switch (alt59) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5536:2: kw= '*'
                    {
                    kw=(Token)match(input,33,FOLLOW_33_in_ruleOpMulti12975); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5543:2: kw= '**'
                    {
                    kw=(Token)match(input,71,FOLLOW_71_in_ruleOpMulti12994); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5550:2: kw= '/'
                    {
                    kw=(Token)match(input,72,FOLLOW_72_in_ruleOpMulti13013); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5557:2: kw= '%'
                    {
                    kw=(Token)match(input,73,FOLLOW_73_in_ruleOpMulti13032); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5570:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5571:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5572:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation13072);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXUnaryOperation13082); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5579:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5582:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5583:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5583:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==39||LA60_0==46||LA60_0==57) ) {
                alt60=1;
            }
            else if ( ((LA60_0>=RULE_ID && LA60_0<=RULE_DECIMAL)||LA60_0==14||LA60_0==27||LA60_0==38||LA60_0==41||(LA60_0>=79 && LA60_0<=80)||LA60_0==83||(LA60_0>=87 && LA60_0<=89)||(LA60_0>=92 && LA60_0<=104)||LA60_0==106) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5583:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5583:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5583:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5583:3: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5584:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5589:2: ( ( ruleOpUnary ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5590:1: ( ruleOpUnary )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5590:1: ( ruleOpUnary )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5591:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleOpUnary_in_ruleXUnaryOperation13140);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5604:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5605:1: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5605:1: (lv_operand_2_0= ruleXUnaryOperation )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5606:3: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation13161);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"XUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5624:5: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation13190);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCastedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5640:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5641:2: (iv_ruleOpUnary= ruleOpUnary EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5642:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_ruleOpUnary_in_entryRuleOpUnary13226);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpUnary13237); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5649:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5652:28: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5653:1: (kw= '!' | kw= '-' | kw= '+' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5653:1: (kw= '!' | kw= '-' | kw= '+' )
            int alt61=3;
            switch ( input.LA(1) ) {
            case 46:
                {
                alt61=1;
                }
                break;
            case 57:
                {
                alt61=2;
                }
                break;
            case 39:
                {
                alt61=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }

            switch (alt61) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5654:2: kw= '!'
                    {
                    kw=(Token)match(input,46,FOLLOW_46_in_ruleOpUnary13275); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5661:2: kw= '-'
                    {
                    kw=(Token)match(input,57,FOLLOW_57_in_ruleOpUnary13294); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5668:2: kw= '+'
                    {
                    kw=(Token)match(input,39,FOLLOW_39_in_ruleOpUnary13313); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5681:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5682:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5683:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression13353);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCastedExpression13363); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5690:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5693:28: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5694:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5694:1: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5695:5: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXPostfixOperation_in_ruleXCastedExpression13410);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPostfixOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:1: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==74) ) {
                    int LA62_2 = input.LA(2);

                    if ( (synpred12_InternalHelenaText()) ) {
                        alt62=1;
                    }


                }


                switch (alt62) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:3: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5705:5: ( () otherlv_2= 'as' )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5705:6: () otherlv_2= 'as'
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5705:6: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5706:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,74,FOLLOW_74_in_ruleXCastedExpression13445); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5715:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5716:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5716:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5717:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression13468);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5741:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5742:2: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5743:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_ruleXPostfixOperation_in_entryRuleXPostfixOperation13506);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXPostfixOperation13516); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5750:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5753:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5754:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5754:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5755:5: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXMemberFeatureCall_in_ruleXPostfixOperation13563);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMemberFeatureCall_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:1: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==75) ) {
                int LA63_1 = input.LA(2);

                if ( (synpred13_InternalHelenaText()) ) {
                    alt63=1;
                }
            }
            else if ( (LA63_0==76) ) {
                int LA63_2 = input.LA(2);

                if ( (synpred13_InternalHelenaText()) ) {
                    alt63=1;
                }
            }
            switch (alt63) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:2: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5768:6: ( () ( ( ruleOpPostfix ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5768:7: () ( ( ruleOpPostfix ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5768:7: ()
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5769:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5774:2: ( ( ruleOpPostfix ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5775:1: ( ruleOpPostfix )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5775:1: ( ruleOpPostfix )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5776:3: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleOpPostfix_in_ruleXPostfixOperation13615);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5797:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5798:2: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5799:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_ruleOpPostfix_in_entryRuleOpPostfix13655);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpPostfix13666); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5806:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5809:28: ( (kw= '++' | kw= '--' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5810:1: (kw= '++' | kw= '--' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5810:1: (kw= '++' | kw= '--' )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==75) ) {
                alt64=1;
            }
            else if ( (LA64_0==76) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5811:2: kw= '++'
                    {
                    kw=(Token)match(input,75,FOLLOW_75_in_ruleOpPostfix13704); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5818:2: kw= '--'
                    {
                    kw=(Token)match(input,76,FOLLOW_76_in_ruleOpPostfix13723); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5831:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5832:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5833:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall13763);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXMemberFeatureCall13773); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5840:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5843:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5844:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5844:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5845:5: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall13820);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPrimaryExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:1: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop73:
            do {
                int alt73=3;
                switch ( input.LA(1) ) {
                case 37:
                    {
                    int LA73_2 = input.LA(2);

                    if ( (synpred14_InternalHelenaText()) ) {
                        alt73=1;
                    }
                    else if ( (synpred15_InternalHelenaText()) ) {
                        alt73=2;
                    }


                    }
                    break;
                case 77:
                    {
                    int LA73_3 = input.LA(2);

                    if ( (synpred14_InternalHelenaText()) ) {
                        alt73=1;
                    }
                    else if ( (synpred15_InternalHelenaText()) ) {
                        alt73=2;
                    }


                    }
                    break;
                case 78:
                    {
                    int LA73_4 = input.LA(2);

                    if ( (synpred15_InternalHelenaText()) ) {
                        alt73=2;
                    }


                    }
                    break;

                }

                switch (alt73) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5866:25: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5866:26: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5866:26: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5867:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5872:2: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt65=2;
            	    int LA65_0 = input.LA(1);

            	    if ( (LA65_0==37) ) {
            	        alt65=1;
            	    }
            	    else if ( (LA65_0==77) ) {
            	        alt65=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 65, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt65) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5872:4: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,37,FOLLOW_37_in_ruleXMemberFeatureCall13892); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5877:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5877:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5878:1: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5878:1: (lv_explicitStatic_3_0= '::' )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5879:3: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,77,FOLLOW_77_in_ruleXMemberFeatureCall13916); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5892:3: ( ( ruleFeatureCallID ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5893:1: ( ruleFeatureCallID )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5893:1: ( ruleFeatureCallID )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5894:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall13953);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall13969);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5915:3: ( (lv_value_6_0= ruleXAssignment ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5916:1: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5916:1: (lv_value_6_0= ruleXAssignment )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5917:3: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall13991);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"value",
            	              		lv_value_6_0, 
            	              		"XAssignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5950:7: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5950:8: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5950:8: ()
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5951:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5956:2: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt66=3;
            	    switch ( input.LA(1) ) {
            	    case 37:
            	        {
            	        alt66=1;
            	        }
            	        break;
            	    case 78:
            	        {
            	        alt66=2;
            	        }
            	        break;
            	    case 77:
            	        {
            	        alt66=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 66, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt66) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5956:4: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,37,FOLLOW_37_in_ruleXMemberFeatureCall14077); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5961:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5961:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5962:1: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5962:1: (lv_nullSafe_9_0= '?.' )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5963:3: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,78,FOLLOW_78_in_ruleXMemberFeatureCall14101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "nullSafe", true, "?.");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5977:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5977:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5978:1: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5978:1: (lv_explicitStatic_10_0= '::' )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5979:3: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,77,FOLLOW_77_in_ruleXMemberFeatureCall14138); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5992:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt68=2;
            	    int LA68_0 = input.LA(1);

            	    if ( (LA68_0==27) ) {
            	        alt68=1;
            	    }
            	    switch (alt68) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5992:7: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,27,FOLLOW_27_in_ruleXMemberFeatureCall14167); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	                  
            	            }
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5996:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5997:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5997:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5998:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall14188);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"typeArguments",
            	                      		lv_typeArguments_12_0, 
            	                      		"JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6014:2: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop67:
            	            do {
            	                int alt67=2;
            	                int LA67_0 = input.LA(1);

            	                if ( (LA67_0==23) ) {
            	                    alt67=1;
            	                }


            	                switch (alt67) {
            	            	case 1 :
            	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6014:4: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,23,FOLLOW_23_in_ruleXMemberFeatureCall14201); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	          
            	            	    }
            	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6018:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6019:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6019:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6020:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall14222);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"typeArguments",
            	            	              		lv_typeArguments_14_0, 
            	            	              		"JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop67;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,32,FOLLOW_32_in_ruleXMemberFeatureCall14236); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6040:3: ( ( ruleIdOrSuper ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6041:1: ( ruleIdOrSuper )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6041:1: ( ruleIdOrSuper )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6042:3: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleIdOrSuper_in_ruleXMemberFeatureCall14261);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6055:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt71=2;
            	    alt71 = dfa71.predict(input);
            	    switch (alt71) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6055:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6055:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6055:4: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6062:1: (lv_explicitOperationCall_17_0= '(' )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6063:3: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,38,FOLLOW_38_in_ruleXMemberFeatureCall14295); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              	    
            	            }

            	            }


            	            }

            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt70=3;
            	            alt70 = dfa70.predict(input);
            	            switch (alt70) {
            	                case 1 :
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6093:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6094:3: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleXShortClosure_in_ruleXMemberFeatureCall14380);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_18_0, 
            	                              		"XShortClosure");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6111:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6111:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6111:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6111:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6112:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6112:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6113:3: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall14408);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_19_0, 
            	                              		"XExpression");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }

            	                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6129:2: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop69:
            	                    do {
            	                        int alt69=2;
            	                        int LA69_0 = input.LA(1);

            	                        if ( (LA69_0==23) ) {
            	                            alt69=1;
            	                        }


            	                        switch (alt69) {
            	                    	case 1 :
            	                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6129:4: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,23,FOLLOW_23_in_ruleXMemberFeatureCall14421); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	          	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	          
            	                    	    }
            	                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6133:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6134:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6134:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6135:3: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {
            	                    	       
            	                    	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall14442);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      	        }
            	                    	             		add(
            	                    	             			current, 
            	                    	             			"memberCallArguments",
            	                    	              		lv_memberCallArguments_21_0, 
            	                    	              		"XExpression");
            	                    	      	        afterParserOrEnumRuleCall();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop69;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,40,FOLLOW_40_in_ruleXMemberFeatureCall14459); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt72=2;
            	    alt72 = dfa72.predict(input);
            	    switch (alt72) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:4: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6158:1: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6159:3: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleXClosure_in_ruleXMemberFeatureCall14494);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"memberCallArguments",
            	                      		lv_memberCallArguments_23_0, 
            	                      		"XClosure");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6183:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6184:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6185:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression14534);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXPrimaryExpression14544); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6192:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6195:28: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6196:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6196:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt74=15;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6197:5: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXConstructorCall_in_ruleXPrimaryExpression14591);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XConstructorCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6207:5: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBlockExpression_in_ruleXPrimaryExpression14618);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBlockExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6217:5: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSwitchExpression_in_ruleXPrimaryExpression14645);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSwitchExpression_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:6: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:6: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:7: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSynchronizedExpression_in_ruleXPrimaryExpression14689);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSynchronizedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6240:5: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXFeatureCall_in_ruleXPrimaryExpression14717);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFeatureCall_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6250:5: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXLiteral_in_ruleXPrimaryExpression14744);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6260:5: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXIfExpression_in_ruleXPrimaryExpression14771);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XIfExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:6: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:6: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:7: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXForLoopExpression_in_ruleXPrimaryExpression14828);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XForLoopExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6288:5: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBasicForLoopExpression_in_ruleXPrimaryExpression14856);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBasicForLoopExpression_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6298:5: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXWhileExpression_in_ruleXPrimaryExpression14883);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XWhileExpression_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6308:5: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXDoWhileExpression_in_ruleXPrimaryExpression14910);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XDoWhileExpression_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6318:5: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXThrowExpression_in_ruleXPrimaryExpression14937);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XThrowExpression_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6328:5: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXReturnExpression_in_ruleXPrimaryExpression14964);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XReturnExpression_12; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6338:5: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXTryCatchFinallyExpression_in_ruleXPrimaryExpression14991);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTryCatchFinallyExpression_13; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6348:5: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXParenthesizedExpression_in_ruleXPrimaryExpression15018);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XParenthesizedExpression_14; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6364:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6365:2: (iv_ruleXLiteral= ruleXLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6366:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXLiteral_in_entryRuleXLiteral15053);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXLiteral15063); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6373:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6376:28: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6377:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6377:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt75=7;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==79) ) {
                alt75=1;
            }
            else if ( (LA75_0==80) && (synpred21_InternalHelenaText())) {
                alt75=2;
            }
            else if ( ((LA75_0>=98 && LA75_0<=99)) ) {
                alt75=3;
            }
            else if ( (LA75_0==RULE_INT||(LA75_0>=RULE_HEX && LA75_0<=RULE_DECIMAL)) ) {
                alt75=4;
            }
            else if ( (LA75_0==100) ) {
                alt75=5;
            }
            else if ( (LA75_0==RULE_STRING) ) {
                alt75=6;
            }
            else if ( (LA75_0==101) ) {
                alt75=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6378:5: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXCollectionLiteral_in_ruleXLiteral15110);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCollectionLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:7: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXLiteral15150);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XClosure_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6400:5: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral15178);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBooleanLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6410:5: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXNumberLiteral_in_ruleXLiteral15205);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNumberLiteral_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6420:5: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXNullLiteral_in_ruleXLiteral15232);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNullLiteral_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6430:5: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXStringLiteral_in_ruleXLiteral15259);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XStringLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6440:5: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXTypeLiteral_in_ruleXLiteral15286);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTypeLiteral_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6456:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6457:2: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6458:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXCollectionLiteral_in_entryRuleXCollectionLiteral15321);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCollectionLiteral15331); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6465:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6468:28: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6469:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6469:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==79) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==80) ) {
                    alt76=2;
                }
                else if ( (LA76_1==14) ) {
                    alt76=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6470:5: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSetLiteral_in_ruleXCollectionLiteral15378);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSetLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6480:5: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXListLiteral_in_ruleXCollectionLiteral15405);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XListLiteral_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6496:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6497:2: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6498:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXSetLiteral_in_entryRuleXSetLiteral15440);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSetLiteral15450); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6505:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6508:28: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6509:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6509:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6509:2: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6509:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6510:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,79,FOLLOW_79_in_ruleXSetLiteral15496); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,14,FOLLOW_14_in_ruleXSetLiteral15508); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6523:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=RULE_ID && LA78_0<=RULE_DECIMAL)||LA78_0==14||LA78_0==27||(LA78_0>=38 && LA78_0<=39)||LA78_0==41||LA78_0==46||LA78_0==57||(LA78_0>=79 && LA78_0<=80)||LA78_0==83||(LA78_0>=87 && LA78_0<=89)||(LA78_0>=92 && LA78_0<=104)||LA78_0==106) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6523:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6523:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6524:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6524:1: (lv_elements_3_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6525:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSetLiteral15530);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6541:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==23) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6541:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_23_in_ruleXSetLiteral15543); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6545:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6546:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6546:1: (lv_elements_5_0= ruleXExpression )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6547:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXSetLiteral15564);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,15,FOLLOW_15_in_ruleXSetLiteral15580); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6575:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6576:2: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6577:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXListLiteral_in_entryRuleXListLiteral15616);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXListLiteral15626); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6584:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6587:28: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6588:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6588:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6588:2: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6588:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6589:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,79,FOLLOW_79_in_ruleXListLiteral15672); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,80,FOLLOW_80_in_ruleXListLiteral15684); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6602:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=RULE_ID && LA80_0<=RULE_DECIMAL)||LA80_0==14||LA80_0==27||(LA80_0>=38 && LA80_0<=39)||LA80_0==41||LA80_0==46||LA80_0==57||(LA80_0>=79 && LA80_0<=80)||LA80_0==83||(LA80_0>=87 && LA80_0<=89)||(LA80_0>=92 && LA80_0<=104)||LA80_0==106) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6602:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6602:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6603:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6603:1: (lv_elements_3_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6604:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXListLiteral15706);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6620:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==23) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6620:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_23_in_ruleXListLiteral15719); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6624:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6625:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6625:1: (lv_elements_5_0= ruleXExpression )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6626:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXListLiteral15740);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop79;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,81,FOLLOW_81_in_ruleXListLiteral15756); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6654:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6655:2: (iv_ruleXClosure= ruleXClosure EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6656:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXClosure_in_entryRuleXClosure15792);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXClosure15802); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6663:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6666:28: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6667:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6667:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6667:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6667:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6667:3: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6669:5: ( () otherlv_1= '[' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6669:6: () otherlv_1= '['
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6669:6: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6670:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_80_in_ruleXClosure15862); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
                  
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6694:6: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6694:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6694:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==RULE_ID||LA82_0==38||LA82_0==68) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6694:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6694:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6695:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6695:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6696:3: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure15935);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"declaredFormalParameters",
                                      		lv_declaredFormalParameters_2_0, 
                                      		"JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6712:2: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==23) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6712:4: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleXClosure15948); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	          
                            	    }
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6716:1: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6717:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6717:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6718:3: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure15969);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredFormalParameters",
                            	              		lv_declaredFormalParameters_4_0, 
                            	              		"JvmFormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6734:6: ( (lv_explicitSyntax_5_0= '|' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6735:1: (lv_explicitSyntax_5_0= '|' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6735:1: (lv_explicitSyntax_5_0= '|' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6736:3: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,82,FOLLOW_82_in_ruleXClosure15991); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXClosureRule());
                      	        }
                             		setWithLastConsumed(current, "explicitSyntax", true, "|");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6749:5: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6750:1: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6750:1: (lv_expression_6_0= ruleXExpressionInClosure )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6751:3: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpressionInClosure_in_ruleXClosure16028);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"XExpressionInClosure");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,81,FOLLOW_81_in_ruleXClosure16040); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6779:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6780:2: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6781:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXExpressionInClosure_in_entryRuleXExpressionInClosure16076);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionInClosure16086); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6788:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6791:28: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6792:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6792:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6792:2: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6792:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6793:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6798:2: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( ((LA85_0>=RULE_ID && LA85_0<=RULE_DECIMAL)||LA85_0==14||LA85_0==27||(LA85_0>=38 && LA85_0<=39)||LA85_0==41||LA85_0==46||LA85_0==57||(LA85_0>=79 && LA85_0<=80)||LA85_0==83||(LA85_0>=87 && LA85_0<=104)||LA85_0==106) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6798:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6798:3: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6799:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6799:1: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6800:3: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXExpressionInClosure16142);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_1_0, 
            	              		"XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6816:2: (otherlv_2= ';' )?
            	    int alt84=2;
            	    int LA84_0 = input.LA(1);

            	    if ( (LA84_0==18) ) {
            	        alt84=1;
            	    }
            	    switch (alt84) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6816:4: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleXExpressionInClosure16155); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6828:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6829:2: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6830:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXShortClosure_in_entryRuleXShortClosure16195);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXShortClosure16205); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6837:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6840:28: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6841:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6841:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6841:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6841:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6841:3: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6857:6: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6857:7: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6857:7: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6858:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6863:2: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_ID||LA87_0==38||LA87_0==68) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6863:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6863:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6864:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6864:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6865:3: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure16313);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      	        }
                             		add(
                             			current, 
                             			"declaredFormalParameters",
                              		lv_declaredFormalParameters_1_0, 
                              		"JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6881:2: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop86:
                    do {
                        int alt86=2;
                        int LA86_0 = input.LA(1);

                        if ( (LA86_0==23) ) {
                            alt86=1;
                        }


                        switch (alt86) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6881:4: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,23,FOLLOW_23_in_ruleXShortClosure16326); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6885:1: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6886:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6886:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6887:3: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure16347);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredFormalParameters",
                    	              		lv_declaredFormalParameters_3_0, 
                    	              		"JvmFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6903:6: ( (lv_explicitSyntax_4_0= '|' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6904:1: (lv_explicitSyntax_4_0= '|' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6904:1: (lv_explicitSyntax_4_0= '|' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6905:3: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,82,FOLLOW_82_in_ruleXShortClosure16369); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXShortClosureRule());
              	        }
                     		setWithLastConsumed(current, "explicitSyntax", true, "|");
              	    
            }

            }


            }


            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6918:4: ( (lv_expression_5_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6919:1: (lv_expression_5_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6919:1: (lv_expression_5_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6920:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXShortClosure16405);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6944:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6945:2: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6946:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXParenthesizedExpression_in_entryRuleXParenthesizedExpression16441);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXParenthesizedExpression16451); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6953:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6956:28: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6957:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6957:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6957:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,38,FOLLOW_38_in_ruleXParenthesizedExpression16488); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXParenthesizedExpression16510);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XExpression_1; 
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,40,FOLLOW_40_in_ruleXParenthesizedExpression16521); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6982:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6983:2: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6984:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXIfExpression_in_entryRuleXIfExpression16557);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXIfExpression16567); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6991:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6994:28: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6995:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6995:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6995:2: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6995:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6996:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,41,FOLLOW_41_in_ruleXIfExpression16613); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXIfExpression16625); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7009:1: ( (lv_if_3_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7010:1: (lv_if_3_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7010:1: (lv_if_3_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7011:3: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression16646);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_40_in_ruleXIfExpression16658); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7031:1: ( (lv_then_5_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7032:1: (lv_then_5_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7032:1: (lv_then_5_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7033:3: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression16679);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7049:2: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==42) ) {
                int LA88_1 = input.LA(2);

                if ( (synpred25_InternalHelenaText()) ) {
                    alt88=1;
                }
            }
            switch (alt88) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7049:3: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7049:3: ( ( 'else' )=>otherlv_6= 'else' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7049:4: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,42,FOLLOW_42_in_ruleXIfExpression16700); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7054:2: ( (lv_else_7_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7055:1: (lv_else_7_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7055:1: (lv_else_7_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7056:3: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression16722);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7080:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7081:2: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7082:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXSwitchExpression_in_entryRuleXSwitchExpression16760);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSwitchExpression16770); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7089:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7092:28: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7093:1: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7093:1: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7093:2: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7093:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7094:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_83_in_ruleXSwitchExpression16816); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:1: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:2: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:2: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:3: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:3: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:4: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7109:5: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7109:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXSwitchExpression16854); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7113:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7114:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7114:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7115:3: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression16875);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredParam",
                              		lv_declaredParam_3_0, 
                              		"JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,84,FOLLOW_84_in_ruleXSwitchExpression16887); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                          
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7135:3: ( (lv_switch_5_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7136:1: (lv_switch_5_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7136:1: (lv_switch_5_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7137:3: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression16910);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_5_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,40,FOLLOW_40_in_ruleXSwitchExpression16922); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:6: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt89=2;
                    alt89 = dfa89.predict(input);
                    switch (alt89) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:8: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7163:5: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7163:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7163:6: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7164:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7164:1: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7165:3: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression16971);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredParam",
                                      		lv_declaredParam_7_0, 
                                      		"JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,84,FOLLOW_84_in_ruleXSwitchExpression16983); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7185:4: ( (lv_switch_9_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7186:1: (lv_switch_9_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7186:1: (lv_switch_9_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7187:3: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression17007);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_9_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,14,FOLLOW_14_in_ruleXSwitchExpression17021); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7207:1: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==RULE_ID||LA91_0==23||LA91_0==38||LA91_0==68||LA91_0==84||LA91_0==86) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7208:1: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7208:1: (lv_cases_11_0= ruleXCasePart )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7209:3: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXCasePart_in_ruleXSwitchExpression17042);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_11_0, 
            	              		"XCasePart");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7225:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==85) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7225:5: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,85,FOLLOW_85_in_ruleXSwitchExpression17056); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                          
                    }
                    otherlv_13=(Token)match(input,84,FOLLOW_84_in_ruleXSwitchExpression17068); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7233:1: ( (lv_default_14_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7234:1: (lv_default_14_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7234:1: (lv_default_14_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7235:3: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression17089);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_14_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,15,FOLLOW_15_in_ruleXSwitchExpression17103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7263:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7264:2: (iv_ruleXCasePart= ruleXCasePart EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7265:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_ruleXCasePart_in_entryRuleXCasePart17139);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCasePart17149); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7272:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7275:28: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7276:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7276:1: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7276:2: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7276:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7277:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7282:2: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==RULE_ID||LA93_0==38||LA93_0==68) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7283:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7283:1: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7284:3: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCasePart17204);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"typeGuard",
                              		lv_typeGuard_1_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7300:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==86) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7300:5: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,86,FOLLOW_86_in_ruleXCasePart17218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7304:1: ( (lv_case_3_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7305:1: (lv_case_3_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7305:1: (lv_case_3_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7306:3: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart17239);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"case",
                              		lv_case_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7322:4: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==84) ) {
                alt95=1;
            }
            else if ( (LA95_0==23) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7322:5: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7322:5: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7322:7: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,84,FOLLOW_84_in_ruleXCasePart17255); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7326:1: ( (lv_then_5_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7327:1: (lv_then_5_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7327:1: (lv_then_5_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7328:3: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart17276);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"then",
                              		lv_then_5_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7345:6: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7345:6: ( (lv_fallThrough_6_0= ',' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7346:1: (lv_fallThrough_6_0= ',' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7346:1: (lv_fallThrough_6_0= ',' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7347:3: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,23,FOLLOW_23_in_ruleXCasePart17301); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXCasePartRule());
                      	        }
                             		setWithLastConsumed(current, "fallThrough", true, ",");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7368:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7369:2: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7370:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXForLoopExpression_in_entryRuleXForLoopExpression17351);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXForLoopExpression17361); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7377:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7380:28: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7381:1: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7381:1: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7381:2: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7381:2: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7381:3: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7389:5: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7389:6: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7389:6: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7390:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_87_in_ruleXForLoopExpression17438); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXForLoopExpression17450); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7403:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7404:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7404:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7405:3: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXForLoopExpression17471);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_3_0, 
                      		"JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,84,FOLLOW_84_in_ruleXForLoopExpression17483); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
                  
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7425:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7426:1: (lv_forExpression_5_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7426:1: (lv_forExpression_5_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7427:3: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXForLoopExpression17506);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,40,FOLLOW_40_in_ruleXForLoopExpression17518); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7447:1: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7448:1: (lv_eachExpression_7_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7448:1: (lv_eachExpression_7_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7449:3: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXForLoopExpression17539);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_7_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7473:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7474:2: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7475:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXBasicForLoopExpression_in_entryRuleXBasicForLoopExpression17575);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBasicForLoopExpression17585); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7482:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7485:28: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7486:1: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7486:1: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7486:2: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7486:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7487:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_87_in_ruleXBasicForLoopExpression17631); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXBasicForLoopExpression17643); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7500:1: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( ((LA97_0>=RULE_ID && LA97_0<=RULE_DECIMAL)||LA97_0==14||LA97_0==27||(LA97_0>=38 && LA97_0<=39)||LA97_0==41||LA97_0==46||LA97_0==57||(LA97_0>=79 && LA97_0<=80)||LA97_0==83||(LA97_0>=87 && LA97_0<=104)||LA97_0==106) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7500:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7500:2: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7501:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7501:1: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7502:3: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression17665);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"initExpressions",
                              		lv_initExpressions_3_0, 
                              		"XExpressionOrVarDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7518:2: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==23) ) {
                            alt96=1;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7518:4: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_23_in_ruleXBasicForLoopExpression17678); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7522:1: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7523:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7523:1: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7524:3: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression17699);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"initExpressions",
                    	              		lv_initExpressions_5_0, 
                    	              		"XExpressionOrVarDeclaration");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,18,FOLLOW_18_in_ruleXBasicForLoopExpression17715); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7544:1: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=RULE_ID && LA98_0<=RULE_DECIMAL)||LA98_0==14||LA98_0==27||(LA98_0>=38 && LA98_0<=39)||LA98_0==41||LA98_0==46||LA98_0==57||(LA98_0>=79 && LA98_0<=80)||LA98_0==83||(LA98_0>=87 && LA98_0<=89)||(LA98_0>=92 && LA98_0<=104)||LA98_0==106) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7545:1: (lv_expression_7_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7545:1: (lv_expression_7_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7546:3: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17736);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,18,FOLLOW_18_in_ruleXBasicForLoopExpression17749); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7566:1: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( ((LA100_0>=RULE_ID && LA100_0<=RULE_DECIMAL)||LA100_0==14||LA100_0==27||(LA100_0>=38 && LA100_0<=39)||LA100_0==41||LA100_0==46||LA100_0==57||(LA100_0>=79 && LA100_0<=80)||LA100_0==83||(LA100_0>=87 && LA100_0<=89)||(LA100_0>=92 && LA100_0<=104)||LA100_0==106) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7566:2: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7566:2: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7567:1: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7567:1: (lv_updateExpressions_9_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7568:3: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17771);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"updateExpressions",
                              		lv_updateExpressions_9_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7584:2: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==23) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7584:4: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,23,FOLLOW_23_in_ruleXBasicForLoopExpression17784); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7588:1: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7589:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7589:1: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7590:3: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17805);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"updateExpressions",
                    	              		lv_updateExpressions_11_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,40,FOLLOW_40_in_ruleXBasicForLoopExpression17821); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7610:1: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7611:1: (lv_eachExpression_13_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7611:1: (lv_eachExpression_13_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7612:3: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17842);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_13_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7636:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7637:2: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7638:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXWhileExpression_in_entryRuleXWhileExpression17878);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXWhileExpression17888); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7645:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7648:28: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7649:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7649:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7649:2: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7649:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7650:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,88,FOLLOW_88_in_ruleXWhileExpression17934); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXWhileExpression17946); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7663:1: ( (lv_predicate_3_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7664:1: (lv_predicate_3_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7664:1: (lv_predicate_3_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7665:3: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXWhileExpression17967);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_40_in_ruleXWhileExpression17979); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7685:1: ( (lv_body_5_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7686:1: (lv_body_5_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7686:1: (lv_body_5_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7687:3: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXWhileExpression18000);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7711:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7712:2: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7713:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXDoWhileExpression_in_entryRuleXDoWhileExpression18036);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXDoWhileExpression18046); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7720:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7723:28: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7724:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7724:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7724:2: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7724:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7725:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_89_in_ruleXDoWhileExpression18092); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7734:1: ( (lv_body_2_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7735:1: (lv_body_2_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7735:1: (lv_body_2_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7736:3: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXDoWhileExpression18113);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,88,FOLLOW_88_in_ruleXDoWhileExpression18125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,38,FOLLOW_38_in_ruleXDoWhileExpression18137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7760:1: ( (lv_predicate_5_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7761:1: (lv_predicate_5_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7761:1: (lv_predicate_5_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7762:3: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXDoWhileExpression18158);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,40,FOLLOW_40_in_ruleXDoWhileExpression18170); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7790:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7791:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7792:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression18206);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBlockExpression18216); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7799:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7802:28: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7803:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7803:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7803:2: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7803:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7804:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,14,FOLLOW_14_in_ruleXBlockExpression18262); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7813:1: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( ((LA102_0>=RULE_ID && LA102_0<=RULE_DECIMAL)||LA102_0==14||LA102_0==27||(LA102_0>=38 && LA102_0<=39)||LA102_0==41||LA102_0==46||LA102_0==57||(LA102_0>=79 && LA102_0<=80)||LA102_0==83||(LA102_0>=87 && LA102_0<=104)||LA102_0==106) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7813:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7813:2: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7814:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7814:1: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7815:3: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBlockExpression18284);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"XExpressionOrVarDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7831:2: (otherlv_3= ';' )?
            	    int alt101=2;
            	    int LA101_0 = input.LA(1);

            	    if ( (LA101_0==18) ) {
            	        alt101=1;
            	    }
            	    switch (alt101) {
            	        case 1 :
            	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7831:4: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleXBlockExpression18297); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_4=(Token)match(input,15,FOLLOW_15_in_ruleXBlockExpression18313); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7847:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7848:2: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7849:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXExpressionOrVarDeclaration_in_entryRuleXExpressionOrVarDeclaration18349);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionOrVarDeclaration18359); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7856:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7859:28: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7860:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7860:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0>=90 && LA103_0<=91)) ) {
                alt103=1;
            }
            else if ( ((LA103_0>=RULE_ID && LA103_0<=RULE_DECIMAL)||LA103_0==14||LA103_0==27||(LA103_0>=38 && LA103_0<=39)||LA103_0==41||LA103_0==46||LA103_0==57||(LA103_0>=79 && LA103_0<=80)||LA103_0==83||(LA103_0>=87 && LA103_0<=89)||(LA103_0>=92 && LA103_0<=104)||LA103_0==106) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7861:5: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXVariableDeclaration_in_ruleXExpressionOrVarDeclaration18406);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XVariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7871:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXExpressionOrVarDeclaration18433);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7887:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7888:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7889:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration18468);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXVariableDeclaration18478); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7896:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7899:28: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7900:1: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7900:1: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7900:2: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7900:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7901:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7906:2: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==90) ) {
                alt104=1;
            }
            else if ( (LA104_0==91) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7906:3: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7906:3: ( (lv_writeable_1_0= 'var' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7907:1: (lv_writeable_1_0= 'var' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7907:1: (lv_writeable_1_0= 'var' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7908:3: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,90,FOLLOW_90_in_ruleXVariableDeclaration18531); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "writeable", true, "var");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7922:7: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,91,FOLLOW_91_in_ruleXVariableDeclaration18562); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:2: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==RULE_ID) ) {
                int LA105_1 = input.LA(2);

                if ( (synpred29_InternalHelenaText()) ) {
                    alt105=1;
                }
                else if ( (true) ) {
                    alt105=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 105, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA105_0==38) && (synpred29_InternalHelenaText())) {
                alt105=1;
            }
            else if ( (LA105_0==68) && (synpred29_InternalHelenaText())) {
                alt105=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7934:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7934:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7934:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7935:1: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7935:1: (lv_type_3_0= ruleJvmTypeReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7936:3: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration18610);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_3_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7952:2: ( (lv_name_4_0= ruleValidID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7953:1: (lv_name_4_0= ruleValidID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7953:1: (lv_name_4_0= ruleValidID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7954:3: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration18631);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7971:6: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7971:6: ( (lv_name_5_0= ruleValidID ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7972:1: (lv_name_5_0= ruleValidID )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7972:1: (lv_name_5_0= ruleValidID )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7973:3: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration18660);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7989:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==29) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7989:5: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,29,FOLLOW_29_in_ruleXVariableDeclaration18674); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7993:1: ( (lv_right_7_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7994:1: (lv_right_7_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7994:1: (lv_right_7_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7995:3: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXVariableDeclaration18695);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8019:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8020:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8021:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter18733);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmFormalParameter18743); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8028:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8031:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8032:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8032:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8032:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8032:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==RULE_ID) ) {
                int LA107_1 = input.LA(2);

                if ( (LA107_1==RULE_ID||LA107_1==27||LA107_1==37||LA107_1==80) ) {
                    alt107=1;
                }
            }
            else if ( (LA107_0==38||LA107_0==68) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8033:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8033:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8034:3: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter18789);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"parameterType",
                              		lv_parameterType_0_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8050:3: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8051:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8051:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8052:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleJvmFormalParameter18811);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8076:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8077:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8078:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter18847);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFullJvmFormalParameter18857); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8085:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8088:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8089:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8089:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8089:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8089:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8090:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8090:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8091:3: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter18903);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_0_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8107:2: ( (lv_name_1_0= ruleValidID ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8108:1: (lv_name_1_0= ruleValidID )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8108:1: (lv_name_1_0= ruleValidID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8109:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter18924);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8133:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8134:2: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8135:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_ruleXFeatureCall_in_entryRuleXFeatureCall18960);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXFeatureCall18970); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8142:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8145:28: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8146:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8146:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8146:2: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8146:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8147:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8152:2: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==27) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8152:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_27_in_ruleXFeatureCall19017); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8156:1: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8157:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8157:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8158:3: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall19038);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_2_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8174:2: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==23) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8174:4: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleXFeatureCall19051); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8178:1: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8179:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8179:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8180:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall19072);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_4_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,32,FOLLOW_32_in_ruleXFeatureCall19086); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8200:3: ( ( ruleIdOrSuper ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8201:1: ( ruleIdOrSuper )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8201:1: ( ruleIdOrSuper )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8202:3: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXFeatureCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleIdOrSuper_in_ruleXFeatureCall19111);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8215:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt112=2;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8215:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8215:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8215:4: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8222:1: (lv_explicitOperationCall_7_0= '(' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8223:3: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,38,FOLLOW_38_in_ruleXFeatureCall19145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFeatureCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt111=3;
                    alt111 = dfa111.predict(input);
                    switch (alt111) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8253:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8254:3: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXShortClosure_in_ruleXFeatureCall19230);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_8_0, 
                                      		"XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8271:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8271:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8271:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8271:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8272:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8272:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8273:3: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXFeatureCall19258);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_9_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8289:2: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop110:
                            do {
                                int alt110=2;
                                int LA110_0 = input.LA(1);

                                if ( (LA110_0==23) ) {
                                    alt110=1;
                                }


                                switch (alt110) {
                            	case 1 :
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8289:4: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,23,FOLLOW_23_in_ruleXFeatureCall19271); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	          
                            	    }
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8293:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8294:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8294:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8295:3: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleXExpression_in_ruleXFeatureCall19292);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"featureCallArguments",
                            	              		lv_featureCallArguments_11_0, 
                            	              		"XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop110;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,40,FOLLOW_40_in_ruleXFeatureCall19309); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8318:1: (lv_featureCallArguments_13_0= ruleXClosure )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8319:3: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXFeatureCall19344);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"featureCallArguments",
                              		lv_featureCallArguments_13_0, 
                              		"XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8343:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8344:2: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8345:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID19382);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeatureCallID19393); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8352:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8355:28: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8356:1: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8356:1: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt114=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt114=1;
                }
                break;
            case 92:
                {
                alt114=2;
                }
                break;
            case 93:
                {
                alt114=3;
                }
                break;
            case 94:
                {
                alt114=4;
                }
                break;
            case 95:
                {
                alt114=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }

            switch (alt114) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8357:5: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleFeatureCallID19440);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ValidID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8369:2: kw= 'extends'
                    {
                    kw=(Token)match(input,92,FOLLOW_92_in_ruleFeatureCallID19464); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8376:2: kw= 'static'
                    {
                    kw=(Token)match(input,93,FOLLOW_93_in_ruleFeatureCallID19483); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8383:2: kw= 'import'
                    {
                    kw=(Token)match(input,94,FOLLOW_94_in_ruleFeatureCallID19502); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8390:2: kw= 'extension'
                    {
                    kw=(Token)match(input,95,FOLLOW_95_in_ruleFeatureCallID19521); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8403:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8404:2: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8405:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper19562);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIdOrSuper19573); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8412:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8415:28: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8416:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8416:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==RULE_ID||(LA115_0>=92 && LA115_0<=95)) ) {
                alt115=1;
            }
            else if ( (LA115_0==96) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8417:5: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper19620);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FeatureCallID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8429:2: kw= 'super'
                    {
                    kw=(Token)match(input,96,FOLLOW_96_in_ruleIdOrSuper19644); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8442:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8443:2: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8444:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_ruleXConstructorCall_in_entryRuleXConstructorCall19684);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXConstructorCall19694); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8451:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8454:28: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8455:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8455:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8455:2: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8455:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8456:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,97,FOLLOW_97_in_ruleXConstructorCall19740); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8465:1: ( ( ruleQualifiedName ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8466:1: ( ruleQualifiedName )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8466:1: ( ruleQualifiedName )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8467:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXConstructorCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleXConstructorCall19763);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8480:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt117=2;
            alt117 = dfa117.predict(input);
            switch (alt117) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8480:3: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8480:3: ( ( '<' )=>otherlv_3= '<' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8480:4: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,27,FOLLOW_27_in_ruleXConstructorCall19784); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8485:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8486:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8486:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8487:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall19806);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_4_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8503:2: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==23) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8503:4: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,23,FOLLOW_23_in_ruleXConstructorCall19819); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8507:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8508:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8508:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8509:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall19840);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_6_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,32,FOLLOW_32_in_ruleXConstructorCall19854); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                          
                    }

                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8529:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt120=2;
            alt120 = dfa120.predict(input);
            switch (alt120) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8529:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8529:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8529:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8536:1: (lv_explicitConstructorCall_8_0= '(' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8537:3: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,38,FOLLOW_38_in_ruleXConstructorCall19890); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXConstructorCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt119=3;
                    alt119 = dfa119.predict(input);
                    switch (alt119) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8567:1: (lv_arguments_9_0= ruleXShortClosure )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8568:3: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXShortClosure_in_ruleXConstructorCall19975);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_9_0, 
                                      		"XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8585:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8585:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8585:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8585:7: ( (lv_arguments_10_0= ruleXExpression ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8586:1: (lv_arguments_10_0= ruleXExpression )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8586:1: (lv_arguments_10_0= ruleXExpression )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8587:3: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXConstructorCall20003);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_10_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8603:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop118:
                            do {
                                int alt118=2;
                                int LA118_0 = input.LA(1);

                                if ( (LA118_0==23) ) {
                                    alt118=1;
                                }


                                switch (alt118) {
                            	case 1 :
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8603:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,23,FOLLOW_23_in_ruleXConstructorCall20016); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	          
                            	    }
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8607:1: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8608:1: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8608:1: (lv_arguments_12_0= ruleXExpression )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8609:3: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleXExpression_in_ruleXConstructorCall20037);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"arguments",
                            	              		lv_arguments_12_0, 
                            	              		"XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop118;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,40,FOLLOW_40_in_ruleXConstructorCall20054); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt121=2;
            alt121 = dfa121.predict(input);
            switch (alt121) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8632:1: (lv_arguments_14_0= ruleXClosure )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8633:3: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXConstructorCall20089);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_14_0, 
                              		"XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8657:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8658:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8659:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral20126);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBooleanLiteral20136); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8666:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8669:28: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8670:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8670:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8670:2: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8670:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8671:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8676:2: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==98) ) {
                alt122=1;
            }
            else if ( (LA122_0==99) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8676:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,98,FOLLOW_98_in_ruleXBooleanLiteral20183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8681:6: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8681:6: ( (lv_isTrue_2_0= 'true' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8682:1: (lv_isTrue_2_0= 'true' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8682:1: (lv_isTrue_2_0= 'true' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8683:3: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,99,FOLLOW_99_in_ruleXBooleanLiteral20207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "isTrue", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8704:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8705:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8706:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral20257);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXNullLiteral20267); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8713:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8716:28: ( ( () otherlv_1= 'null' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8717:1: ( () otherlv_1= 'null' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8717:1: ( () otherlv_1= 'null' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8717:2: () otherlv_1= 'null'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8717:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8718:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_100_in_ruleXNullLiteral20313); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8735:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8736:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8737:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral20349);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXNumberLiteral20359); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8744:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8747:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8748:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8748:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8748:2: () ( (lv_value_1_0= ruleNumber ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8748:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8749:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8754:2: ( (lv_value_1_0= ruleNumber ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8755:1: (lv_value_1_0= ruleNumber )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8755:1: (lv_value_1_0= ruleNumber )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8756:3: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNumber_in_ruleXNumberLiteral20414);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8780:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8781:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8782:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral20450);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXStringLiteral20460); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8789:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8792:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8793:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8793:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8793:2: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8793:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8794:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
                          current);
                  
            }

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8799:2: ( (lv_value_1_0= RULE_STRING ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8800:1: (lv_value_1_0= RULE_STRING )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8800:1: (lv_value_1_0= RULE_STRING )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8801:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXStringLiteral20511); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8825:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8826:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8827:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral20552);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXTypeLiteral20562); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8834:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8837:28: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8838:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8838:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8838:2: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8838:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8839:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_101_in_ruleXTypeLiteral20608); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXTypeLiteral20620); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8852:1: ( ( ruleQualifiedName ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8853:1: ( ruleQualifiedName )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8853:1: ( ruleQualifiedName )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8854:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXTypeLiteralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral20643);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8867:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==80) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8868:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8868:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8869:3: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral20664);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arrayDimensions",
            	              		lv_arrayDimensions_4_0, 
            	              		"ArrayBrackets");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            otherlv_5=(Token)match(input,40,FOLLOW_40_in_ruleXTypeLiteral20677); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8897:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8898:2: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8899:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXThrowExpression_in_entryRuleXThrowExpression20713);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXThrowExpression20723); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8906:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8909:28: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8910:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8910:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8910:2: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8910:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8911:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,102,FOLLOW_102_in_ruleXThrowExpression20769); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8920:1: ( (lv_expression_2_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8921:1: (lv_expression_2_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8921:1: (lv_expression_2_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8922:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXThrowExpression20790);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8946:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8947:2: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8948:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXReturnExpression_in_entryRuleXReturnExpression20826);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXReturnExpression20836); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8955:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8958:28: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8959:1: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8959:1: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8959:2: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8959:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8960:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,103,FOLLOW_103_in_ruleXReturnExpression20882); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8969:1: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt124=2;
            alt124 = dfa124.predict(input);
            switch (alt124) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8969:2: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8997:1: (lv_expression_2_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8998:3: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXReturnExpression21117);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9022:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9023:2: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9024:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXTryCatchFinallyExpression_in_entryRuleXTryCatchFinallyExpression21154);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXTryCatchFinallyExpression21164); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9031:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9034:28: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9035:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9035:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9035:2: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9035:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9036:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,104,FOLLOW_104_in_ruleXTryCatchFinallyExpression21210); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9045:1: ( (lv_expression_2_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9046:1: (lv_expression_2_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9046:1: (lv_expression_2_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9047:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression21231);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:2: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==107) ) {
                alt127=1;
            }
            else if ( (LA127_0==105) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt125=0;
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==107) ) {
                            int LA125_2 = input.LA(2);

                            if ( (synpred38_InternalHelenaText()) ) {
                                alt125=1;
                            }


                        }


                        switch (alt125) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:5: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9065:1: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9066:3: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXCatchClause_in_ruleXTryCatchFinallyExpression21261);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"catchClauses",
                    	              		lv_catchClauses_3_0, 
                    	              		"XCatchClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt125 >= 1 ) break loop125;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(125, input);
                                throw eee;
                        }
                        cnt125++;
                    } while (true);

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9082:3: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==105) ) {
                        int LA126_1 = input.LA(2);

                        if ( (synpred39_InternalHelenaText()) ) {
                            alt126=1;
                        }
                    }
                    switch (alt126) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9082:4: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9082:4: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9082:5: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,105,FOLLOW_105_in_ruleXTryCatchFinallyExpression21283); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                                  
                            }

                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9087:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9088:1: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9088:1: (lv_finallyExpression_5_0= ruleXExpression )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9089:3: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression21305);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finallyExpression",
                                      		lv_finallyExpression_5_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9106:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9106:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9106:8: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,105,FOLLOW_105_in_ruleXTryCatchFinallyExpression21327); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9110:1: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9111:1: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9111:1: (lv_finallyExpression_7_0= ruleXExpression )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9112:3: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression21348);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"finallyExpression",
                              		lv_finallyExpression_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9136:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9137:2: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9138:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXSynchronizedExpression_in_entryRuleXSynchronizedExpression21386);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSynchronizedExpression21396); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9145:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9148:28: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9149:1: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9149:1: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9149:2: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9149:2: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9149:3: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9152:5: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9152:6: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9152:6: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9153:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,106,FOLLOW_106_in_ruleXSynchronizedExpression21460); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,38,FOLLOW_38_in_ruleXSynchronizedExpression21472); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
                  
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9166:3: ( (lv_param_3_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9167:1: (lv_param_3_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9167:1: (lv_param_3_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9168:3: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression21495);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"param",
                      		lv_param_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_40_in_ruleXSynchronizedExpression21507); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9188:1: ( (lv_expression_5_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9189:1: (lv_expression_5_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9189:1: (lv_expression_5_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9190:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression21528);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9214:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9215:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9216:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause21564);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCatchClause21574); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9223:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9226:28: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9227:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9227:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9227:2: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9227:2: ( ( 'catch' )=>otherlv_0= 'catch' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9227:3: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,107,FOLLOW_107_in_ruleXCatchClause21619); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
                  
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleXCatchClause21632); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9236:1: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9237:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9237:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9238:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause21653);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"FullJvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,40,FOLLOW_40_in_ruleXCatchClause21665); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9258:1: ( (lv_expression_4_0= ruleXExpression ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9259:1: (lv_expression_4_0= ruleXExpression )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9259:1: (lv_expression_4_0= ruleXExpression )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9260:3: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXCatchClause21686);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9284:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9285:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9286:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName21723);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName21734); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9293:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9296:28: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9297:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9297:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9298:5: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName21781);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9308:1: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==37) ) {
                    int LA128_2 = input.LA(2);

                    if ( (LA128_2==RULE_ID) ) {
                        int LA128_3 = input.LA(3);

                        if ( (synpred42_InternalHelenaText()) ) {
                            alt128=1;
                        }


                    }


                }


                switch (alt128) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9308:2: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9308:2: ( ( '.' )=>kw= '.' )
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9308:3: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,37,FOLLOW_37_in_ruleQualifiedName21809); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName21832);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9335:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9339:2: (iv_ruleNumber= ruleNumber EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9340:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_ruleNumber_in_entryRuleNumber21886);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumber21897); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9350:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9354:28: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9355:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9355:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_HEX) ) {
                alt132=1;
            }
            else if ( (LA132_0==RULE_INT||LA132_0==RULE_DECIMAL) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9355:6: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleNumber21941); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9363:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9363:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9363:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9363:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==RULE_INT) ) {
                        alt129=1;
                    }
                    else if ( (LA129_0==RULE_DECIMAL) ) {
                        alt129=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                        throw nvae;
                    }
                    switch (alt129) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9363:12: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber21969); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_INT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9371:10: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber21995); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DECIMAL_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
                                  
                            }

                            }
                            break;

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9378:2: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( (LA131_0==37) ) {
                        int LA131_1 = input.LA(2);

                        if ( (LA131_1==RULE_INT||LA131_1==RULE_DECIMAL) ) {
                            alt131=1;
                        }
                    }
                    switch (alt131) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9379:2: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,37,FOLLOW_37_in_ruleNumber22015); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
                                  
                            }
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9384:1: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt130=2;
                            int LA130_0 = input.LA(1);

                            if ( (LA130_0==RULE_INT) ) {
                                alt130=1;
                            }
                            else if ( (LA130_0==RULE_DECIMAL) ) {
                                alt130=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 130, 0, input);

                                throw nvae;
                            }
                            switch (alt130) {
                                case 1 :
                                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9384:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber22031); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_INT_4);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9392:10: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber22057); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_DECIMAL_5);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9412:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9413:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9414:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference22112);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmTypeReference22122); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9421:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9424:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9425:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9425:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==RULE_ID) ) {
                alt134=1;
            }
            else if ( (LA134_0==38||LA134_0==68) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9425:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9425:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9426:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference22170);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmParameterizedTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==80) ) {
                            int LA133_2 = input.LA(2);

                            if ( (LA133_2==81) ) {
                                int LA133_3 = input.LA(3);

                                if ( (synpred43_InternalHelenaText()) ) {
                                    alt133=1;
                                }


                            }


                        }


                        switch (alt133) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9435:24: ( () ruleArrayBrackets )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9435:25: () ruleArrayBrackets
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9435:25: ()
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9436:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference22206);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9451:5: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference22237);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFunctionTypeRef_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9467:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9468:2: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9469:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets22273);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleArrayBrackets22284); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9476:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9479:28: ( (kw= '[' kw= ']' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9480:1: (kw= '[' kw= ']' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9480:1: (kw= '[' kw= ']' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9481:2: kw= '[' kw= ']'
            {
            kw=(Token)match(input,80,FOLLOW_80_in_ruleArrayBrackets22322); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
                  
            }
            kw=(Token)match(input,81,FOLLOW_81_in_ruleArrayBrackets22335); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9500:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9501:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9502:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef22375);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXFunctionTypeRef22385); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9509:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9512:28: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9513:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9513:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9513:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9513:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==38) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9513:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,38,FOLLOW_38_in_ruleXFunctionTypeRef22423); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9517:1: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==RULE_ID||LA136_0==38||LA136_0==68) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9517:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9517:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9518:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9518:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9519:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef22445);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9535:2: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop135:
                            do {
                                int alt135=2;
                                int LA135_0 = input.LA(1);

                                if ( (LA135_0==23) ) {
                                    alt135=1;
                                }


                                switch (alt135) {
                            	case 1 :
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9535:4: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,23,FOLLOW_23_in_ruleXFunctionTypeRef22458); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9539:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9540:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9540:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9541:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef22479);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop135;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,40,FOLLOW_40_in_ruleXFunctionTypeRef22495); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,68,FOLLOW_68_in_ruleXFunctionTypeRef22509); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9565:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9566:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9566:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9567:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef22530);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9591:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9592:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9593:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference22566);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference22576); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9600:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9603:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9604:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9604:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9604:2: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9604:2: ( ( ruleQualifiedName ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9605:1: ( ruleQualifiedName )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9605:1: ( ruleQualifiedName )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9606:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference22624);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9619:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9619:3: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9619:3: ( ( '<' )=>otherlv_1= '<' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9619:4: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,27,FOLLOW_27_in_ruleJvmParameterizedTypeReference22645); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9624:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9625:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9625:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9626:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22667);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9642:2: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==23) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9642:4: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_23_in_ruleJvmParameterizedTypeReference22680); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9646:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9647:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9647:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9648:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22701);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_4_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,32,FOLLOW_32_in_ruleJvmParameterizedTypeReference22715); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                          
                    }
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:1: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop141:
                    do {
                        int alt141=2;
                        int LA141_0 = input.LA(1);

                        if ( (LA141_0==37) ) {
                            int LA141_2 = input.LA(2);

                            if ( (LA141_2==RULE_ID) ) {
                                int LA141_3 = input.LA(3);

                                if ( (synpred45_InternalHelenaText()) ) {
                                    alt141=1;
                                }


                            }


                        }


                        switch (alt141) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:2: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:3: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9670:5: ( () otherlv_7= '.' )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9670:6: () otherlv_7= '.'
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9670:6: ()
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9671:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,37,FOLLOW_37_in_ruleJvmParameterizedTypeReference22751); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	          
                    	    }

                    	    }


                    	    }

                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9680:3: ( ( ruleValidID ) )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9681:1: ( ruleValidID )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9681:1: ( ruleValidID )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9682:3: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleValidID_in_ruleJvmParameterizedTypeReference22776);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }

                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9695:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt140=2;
                    	    alt140 = dfa140.predict(input);
                    	    switch (alt140) {
                    	        case 1 :
                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9695:3: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9695:3: ( ( '<' )=>otherlv_9= '<' )
                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9695:4: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,27,FOLLOW_27_in_ruleJvmParameterizedTypeReference22797); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	                  
                    	            }

                    	            }

                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9700:2: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9701:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9701:1: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9702:3: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22819);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"arguments",
                    	                      		lv_arguments_10_0, 
                    	                      		"JvmArgumentTypeReference");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }

                    	            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9718:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop139:
                    	            do {
                    	                int alt139=2;
                    	                int LA139_0 = input.LA(1);

                    	                if ( (LA139_0==23) ) {
                    	                    alt139=1;
                    	                }


                    	                switch (alt139) {
                    	            	case 1 :
                    	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9718:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,23,FOLLOW_23_in_ruleJvmParameterizedTypeReference22832); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	          	newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	          
                    	            	    }
                    	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9722:1: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9723:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9723:1: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9724:3: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {
                    	            	       
                    	            	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
                    	            	      	    
                    	            	    }
                    	            	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22853);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      	        if (current==null) {
                    	            	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      	        }
                    	            	             		add(
                    	            	             			current, 
                    	            	             			"arguments",
                    	            	              		lv_arguments_12_0, 
                    	            	              		"JvmArgumentTypeReference");
                    	            	      	        afterParserOrEnumRuleCall();
                    	            	      	    
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop139;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,32,FOLLOW_32_in_ruleJvmParameterizedTypeReference22867); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	                  
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop141;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9752:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9753:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9754:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference22909);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference22919); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9761:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9764:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9765:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9765:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==RULE_ID||LA143_0==38||LA143_0==68) ) {
                alt143=1;
            }
            else if ( (LA143_0==47) ) {
                alt143=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9766:5: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference22966);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9776:5: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference22993);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmWildcardTypeReference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9792:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9793:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9794:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference23028);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference23038); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9801:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9804:28: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9805:1: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9805:1: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9805:2: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9805:2: ()
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9806:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,47,FOLLOW_47_in_ruleJvmWildcardTypeReference23084); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9815:1: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt146=3;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==92) ) {
                alt146=1;
            }
            else if ( (LA146_0==96) ) {
                alt146=2;
            }
            switch (alt146) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9815:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9815:2: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9815:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9815:3: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9816:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9816:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9817:3: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference23107);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_2_0, 
                              		"JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9833:2: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop144:
                    do {
                        int alt144=2;
                        int LA144_0 = input.LA(1);

                        if ( (LA144_0==108) ) {
                            alt144=1;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9834:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9834:1: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9835:3: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_ruleJvmWildcardTypeReference23128);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_3_0, 
                    	              		"JvmUpperBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop144;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9852:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9852:6: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9852:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9852:7: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9853:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9853:1: (lv_constraints_4_0= ruleJvmLowerBound )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9854:3: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference23158);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_4_0, 
                              		"JvmLowerBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9870:2: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==108) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9871:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9871:1: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9872:3: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmLowerBoundAnded_in_ruleJvmWildcardTypeReference23179);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"constraints",
                    	              		lv_constraints_5_0, 
                    	              		"JvmLowerBoundAnded");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9896:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9897:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9898:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound23219);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBound23229); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9905:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9908:28: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9909:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9909:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9909:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,92,FOLLOW_92_in_ruleJvmUpperBound23266); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9913:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9914:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9914:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9915:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound23287);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9939:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9940:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9941:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded23323);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded23333); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9948:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9951:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9952:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9952:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9952:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,108,FOLLOW_108_in_ruleJvmUpperBoundAnded23370); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9956:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9957:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9957:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9958:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded23391);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9982:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9983:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9984:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound23427);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmLowerBound23437); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9991:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9994:28: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9995:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9995:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9995:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,96,FOLLOW_96_in_ruleJvmLowerBound23474); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9999:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10000:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10000:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10001:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound23495);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10025:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10026:2: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10027:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_ruleJvmLowerBoundAnded_in_entryRuleJvmLowerBoundAnded23531);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmLowerBoundAnded23541); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10034:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10037:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10038:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10038:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10038:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,108,FOLLOW_108_in_ruleJvmLowerBoundAnded23578); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10042:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10043:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10043:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10044:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBoundAnded23599);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10070:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10071:2: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10072:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard23638);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard23649); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10079:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10082:28: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10083:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10083:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10084:5: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard23696);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            kw=(Token)match(input,37,FOLLOW_37_in_ruleQualifiedNameWithWildcard23714); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
                  
            }
            kw=(Token)match(input,33,FOLLOW_33_in_ruleQualifiedNameWithWildcard23727); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10114:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10115:2: (iv_ruleValidID= ruleValidID EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10116:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_ruleValidID_in_entryRuleValidID23768);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleValidID23779); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10123:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10126:28: (this_ID_0= RULE_ID )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10127:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleValidID23818); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10144:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10145:2: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10146:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXImportDeclaration_in_entryRuleXImportDeclaration23864);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXImportDeclaration23874); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10153:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10156:28: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10157:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10157:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10157:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,94,FOLLOW_94_in_ruleXImportDeclaration23911); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
                  
            }
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10161:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt149=3;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10161:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10161:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10161:3: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10161:3: ( (lv_static_1_0= 'static' ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10162:1: (lv_static_1_0= 'static' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10162:1: (lv_static_1_0= 'static' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10163:3: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,93,FOLLOW_93_in_ruleXImportDeclaration23931); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10176:2: ( (lv_extension_2_0= 'extension' ) )?
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==95) ) {
                        alt147=1;
                    }
                    switch (alt147) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10177:1: (lv_extension_2_0= 'extension' )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10177:1: (lv_extension_2_0= 'extension' )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10178:3: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,95,FOLLOW_95_in_ruleXImportDeclaration23962); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10191:3: ( ( ruleQualifiedNameInStaticImport ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10192:1: ( ruleQualifiedNameInStaticImport )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10192:1: ( ruleQualifiedNameInStaticImport )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10193:3: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedNameInStaticImport_in_ruleXImportDeclaration23999);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10206:2: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt148=2;
                    int LA148_0 = input.LA(1);

                    if ( (LA148_0==33) ) {
                        alt148=1;
                    }
                    else if ( (LA148_0==RULE_ID) ) {
                        alt148=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 148, 0, input);

                        throw nvae;
                    }
                    switch (alt148) {
                        case 1 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10206:3: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10206:3: ( (lv_wildcard_4_0= '*' ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10207:1: (lv_wildcard_4_0= '*' )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10207:1: (lv_wildcard_4_0= '*' )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10208:3: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,33,FOLLOW_33_in_ruleXImportDeclaration24018); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "wildcard", true, "*");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10222:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10222:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10223:1: (lv_memberName_5_0= ruleValidID )
                            {
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10223:1: (lv_memberName_5_0= ruleValidID )
                            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10224:3: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleValidID_in_ruleXImportDeclaration24058);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"memberName",
                                      		lv_memberName_5_0, 
                                      		"ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10241:6: ( ( ruleQualifiedName ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10241:6: ( ( ruleQualifiedName ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10242:1: ( ruleQualifiedName )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10242:1: ( ruleQualifiedName )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10243:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration24089);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10257:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10257:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10258:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10258:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10259:3: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedNameWithWildcard_in_ruleXImportDeclaration24116);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"importedNamespace",
                              		lv_importedNamespace_7_0, 
                              		"QualifiedNameWithWildcard");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10275:3: (otherlv_8= ';' )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==18) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10275:5: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,18,FOLLOW_18_in_ruleXImportDeclaration24130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10287:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10288:2: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10289:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedNameInStaticImport_in_entryRuleQualifiedNameInStaticImport24169);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedNameInStaticImport24180); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10296:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10299:28: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10300:1: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10300:1: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt151=0;
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==RULE_ID) ) {
                    int LA151_2 = input.LA(2);

                    if ( (LA151_2==37) ) {
                        alt151=1;
                    }


                }


                switch (alt151) {
            	case 1 :
            	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10301:5: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedNameInStaticImport24227);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }
            	    kw=(Token)match(input,37,FOLLOW_37_in_ruleQualifiedNameInStaticImport24245); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt151 >= 1 ) break loop151;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(151, input);
                        throw eee;
                }
                cnt151++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleMsgDirection"
    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10325:1: ruleMsgDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'in/out' ) ) ;
    public final Enumerator ruleMsgDirection() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10327:28: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'in/out' ) ) )
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10328:1: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'in/out' ) )
            {
            // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10328:1: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'in/out' ) )
            int alt152=3;
            switch ( input.LA(1) ) {
            case 109:
                {
                alt152=1;
                }
                break;
            case 110:
                {
                alt152=2;
                }
                break;
            case 111:
                {
                alt152=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }

            switch (alt152) {
                case 1 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10328:2: (enumLiteral_0= 'in' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10328:2: (enumLiteral_0= 'in' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10328:4: enumLiteral_0= 'in'
                    {
                    enumLiteral_0=(Token)match(input,109,FOLLOW_109_in_ruleMsgDirection24300); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMsgDirectionAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getMsgDirectionAccess().getINEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10334:6: (enumLiteral_1= 'out' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10334:6: (enumLiteral_1= 'out' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10334:8: enumLiteral_1= 'out'
                    {
                    enumLiteral_1=(Token)match(input,110,FOLLOW_110_in_ruleMsgDirection24317); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMsgDirectionAccess().getOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getMsgDirectionAccess().getOUTEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10340:6: (enumLiteral_2= 'in/out' )
                    {
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10340:6: (enumLiteral_2= 'in/out' )
                    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:10340:8: enumLiteral_2= 'in/out'
                    {
                    enumLiteral_2=(Token)match(input,111,FOLLOW_111_in_ruleMsgDirection24334); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMsgDirectionAccess().getINOUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getMsgDirectionAccess().getINOUTEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMsgDirection"

    // $ANTLR start synpred1_InternalHelenaText
    public final void synpred1_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:4: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:4: ( () ( ( ruleOpMultiAssign ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:5: () ( ( ruleOpMultiAssign ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4571:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4572:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4572:2: ( ( ruleOpMultiAssign ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4573:1: ( ruleOpMultiAssign )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4573:1: ( ruleOpMultiAssign )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4574:3: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_ruleOpMultiAssign_in_synpred1_InternalHelenaText10518);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalHelenaText

    // $ANTLR start synpred2_InternalHelenaText
    public final void synpred2_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:3: ( ( () ( ( ruleOpOr ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:4: ( () ( ( ruleOpOr ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:4: ( () ( ( ruleOpOr ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:5: () ( ( ruleOpOr ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4765:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4766:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4766:2: ( ( ruleOpOr ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4767:1: ( ruleOpOr )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4767:1: ( ruleOpOr )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4768:3: ruleOpOr
        {
        pushFollow(FOLLOW_ruleOpOr_in_synpred2_InternalHelenaText11041);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalHelenaText

    // $ANTLR start synpred3_InternalHelenaText
    public final void synpred3_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:3: ( ( () ( ( ruleOpAnd ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:4: ( () ( ( ruleOpAnd ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:4: ( () ( ( ruleOpAnd ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:5: () ( ( ruleOpAnd ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4866:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4867:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4867:2: ( ( ruleOpAnd ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4868:1: ( ruleOpAnd )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4868:1: ( ruleOpAnd )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4869:3: ruleOpAnd
        {
        pushFollow(FOLLOW_ruleOpAnd_in_synpred3_InternalHelenaText11300);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalHelenaText

    // $ANTLR start synpred4_InternalHelenaText
    public final void synpred4_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:3: ( ( () ( ( ruleOpEquality ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:4: ( () ( ( ruleOpEquality ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:4: ( () ( ( ruleOpEquality ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:5: () ( ( ruleOpEquality ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4967:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4968:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4968:2: ( ( ruleOpEquality ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4969:1: ( ruleOpEquality )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4969:1: ( ruleOpEquality )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:4970:3: ruleOpEquality
        {
        pushFollow(FOLLOW_ruleOpEquality_in_synpred4_InternalHelenaText11559);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalHelenaText

    // $ANTLR start synpred5_InternalHelenaText
    public final void synpred5_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:4: ( ( () 'instanceof' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:5: ( () 'instanceof' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:5: ( () 'instanceof' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:6: () 'instanceof'
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5041:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5042:1: 
        {
        }

        match(input,64,FOLLOW_64_in_synpred5_InternalHelenaText11726); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalHelenaText

    // $ANTLR start synpred6_InternalHelenaText
    public final void synpred6_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:8: ( ( () ( ( ruleOpCompare ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:9: ( () ( ( ruleOpCompare ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:9: ( () ( ( ruleOpCompare ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:10: () ( ( ruleOpCompare ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5072:10: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5073:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5073:2: ( ( ruleOpCompare ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5074:1: ( ruleOpCompare )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5074:1: ( ruleOpCompare )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5075:3: ruleOpCompare
        {
        pushFollow(FOLLOW_ruleOpCompare_in_synpred6_InternalHelenaText11797);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalHelenaText

    // $ANTLR start synpred7_InternalHelenaText
    public final void synpred7_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:3: ( ( () ( ( ruleOpOther ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:4: ( () ( ( ruleOpOther ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:4: ( () ( ( ruleOpOther ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:5: () ( ( ruleOpOther ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5146:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5147:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5147:2: ( ( ruleOpOther ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5148:1: ( ruleOpOther )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5148:1: ( ruleOpOther )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5149:3: ruleOpOther
        {
        pushFollow(FOLLOW_ruleOpOther_in_synpred7_InternalHelenaText11969);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalHelenaText

    // $ANTLR start synpred8_InternalHelenaText
    public final void synpred8_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:3: ( ( '>' '>' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:4: ( '>' '>' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5258:4: ( '>' '>' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5259:2: '>' '>'
        {
        match(input,32,FOLLOW_32_in_synpred8_InternalHelenaText12238); if (state.failed) return ;
        match(input,32,FOLLOW_32_in_synpred8_InternalHelenaText12243); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalHelenaText

    // $ANTLR start synpred9_InternalHelenaText
    public final void synpred9_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:3: ( ( '<' '<' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:4: ( '<' '<' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5288:4: ( '<' '<' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5289:2: '<' '<'
        {
        match(input,27,FOLLOW_27_in_synpred9_InternalHelenaText12325); if (state.failed) return ;
        match(input,27,FOLLOW_27_in_synpred9_InternalHelenaText12330); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalHelenaText

    // $ANTLR start synpred10_InternalHelenaText
    public final void synpred10_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:3: ( ( () ( ( ruleOpAdd ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:4: ( () ( ( ruleOpAdd ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:4: ( () ( ( ruleOpAdd ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:5: () ( ( ruleOpAdd ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5362:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5363:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5363:2: ( ( ruleOpAdd ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5364:1: ( ruleOpAdd )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5364:1: ( ruleOpAdd )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5365:3: ruleOpAdd
        {
        pushFollow(FOLLOW_ruleOpAdd_in_synpred10_InternalHelenaText12552);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalHelenaText

    // $ANTLR start synpred11_InternalHelenaText
    public final void synpred11_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:3: ( ( () ( ( ruleOpMulti ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:4: ( () ( ( ruleOpMulti ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:4: ( () ( ( ruleOpMulti ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:5: () ( ( ruleOpMulti ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5470:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5471:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5471:2: ( ( ruleOpMulti ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5472:1: ( ruleOpMulti )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5472:1: ( ruleOpMulti )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5473:3: ruleOpMulti
        {
        pushFollow(FOLLOW_ruleOpMulti_in_synpred11_InternalHelenaText12832);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalHelenaText

    // $ANTLR start synpred12_InternalHelenaText
    public final void synpred12_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:3: ( ( () 'as' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:4: ( () 'as' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:4: ( () 'as' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:5: () 'as'
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5703:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5704:1: 
        {
        }

        match(input,74,FOLLOW_74_in_synpred12_InternalHelenaText13426); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalHelenaText

    // $ANTLR start synpred13_InternalHelenaText
    public final void synpred13_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:2: ( ( () ( ( ruleOpPostfix ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:3: ( () ( ( ruleOpPostfix ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:3: ( () ( ( ruleOpPostfix ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:4: () ( ( ruleOpPostfix ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5763:4: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5764:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5764:2: ( ( ruleOpPostfix ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5765:1: ( ruleOpPostfix )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5765:1: ( ruleOpPostfix )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5766:3: ruleOpPostfix
        {
        pushFollow(FOLLOW_ruleOpPostfix_in_synpred13_InternalHelenaText13583);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalHelenaText

    // $ANTLR start synpred14_InternalHelenaText
    public final void synpred14_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:6: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5853:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5854:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5854:2: ( '.' | ( ( '::' ) ) )
        int alt153=2;
        int LA153_0 = input.LA(1);

        if ( (LA153_0==37) ) {
            alt153=1;
        }
        else if ( (LA153_0==77) ) {
            alt153=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 153, 0, input);

            throw nvae;
        }
        switch (alt153) {
            case 1 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5854:4: '.'
                {
                match(input,37,FOLLOW_37_in_synpred14_InternalHelenaText13838); if (state.failed) return ;

                }
                break;
            case 2 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5856:6: ( ( '::' ) )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5856:6: ( ( '::' ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5857:1: ( '::' )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5857:1: ( '::' )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5858:2: '::'
                {
                match(input,77,FOLLOW_77_in_synpred14_InternalHelenaText13852); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5862:3: ( ( ruleFeatureCallID ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5863:1: ( ruleFeatureCallID )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5863:1: ( ruleFeatureCallID )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5864:3: ruleFeatureCallID
        {
        pushFollow(FOLLOW_ruleFeatureCallID_in_synpred14_InternalHelenaText13868);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_ruleOpSingleAssign_in_synpred14_InternalHelenaText13874);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalHelenaText

    // $ANTLR start synpred15_InternalHelenaText
    public final void synpred15_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:10: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5934:10: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5935:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5935:2: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt154=3;
        switch ( input.LA(1) ) {
        case 37:
            {
            alt154=1;
            }
            break;
        case 78:
            {
            alt154=2;
            }
            break;
        case 77:
            {
            alt154=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 154, 0, input);

            throw nvae;
        }

        switch (alt154) {
            case 1 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5935:4: '.'
                {
                match(input,37,FOLLOW_37_in_synpred15_InternalHelenaText14016); if (state.failed) return ;

                }
                break;
            case 2 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5937:6: ( ( '?.' ) )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5937:6: ( ( '?.' ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5938:1: ( '?.' )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5938:1: ( '?.' )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5939:2: '?.'
                {
                match(input,78,FOLLOW_78_in_synpred15_InternalHelenaText14030); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5944:6: ( ( '::' ) )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5944:6: ( ( '::' ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5945:1: ( '::' )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5945:1: ( '::' )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:5946:2: '::'
                {
                match(input,77,FOLLOW_77_in_synpred15_InternalHelenaText14050); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalHelenaText

    // $ANTLR start synpred16_InternalHelenaText
    public final void synpred16_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6055:4: ( ( '(' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6056:1: ( '(' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6056:1: ( '(' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6057:2: '('
        {
        match(input,38,FOLLOW_38_in_synpred16_InternalHelenaText14277); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalHelenaText

    // $ANTLR start synpred17_InternalHelenaText
    public final void synpred17_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6076:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6077:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6077:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt156=2;
        int LA156_0 = input.LA(1);

        if ( (LA156_0==RULE_ID||LA156_0==38||LA156_0==68) ) {
            alt156=1;
        }
        switch (alt156) {
            case 1 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6077:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6077:3: ( ( ruleJvmFormalParameter ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6078:1: ( ruleJvmFormalParameter )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6078:1: ( ruleJvmFormalParameter )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6079:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalHelenaText14329);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6081:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop155:
                do {
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==23) ) {
                        alt155=1;
                    }


                    switch (alt155) {
                	case 1 :
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6081:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,23,FOLLOW_23_in_synpred17_InternalHelenaText14336); if (state.failed) return ;
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6082:1: ( ( ruleJvmFormalParameter ) )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6083:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6083:1: ( ruleJvmFormalParameter )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6084:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalHelenaText14343);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop155;
                    }
                } while (true);


                }
                break;

        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6086:6: ( ( '|' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6087:1: ( '|' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6087:1: ( '|' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6088:2: '|'
        {
        match(input,82,FOLLOW_82_in_synpred17_InternalHelenaText14357); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalHelenaText

    // $ANTLR start synpred18_InternalHelenaText
    public final void synpred18_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:4: ( ( () '[' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:5: ( () '[' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:5: ( () '[' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:6: () '['
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6155:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6156:1: 
        {
        }

        match(input,80,FOLLOW_80_in_synpred18_InternalHelenaText14477); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalHelenaText

    // $ANTLR start synpred19_InternalHelenaText
    public final void synpred19_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:7: ( ( () 'synchronized' '(' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:8: ( () 'synchronized' '(' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:8: ( () 'synchronized' '(' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:9: () 'synchronized' '('
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6226:9: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6227:1: 
        {
        }

        match(input,106,FOLLOW_106_in_synpred19_InternalHelenaText14666); if (state.failed) return ;
        match(input,38,FOLLOW_38_in_synpred19_InternalHelenaText14670); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalHelenaText

    // $ANTLR start synpred20_InternalHelenaText
    public final void synpred20_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:7: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:8: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:8: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:9: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6269:9: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6270:1: 
        {
        }

        match(input,87,FOLLOW_87_in_synpred20_InternalHelenaText14792); if (state.failed) return ;
        match(input,38,FOLLOW_38_in_synpred20_InternalHelenaText14796); if (state.failed) return ;
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6272:1: ( ( ruleJvmFormalParameter ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6273:1: ( ruleJvmFormalParameter )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6273:1: ( ruleJvmFormalParameter )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6274:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalHelenaText14803);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,84,FOLLOW_84_in_synpred20_InternalHelenaText14809); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalHelenaText

    // $ANTLR start synpred21_InternalHelenaText
    public final void synpred21_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:7: ( ( () '[' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:8: ( () '[' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:8: ( () '[' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:9: () '['
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6387:9: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6388:1: 
        {
        }

        match(input,80,FOLLOW_80_in_synpred21_InternalHelenaText15131); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalHelenaText

    // $ANTLR start synpred23_InternalHelenaText
    public final void synpred23_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt158=2;
        int LA158_0 = input.LA(1);

        if ( (LA158_0==RULE_ID||LA158_0==38||LA158_0==68) ) {
            alt158=1;
        }
        switch (alt158) {
            case 1 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:7: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6679:7: ( ( ruleJvmFormalParameter ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6680:1: ( ruleJvmFormalParameter )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6680:1: ( ruleJvmFormalParameter )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6681:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalHelenaText15881);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6683:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop157:
                do {
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==23) ) {
                        alt157=1;
                    }


                    switch (alt157) {
                	case 1 :
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6683:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,23,FOLLOW_23_in_synpred23_InternalHelenaText15888); if (state.failed) return ;
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6684:1: ( ( ruleJvmFormalParameter ) )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6685:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6685:1: ( ruleJvmFormalParameter )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6686:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalHelenaText15895);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop157;
                    }
                } while (true);


                }
                break;

        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6688:6: ( ( '|' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6689:1: ( '|' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6689:1: ( '|' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:6690:2: '|'
        {
        match(input,82,FOLLOW_82_in_synpred23_InternalHelenaText15909); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalHelenaText

    // $ANTLR start synpred25_InternalHelenaText
    public final void synpred25_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7049:4: ( 'else' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7049:6: 'else'
        {
        match(input,42,FOLLOW_42_in_synpred25_InternalHelenaText16692); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalHelenaText

    // $ANTLR start synpred26_InternalHelenaText
    public final void synpred26_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:4: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:5: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:5: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7103:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,38,FOLLOW_38_in_synpred26_InternalHelenaText16831); if (state.failed) return ;
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7104:1: ( ( ruleJvmFormalParameter ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7105:1: ( ruleJvmFormalParameter )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7105:1: ( ruleJvmFormalParameter )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7106:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred26_InternalHelenaText16838);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,84,FOLLOW_84_in_synpred26_InternalHelenaText16844); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalHelenaText

    // $ANTLR start synpred27_InternalHelenaText
    public final void synpred27_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:8: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:9: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:9: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:10: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7158:10: ( ( ruleJvmFormalParameter ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7159:1: ( ruleJvmFormalParameter )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7159:1: ( ruleJvmFormalParameter )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7160:1: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalHelenaText16946);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,84,FOLLOW_84_in_synpred27_InternalHelenaText16952); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalHelenaText

    // $ANTLR start synpred29_InternalHelenaText
    public final void synpred29_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7926:6: ( ( ruleJvmTypeReference ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7927:1: ( ruleJvmTypeReference )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7927:1: ( ruleJvmTypeReference )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7928:1: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_ruleJvmTypeReference_in_synpred29_InternalHelenaText18580);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7930:2: ( ( ruleValidID ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7931:1: ( ruleValidID )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7931:1: ( ruleValidID )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:7932:1: ruleValidID
        {
        pushFollow(FOLLOW_ruleValidID_in_synpred29_InternalHelenaText18589);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalHelenaText

    // $ANTLR start synpred30_InternalHelenaText
    public final void synpred30_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8215:4: ( ( '(' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8216:1: ( '(' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8216:1: ( '(' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8217:2: '('
        {
        match(input,38,FOLLOW_38_in_synpred30_InternalHelenaText19127); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalHelenaText

    // $ANTLR start synpred31_InternalHelenaText
    public final void synpred31_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8236:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8237:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8237:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt162=2;
        int LA162_0 = input.LA(1);

        if ( (LA162_0==RULE_ID||LA162_0==38||LA162_0==68) ) {
            alt162=1;
        }
        switch (alt162) {
            case 1 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8237:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8237:3: ( ( ruleJvmFormalParameter ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8238:1: ( ruleJvmFormalParameter )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8238:1: ( ruleJvmFormalParameter )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8239:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalHelenaText19179);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8241:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop161:
                do {
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==23) ) {
                        alt161=1;
                    }


                    switch (alt161) {
                	case 1 :
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8241:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,23,FOLLOW_23_in_synpred31_InternalHelenaText19186); if (state.failed) return ;
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8242:1: ( ( ruleJvmFormalParameter ) )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8243:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8243:1: ( ruleJvmFormalParameter )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8244:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalHelenaText19193);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop161;
                    }
                } while (true);


                }
                break;

        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8246:6: ( ( '|' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8247:1: ( '|' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8247:1: ( '|' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8248:2: '|'
        {
        match(input,82,FOLLOW_82_in_synpred31_InternalHelenaText19207); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalHelenaText

    // $ANTLR start synpred32_InternalHelenaText
    public final void synpred32_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:4: ( ( () '[' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:5: ( () '[' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:5: ( () '[' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:6: () '['
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8315:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8316:1: 
        {
        }

        match(input,80,FOLLOW_80_in_synpred32_InternalHelenaText19327); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalHelenaText

    // $ANTLR start synpred33_InternalHelenaText
    public final void synpred33_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8480:4: ( '<' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8480:6: '<'
        {
        match(input,27,FOLLOW_27_in_synpred33_InternalHelenaText19776); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalHelenaText

    // $ANTLR start synpred34_InternalHelenaText
    public final void synpred34_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8529:5: ( ( '(' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8530:1: ( '(' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8530:1: ( '(' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8531:2: '('
        {
        match(input,38,FOLLOW_38_in_synpred34_InternalHelenaText19872); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalHelenaText

    // $ANTLR start synpred35_InternalHelenaText
    public final void synpred35_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8550:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8551:1: 
        {
        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8551:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt164=2;
        int LA164_0 = input.LA(1);

        if ( (LA164_0==RULE_ID||LA164_0==38||LA164_0==68) ) {
            alt164=1;
        }
        switch (alt164) {
            case 1 :
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8551:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8551:3: ( ( ruleJvmFormalParameter ) )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8552:1: ( ruleJvmFormalParameter )
                {
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8552:1: ( ruleJvmFormalParameter )
                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8553:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalHelenaText19924);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8555:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop163:
                do {
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==23) ) {
                        alt163=1;
                    }


                    switch (alt163) {
                	case 1 :
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8555:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,23,FOLLOW_23_in_synpred35_InternalHelenaText19931); if (state.failed) return ;
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8556:1: ( ( ruleJvmFormalParameter ) )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8557:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8557:1: ( ruleJvmFormalParameter )
                	    // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8558:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalHelenaText19938);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop163;
                    }
                } while (true);


                }
                break;

        }

        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8560:6: ( ( '|' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8561:1: ( '|' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8561:1: ( '|' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8562:2: '|'
        {
        match(input,82,FOLLOW_82_in_synpred35_InternalHelenaText19952); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalHelenaText

    // $ANTLR start synpred36_InternalHelenaText
    public final void synpred36_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:4: ( ( () '[' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:5: ( () '[' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:5: ( () '[' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:6: () '['
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8629:6: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8630:1: 
        {
        }

        match(input,80,FOLLOW_80_in_synpred36_InternalHelenaText20072); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalHelenaText

    // $ANTLR start synpred37_InternalHelenaText
    public final void synpred37_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:8969:2: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:
        {
        if ( (input.LA(1)>=RULE_ID && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==14||input.LA(1)==27||(input.LA(1)>=38 && input.LA(1)<=39)||input.LA(1)==41||input.LA(1)==46||input.LA(1)==57||(input.LA(1)>=79 && input.LA(1)<=80)||input.LA(1)==83||(input.LA(1)>=87 && input.LA(1)<=89)||(input.LA(1)>=92 && input.LA(1)<=104)||input.LA(1)==106 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalHelenaText

    // $ANTLR start synpred38_InternalHelenaText
    public final void synpred38_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:5: ( 'catch' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9063:7: 'catch'
        {
        match(input,107,FOLLOW_107_in_synpred38_InternalHelenaText21245); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalHelenaText

    // $ANTLR start synpred39_InternalHelenaText
    public final void synpred39_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9082:5: ( 'finally' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9082:7: 'finally'
        {
        match(input,105,FOLLOW_105_in_synpred39_InternalHelenaText21275); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalHelenaText

    // $ANTLR start synpred42_InternalHelenaText
    public final void synpred42_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9308:3: ( '.' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9309:2: '.'
        {
        match(input,37,FOLLOW_37_in_synpred42_InternalHelenaText21800); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalHelenaText

    // $ANTLR start synpred43_InternalHelenaText
    public final void synpred43_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:2: ( ( () ruleArrayBrackets ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:3: ( () ruleArrayBrackets )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:3: ( () ruleArrayBrackets )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:4: () ruleArrayBrackets
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9434:4: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9435:1: 
        {
        }

        pushFollow(FOLLOW_ruleArrayBrackets_in_synpred43_InternalHelenaText22185);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalHelenaText

    // $ANTLR start synpred44_InternalHelenaText
    public final void synpred44_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9619:4: ( '<' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9619:6: '<'
        {
        match(input,27,FOLLOW_27_in_synpred44_InternalHelenaText22637); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalHelenaText

    // $ANTLR start synpred45_InternalHelenaText
    public final void synpred45_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:3: ( ( () '.' ) )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:4: ( () '.' )
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:4: ( () '.' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:5: () '.'
        {
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9668:5: ()
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9669:1: 
        {
        }

        match(input,37,FOLLOW_37_in_synpred45_InternalHelenaText22732); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalHelenaText

    // $ANTLR start synpred46_InternalHelenaText
    public final void synpred46_InternalHelenaText_fragment() throws RecognitionException {   
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9695:4: ( '<' )
        // ../eu.ascens.helenaText/src-gen/eu/ascens/parser/antlr/internal/InternalHelenaText.g:9695:6: '<'
        {
        match(input,27,FOLLOW_27_in_synpred46_InternalHelenaText22789); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalHelenaText

    // Delegated rules

    public final boolean synpred1_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalHelenaText() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalHelenaText_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA15 dfa15 = new DFA15(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA124 dfa124 = new DFA124(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA149 dfa149 = new DFA149(this);
    static final String DFA15_eotS =
        "\12\uffff";
    static final String DFA15_eofS =
        "\1\uffff\1\7\10\uffff";
    static final String DFA15_minS =
        "\1\4\1\35\1\uffff\1\4\4\uffff\1\35\1\uffff";
    static final String DFA15_maxS =
        "\1\72\1\56\1\uffff\1\4\4\uffff\1\46\1\uffff";
    static final String DFA15_acceptS =
        "\2\uffff\1\2\1\uffff\1\5\1\1\1\3\1\6\1\uffff\1\4";
    static final String DFA15_specialS =
        "\12\uffff}>";
    static final String[] DFA15_transitionS = {
            "\1\1\52\uffff\1\2\1\3\11\uffff\1\4",
            "\1\6\7\uffff\1\7\5\uffff\1\5\2\uffff\1\2",
            "",
            "\1\10",
            "",
            "",
            "",
            "",
            "\1\11\10\uffff\1\6",
            ""
    };

    static final short[] DFA15_eot = DFA.unpackEncodedString(DFA15_eotS);
    static final short[] DFA15_eof = DFA.unpackEncodedString(DFA15_eofS);
    static final char[] DFA15_min = DFA.unpackEncodedStringToUnsignedChars(DFA15_minS);
    static final char[] DFA15_max = DFA.unpackEncodedStringToUnsignedChars(DFA15_maxS);
    static final short[] DFA15_accept = DFA.unpackEncodedString(DFA15_acceptS);
    static final short[] DFA15_special = DFA.unpackEncodedString(DFA15_specialS);
    static final short[][] DFA15_transition;

    static {
        int numStates = DFA15_transitionS.length;
        DFA15_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA15_transition[i] = DFA.unpackEncodedString(DFA15_transitionS[i]);
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = DFA15_eot;
            this.eof = DFA15_eof;
            this.min = DFA15_min;
            this.max = DFA15_max;
            this.accept = DFA15_accept;
            this.special = DFA15_special;
            this.transition = DFA15_transition;
        }
        public String getDescription() {
            return "1754:1: (this_AbstractAssignment_0= ruleAbstractAssignment | this_AbstractMessageCall_1= ruleAbstractMessageCall | this_OperationCall_2= ruleOperationCall | this_ComponentAttributeSetter_3= ruleComponentAttributeSetter | this_RoleAttributeSetter_4= ruleRoleAttributeSetter | this_Label_5= ruleLabel )";
        }
    }
    static final String DFA23_eotS =
        "\61\uffff";
    static final String DFA23_eofS =
        "\1\uffff\1\16\2\uffff\6\16\6\uffff\2\16\1\uffff\1\16\2\uffff\7"+
        "\16\2\uffff\12\16\1\uffff\2\16\1\uffff\4\16";
    static final String DFA23_minS =
        "\1\4\1\33\2\4\6\33\2\uffff\2\4\2\uffff\2\33\1\5\1\33\2\4\7\33\2"+
        "\4\12\33\1\5\2\33\1\5\4\33";
    static final String DFA23_maxS =
        "\1\143\1\71\2\4\6\71\2\uffff\2\143\2\uffff\2\71\1\10\1\66\2\4\7"+
        "\66\2\4\6\66\2\71\2\66\1\10\2\66\1\10\4\66";
    static final String DFA23_acceptS =
        "\12\uffff\1\2\1\4\2\uffff\1\1\1\3\41\uffff";
    static final String DFA23_specialS =
        "\61\uffff}>";
    static final String[] DFA23_transitionS = {
            "\1\1\1\7\1\11\1\6\1\10\35\uffff\1\13\11\uffff\1\3\2\uffff\1"+
            "\12\6\uffff\1\2\47\uffff\1\4\1\5",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\20",
            "\1\21",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\4\uffff\1\22\1\uffff\1\15\1\16\10\uffff"+
            "\2\16\1\uffff\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\4\uffff\1\22\1\uffff\1\15\1\16\10\uffff"+
            "\2\16\1\uffff\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "",
            "",
            "\1\23\1\31\1\33\1\30\1\32\47\uffff\1\25\11\uffff\1\24\47\uffff"+
            "\1\26\1\27",
            "\1\34\1\42\1\44\1\41\1\43\47\uffff\1\36\11\uffff\1\35\47\uffff"+
            "\1\37\1\40",
            "",
            "",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\45\2\uffff\1\46",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\47",
            "\1\50",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\4\uffff\1\51\2\uffff\1\16\10\uffff\2\16"+
            "\1\uffff\2\16\1\17",
            "\1\17\4\uffff\1\17\4\uffff\1\51\2\uffff\1\16\10\uffff\2\16"+
            "\1\uffff\2\16\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\52",
            "\1\53",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\4\uffff\1\54\2\uffff\1\16\10\uffff\2\16"+
            "\1\uffff\2\16\1\17",
            "\1\17\4\uffff\1\17\4\uffff\1\54\2\uffff\1\16\10\uffff\2\16"+
            "\1\uffff\2\16\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\6\uffff\1\15\1\16\10\uffff\2\16\1\uffff"+
            "\2\16\1\17\2\uffff\1\14",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\55\2\uffff\1\56",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\57\2\uffff\1\60",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17",
            "\1\17\4\uffff\1\17\7\uffff\1\16\10\uffff\2\16\1\uffff\2\16"+
            "\1\17"
    };

    static final short[] DFA23_eot = DFA.unpackEncodedString(DFA23_eotS);
    static final short[] DFA23_eof = DFA.unpackEncodedString(DFA23_eofS);
    static final char[] DFA23_min = DFA.unpackEncodedStringToUnsignedChars(DFA23_minS);
    static final char[] DFA23_max = DFA.unpackEncodedStringToUnsignedChars(DFA23_maxS);
    static final short[] DFA23_accept = DFA.unpackEncodedString(DFA23_acceptS);
    static final short[] DFA23_special = DFA.unpackEncodedString(DFA23_specialS);
    static final short[][] DFA23_transition;

    static {
        int numStates = DFA23_transitionS.length;
        DFA23_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA23_transition[i] = DFA.unpackEncodedString(DFA23_transitionS[i]);
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = DFA23_eot;
            this.eof = DFA23_eof;
            this.min = DFA23_min;
            this.max = DFA23_max;
            this.accept = DFA23_accept;
            this.special = DFA23_special;
            this.transition = DFA23_transition;
        }
        public String getDescription() {
            return "2744:1: (this_DataExpression_0= ruleDataExpression | this_PlaysQuery_1= rulePlaysQuery | this_Relation_2= ruleRelation | this_GuardInParentheses_3= ruleGuardInParentheses )";
        }
    }
    static final String DFA37_eotS =
        "\22\uffff";
    static final String DFA37_eofS =
        "\1\uffff\1\13\2\uffff\6\13\3\uffff\2\13\1\uffff\2\13";
    static final String DFA37_minS =
        "\1\4\1\27\2\4\6\27\3\uffff\2\27\1\4\2\27";
    static final String DFA37_maxS =
        "\1\143\1\71\2\4\6\71\3\uffff\2\71\1\72\2\71";
    static final String DFA37_acceptS =
        "\12\uffff\1\3\1\1\1\2\5\uffff";
    static final String DFA37_specialS =
        "\22\uffff}>";
    static final String[] DFA37_transitionS = {
            "\1\1\1\7\1\11\1\6\1\10\47\uffff\1\3\11\uffff\1\2\47\uffff\1"+
            "\4\1\5",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\15",
            "\1\16",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\17\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\17\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "",
            "",
            "",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\1\20\2\uffff\1\21\33\uffff\1\13\1\uffff\1\13\2\uffff"+
            "\1\13\5\uffff\2\13\11\uffff\1\13",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12",
            "\1\13\3\uffff\1\13\4\uffff\1\13\4\uffff\1\13\1\uffff\1\14"+
            "\1\13\10\uffff\2\13\1\uffff\3\13\2\uffff\1\12"
    };

    static final short[] DFA37_eot = DFA.unpackEncodedString(DFA37_eotS);
    static final short[] DFA37_eof = DFA.unpackEncodedString(DFA37_eofS);
    static final char[] DFA37_min = DFA.unpackEncodedStringToUnsignedChars(DFA37_minS);
    static final char[] DFA37_max = DFA.unpackEncodedStringToUnsignedChars(DFA37_maxS);
    static final short[] DFA37_accept = DFA.unpackEncodedString(DFA37_acceptS);
    static final short[] DFA37_special = DFA.unpackEncodedString(DFA37_specialS);
    static final short[][] DFA37_transition;

    static {
        int numStates = DFA37_transitionS.length;
        DFA37_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA37_transition[i] = DFA.unpackEncodedString(DFA37_transitionS[i]);
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = DFA37_eot;
            this.eof = DFA37_eof;
            this.min = DFA37_min;
            this.max = DFA37_max;
            this.accept = DFA37_accept;
            this.special = DFA37_special;
            this.transition = DFA37_transition;
        }
        public String getDescription() {
            return "3925:1: (this_SimpleDataExpression_0= ruleSimpleDataExpression | this_Addition_1= ruleAddition | this_Subtraction_2= ruleSubtraction )";
        }
    }
    static final String DFA44_eotS =
        "\12\uffff";
    static final String DFA44_eofS =
        "\1\10\11\uffff";
    static final String DFA44_minS =
        "\1\4\7\0\2\uffff";
    static final String DFA44_maxS =
        "\1\153\7\0\2\uffff";
    static final String DFA44_acceptS =
        "\10\uffff\1\2\1\1";
    static final String DFA44_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\6\1\5\2\uffff}>";
    static final String[] DFA44_transitionS = {
            "\5\10\5\uffff\2\10\2\uffff\1\10\4\uffff\1\10\3\uffff\1\6\4"+
            "\uffff\1\7\1\10\3\uffff\6\10\3\uffff\1\10\2\uffff\2\10\1\uffff"+
            "\3\10\2\uffff\1\10\1\uffff\1\1\1\2\1\3\1\4\1\5\22\10\1\uffff"+
            "\31\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
    static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
    static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
    static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
    static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
    static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
    static final short[][] DFA44_transition;

    static {
        int numStates = DFA44_transitionS.length;
        DFA44_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
        }
    }

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = DFA44_eot;
            this.eof = DFA44_eof;
            this.min = DFA44_min;
            this.max = DFA44_max;
            this.accept = DFA44_accept;
            this.special = DFA44_special;
            this.transition = DFA44_transition;
        }
        public String getDescription() {
            return "4571:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_1 = input.LA(1);

                         
                        int index44_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_2 = input.LA(1);

                         
                        int index44_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA44_3 = input.LA(1);

                         
                        int index44_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA44_4 = input.LA(1);

                         
                        int index44_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA44_5 = input.LA(1);

                         
                        int index44_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA44_7 = input.LA(1);

                         
                        int index44_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA44_6 = input.LA(1);

                         
                        int index44_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalHelenaText()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index44_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA52_eotS =
        "\13\uffff";
    static final String DFA52_eofS =
        "\1\1\12\uffff";
    static final String DFA52_minS =
        "\1\4\1\uffff\10\0\1\uffff";
    static final String DFA52_maxS =
        "\1\153\1\uffff\10\0\1\uffff";
    static final String DFA52_acceptS =
        "\1\uffff\1\2\10\uffff\1\1";
    static final String DFA52_specialS =
        "\2\uffff\1\3\1\0\1\4\1\5\1\7\1\6\1\1\1\2\1\uffff}>";
    static final String[] DFA52_transitionS = {
            "\5\1\5\uffff\2\1\2\uffff\1\1\4\uffff\1\1\3\uffff\1\2\4\uffff"+
            "\1\3\1\1\3\uffff\6\1\3\uffff\1\1\2\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\1\1\1\uffff\6\1\1\4\1\5\1\6\1\7\1\10\1\11\13\1\1\uffff\31\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
    static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
    static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
    static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
    static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
    static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
    static final short[][] DFA52_transition;

    static {
        int numStates = DFA52_transitionS.length;
        DFA52_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
        }
    }

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = DFA52_eot;
            this.eof = DFA52_eof;
            this.min = DFA52_min;
            this.max = DFA52_max;
            this.accept = DFA52_accept;
            this.special = DFA52_special;
            this.transition = DFA52_transition;
        }
        public String getDescription() {
            return "()* loopback of 5146:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_3 = input.LA(1);

                         
                        int index52_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_8 = input.LA(1);

                         
                        int index52_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA52_9 = input.LA(1);

                         
                        int index52_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA52_2 = input.LA(1);

                         
                        int index52_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA52_4 = input.LA(1);

                         
                        int index52_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA52_5 = input.LA(1);

                         
                        int index52_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA52_7 = input.LA(1);

                         
                        int index52_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA52_6 = input.LA(1);

                         
                        int index52_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalHelenaText()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index52_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA55_eotS =
        "\13\uffff";
    static final String DFA55_eofS =
        "\13\uffff";
    static final String DFA55_minS =
        "\1\33\2\uffff\1\40\7\uffff";
    static final String DFA55_maxS =
        "\1\106\2\uffff\1\103\7\uffff";
    static final String DFA55_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String DFA55_specialS =
        "\13\uffff}>";
    static final String[] DFA55_transitionS = {
            "\1\6\4\uffff\1\3\40\uffff\1\1\1\2\1\4\1\5\1\7\1\10",
            "",
            "",
            "\1\12\42\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
    static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
    static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
    static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
    static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
    static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
    static final short[][] DFA55_transition;

    static {
        int numStates = DFA55_transitionS.length;
        DFA55_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = DFA55_eot;
            this.eof = DFA55_eof;
            this.min = DFA55_min;
            this.max = DFA55_max;
            this.accept = DFA55_accept;
            this.special = DFA55_special;
            this.transition = DFA55_transition;
        }
        public String getDescription() {
            return "5211:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String DFA71_eotS =
        "\114\uffff";
    static final String DFA71_eofS =
        "\1\2\113\uffff";
    static final String DFA71_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA71_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA71_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA71_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA71_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff"+
            "\2\2\3\uffff\1\2\1\1\4\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2"+
            "\2\uffff\1\2\1\uffff\27\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
    static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
    static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
    static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
    static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
    static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
    static final short[][] DFA71_transition;

    static {
        int numStates = DFA71_transitionS.length;
        DFA71_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "6055:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA70_eotS =
        "\44\uffff";
    static final String DFA70_eofS =
        "\44\uffff";
    static final String DFA70_minS =
        "\1\4\2\0\41\uffff";
    static final String DFA70_maxS =
        "\1\152\2\0\41\uffff";
    static final String DFA70_acceptS =
        "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String DFA70_specialS =
        "\1\0\1\1\1\2\41\uffff}>";
    static final String[] DFA70_transitionS = {
            "\1\1\4\5\5\uffff\1\5\14\uffff\1\5\12\uffff\1\2\1\5\1\43\1\5"+
            "\4\uffff\1\5\12\uffff\1\5\12\uffff\1\3\12\uffff\2\5\1\uffff"+
            "\1\4\1\5\3\uffff\3\5\2\uffff\15\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA70_eot = DFA.unpackEncodedString(DFA70_eotS);
    static final short[] DFA70_eof = DFA.unpackEncodedString(DFA70_eofS);
    static final char[] DFA70_min = DFA.unpackEncodedStringToUnsignedChars(DFA70_minS);
    static final char[] DFA70_max = DFA.unpackEncodedStringToUnsignedChars(DFA70_maxS);
    static final short[] DFA70_accept = DFA.unpackEncodedString(DFA70_acceptS);
    static final short[] DFA70_special = DFA.unpackEncodedString(DFA70_specialS);
    static final short[][] DFA70_transition;

    static {
        int numStates = DFA70_transitionS.length;
        DFA70_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA70_transition[i] = DFA.unpackEncodedString(DFA70_transitionS[i]);
        }
    }

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = DFA70_eot;
            this.eof = DFA70_eof;
            this.min = DFA70_min;
            this.max = DFA70_max;
            this.accept = DFA70_accept;
            this.special = DFA70_special;
            this.transition = DFA70_transition;
        }
        public String getDescription() {
            return "6076:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_0 = input.LA(1);

                         
                        int index70_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA70_0==RULE_ID) ) {s = 1;}

                        else if ( (LA70_0==38) ) {s = 2;}

                        else if ( (LA70_0==68) && (synpred17_InternalHelenaText())) {s = 3;}

                        else if ( (LA70_0==82) && (synpred17_InternalHelenaText())) {s = 4;}

                        else if ( ((LA70_0>=RULE_INT && LA70_0<=RULE_DECIMAL)||LA70_0==14||LA70_0==27||LA70_0==39||LA70_0==41||LA70_0==46||LA70_0==57||(LA70_0>=79 && LA70_0<=80)||LA70_0==83||(LA70_0>=87 && LA70_0<=89)||(LA70_0>=92 && LA70_0<=104)||LA70_0==106) ) {s = 5;}

                        else if ( (LA70_0==40) ) {s = 35;}

                         
                        input.seek(index70_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_2 = input.LA(1);

                         
                        int index70_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index70_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA72_eotS =
        "\114\uffff";
    static final String DFA72_eofS =
        "\1\2\113\uffff";
    static final String DFA72_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA72_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA72_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA72_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA72_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff"+
            "\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\1\2\1\uffff\25\2\1\1\1\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "6155:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_1 = input.LA(1);

                         
                        int index72_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index72_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA74_eotS =
        "\40\uffff";
    static final String DFA74_eofS =
        "\40\uffff";
    static final String DFA74_minS =
        "\1\4\26\uffff\1\0\10\uffff";
    static final String DFA74_maxS =
        "\1\152\26\uffff\1\0\10\uffff";
    static final String DFA74_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1"+
        "\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String DFA74_specialS =
        "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\5\4\14\5\uffff\1\2\14\uffff\1\5\12\uffff\1\35\2\uffff\1"+
            "\26\45\uffff\2\14\2\uffff\1\3\3\uffff\1\27\1\30\1\31\2\uffff"+
            "\5\5\1\1\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "6196:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA74_0==97) ) {s = 1;}

                        else if ( (LA74_0==14) ) {s = 2;}

                        else if ( (LA74_0==83) ) {s = 3;}

                        else if ( (LA74_0==106) && (synpred19_InternalHelenaText())) {s = 4;}

                        else if ( (LA74_0==RULE_ID||LA74_0==27||(LA74_0>=92 && LA74_0<=96)) ) {s = 5;}

                        else if ( ((LA74_0>=RULE_INT && LA74_0<=RULE_DECIMAL)||(LA74_0>=79 && LA74_0<=80)||(LA74_0>=98 && LA74_0<=101)) ) {s = 12;}

                        else if ( (LA74_0==41) ) {s = 22;}

                        else if ( (LA74_0==87) ) {s = 23;}

                        else if ( (LA74_0==88) ) {s = 24;}

                        else if ( (LA74_0==89) ) {s = 25;}

                        else if ( (LA74_0==102) ) {s = 26;}

                        else if ( (LA74_0==103) ) {s = 27;}

                        else if ( (LA74_0==104) ) {s = 28;}

                        else if ( (LA74_0==38) ) {s = 29;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_23 = input.LA(1);

                         
                        int index74_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalHelenaText()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index74_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA83_eotS =
        "\46\uffff";
    static final String DFA83_eofS =
        "\46\uffff";
    static final String DFA83_minS =
        "\1\4\2\0\43\uffff";
    static final String DFA83_maxS =
        "\1\152\2\0\43\uffff";
    static final String DFA83_acceptS =
        "\3\uffff\2\1\1\2\40\uffff";
    static final String DFA83_specialS =
        "\1\0\1\1\1\2\43\uffff}>";
    static final String[] DFA83_transitionS = {
            "\1\1\4\5\5\uffff\1\5\14\uffff\1\5\12\uffff\1\2\1\5\1\uffff"+
            "\1\5\4\uffff\1\5\12\uffff\1\5\12\uffff\1\3\12\uffff\3\5\1\4"+
            "\1\5\3\uffff\22\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "6679:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_0 = input.LA(1);

                         
                        int index83_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_0==RULE_ID) ) {s = 1;}

                        else if ( (LA83_0==38) ) {s = 2;}

                        else if ( (LA83_0==68) && (synpred23_InternalHelenaText())) {s = 3;}

                        else if ( (LA83_0==82) && (synpred23_InternalHelenaText())) {s = 4;}

                        else if ( ((LA83_0>=RULE_INT && LA83_0<=RULE_DECIMAL)||LA83_0==14||LA83_0==27||LA83_0==39||LA83_0==41||LA83_0==46||LA83_0==57||(LA83_0>=79 && LA83_0<=81)||LA83_0==83||(LA83_0>=87 && LA83_0<=104)||LA83_0==106) ) {s = 5;}

                         
                        input.seek(index83_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA90_eotS =
        "\43\uffff";
    static final String DFA90_eofS =
        "\43\uffff";
    static final String DFA90_minS =
        "\1\4\1\0\41\uffff";
    static final String DFA90_maxS =
        "\1\152\1\0\41\uffff";
    static final String DFA90_acceptS =
        "\2\uffff\1\2\37\uffff\1\1";
    static final String DFA90_specialS =
        "\1\uffff\1\0\41\uffff}>";
    static final String[] DFA90_transitionS = {
            "\5\2\5\uffff\1\2\14\uffff\1\2\12\uffff\1\1\1\2\1\uffff\1\2"+
            "\4\uffff\1\2\12\uffff\1\2\12\uffff\1\2\12\uffff\2\2\2\uffff"+
            "\1\2\3\uffff\3\2\2\uffff\15\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
    static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
    static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
    static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
    static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
    static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
    static final short[][] DFA90_transition;

    static {
        int numStates = DFA90_transitionS.length;
        DFA90_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "7103:1: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_1 = input.LA(1);

                         
                        int index90_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalHelenaText()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index90_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA89_eotS =
        "\42\uffff";
    static final String DFA89_eofS =
        "\42\uffff";
    static final String DFA89_minS =
        "\1\4\2\0\37\uffff";
    static final String DFA89_maxS =
        "\1\152\2\0\37\uffff";
    static final String DFA89_acceptS =
        "\3\uffff\1\1\1\2\35\uffff";
    static final String DFA89_specialS =
        "\1\0\1\1\1\2\37\uffff}>";
    static final String[] DFA89_transitionS = {
            "\1\1\4\4\5\uffff\1\4\14\uffff\1\4\12\uffff\1\2\1\4\1\uffff"+
            "\1\4\4\uffff\1\4\12\uffff\1\4\12\uffff\1\3\12\uffff\2\4\2\uffff"+
            "\1\4\3\uffff\3\4\2\uffff\15\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
    static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
    static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
    static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
    static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
    static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
    static final short[][] DFA89_transition;

    static {
        int numStates = DFA89_transitionS.length;
        DFA89_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = DFA89_eot;
            this.eof = DFA89_eof;
            this.min = DFA89_min;
            this.max = DFA89_max;
            this.accept = DFA89_accept;
            this.special = DFA89_special;
            this.transition = DFA89_transition;
        }
        public String getDescription() {
            return "7158:7: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_0 = input.LA(1);

                         
                        int index89_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA89_0==RULE_ID) ) {s = 1;}

                        else if ( (LA89_0==38) ) {s = 2;}

                        else if ( (LA89_0==68) && (synpred27_InternalHelenaText())) {s = 3;}

                        else if ( ((LA89_0>=RULE_INT && LA89_0<=RULE_DECIMAL)||LA89_0==14||LA89_0==27||LA89_0==39||LA89_0==41||LA89_0==46||LA89_0==57||(LA89_0>=79 && LA89_0<=80)||LA89_0==83||(LA89_0>=87 && LA89_0<=89)||(LA89_0>=92 && LA89_0<=104)||LA89_0==106) ) {s = 4;}

                         
                        input.seek(index89_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA89_1 = input.LA(1);

                         
                        int index89_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalHelenaText()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index89_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA89_2 = input.LA(1);

                         
                        int index89_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalHelenaText()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index89_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA112_eotS =
        "\114\uffff";
    static final String DFA112_eofS =
        "\1\2\113\uffff";
    static final String DFA112_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA112_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA112_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA112_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA112_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff"+
            "\2\2\3\uffff\1\2\1\1\4\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2"+
            "\2\uffff\1\2\1\uffff\27\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA112_eot = DFA.unpackEncodedString(DFA112_eotS);
    static final short[] DFA112_eof = DFA.unpackEncodedString(DFA112_eofS);
    static final char[] DFA112_min = DFA.unpackEncodedStringToUnsignedChars(DFA112_minS);
    static final char[] DFA112_max = DFA.unpackEncodedStringToUnsignedChars(DFA112_maxS);
    static final short[] DFA112_accept = DFA.unpackEncodedString(DFA112_acceptS);
    static final short[] DFA112_special = DFA.unpackEncodedString(DFA112_specialS);
    static final short[][] DFA112_transition;

    static {
        int numStates = DFA112_transitionS.length;
        DFA112_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA112_transition[i] = DFA.unpackEncodedString(DFA112_transitionS[i]);
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = DFA112_eot;
            this.eof = DFA112_eof;
            this.min = DFA112_min;
            this.max = DFA112_max;
            this.accept = DFA112_accept;
            this.special = DFA112_special;
            this.transition = DFA112_transition;
        }
        public String getDescription() {
            return "8215:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA111_eotS =
        "\44\uffff";
    static final String DFA111_eofS =
        "\44\uffff";
    static final String DFA111_minS =
        "\1\4\2\0\41\uffff";
    static final String DFA111_maxS =
        "\1\152\2\0\41\uffff";
    static final String DFA111_acceptS =
        "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String DFA111_specialS =
        "\1\0\1\1\1\2\41\uffff}>";
    static final String[] DFA111_transitionS = {
            "\1\1\4\5\5\uffff\1\5\14\uffff\1\5\12\uffff\1\2\1\5\1\43\1\5"+
            "\4\uffff\1\5\12\uffff\1\5\12\uffff\1\3\12\uffff\2\5\1\uffff"+
            "\1\4\1\5\3\uffff\3\5\2\uffff\15\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
    static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
    static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
    static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
    static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
    static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
    static final short[][] DFA111_transition;

    static {
        int numStates = DFA111_transitionS.length;
        DFA111_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = DFA111_eot;
            this.eof = DFA111_eof;
            this.min = DFA111_min;
            this.max = DFA111_max;
            this.accept = DFA111_accept;
            this.special = DFA111_special;
            this.transition = DFA111_transition;
        }
        public String getDescription() {
            return "8236:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_0 = input.LA(1);

                         
                        int index111_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA111_0==RULE_ID) ) {s = 1;}

                        else if ( (LA111_0==38) ) {s = 2;}

                        else if ( (LA111_0==68) && (synpred31_InternalHelenaText())) {s = 3;}

                        else if ( (LA111_0==82) && (synpred31_InternalHelenaText())) {s = 4;}

                        else if ( ((LA111_0>=RULE_INT && LA111_0<=RULE_DECIMAL)||LA111_0==14||LA111_0==27||LA111_0==39||LA111_0==41||LA111_0==46||LA111_0==57||(LA111_0>=79 && LA111_0<=80)||LA111_0==83||(LA111_0>=87 && LA111_0<=89)||(LA111_0>=92 && LA111_0<=104)||LA111_0==106) ) {s = 5;}

                        else if ( (LA111_0==40) ) {s = 35;}

                         
                        input.seek(index111_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_1 = input.LA(1);

                         
                        int index111_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index111_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA111_2 = input.LA(1);

                         
                        int index111_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index111_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA113_eotS =
        "\114\uffff";
    static final String DFA113_eofS =
        "\1\2\113\uffff";
    static final String DFA113_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA113_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA113_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA113_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA113_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff"+
            "\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\1\2\1\uffff\25\2\1\1\1\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA113_eot = DFA.unpackEncodedString(DFA113_eotS);
    static final short[] DFA113_eof = DFA.unpackEncodedString(DFA113_eofS);
    static final char[] DFA113_min = DFA.unpackEncodedStringToUnsignedChars(DFA113_minS);
    static final char[] DFA113_max = DFA.unpackEncodedStringToUnsignedChars(DFA113_maxS);
    static final short[] DFA113_accept = DFA.unpackEncodedString(DFA113_acceptS);
    static final short[] DFA113_special = DFA.unpackEncodedString(DFA113_specialS);
    static final short[][] DFA113_transition;

    static {
        int numStates = DFA113_transitionS.length;
        DFA113_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA113_transition[i] = DFA.unpackEncodedString(DFA113_transitionS[i]);
        }
    }

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = DFA113_eot;
            this.eof = DFA113_eof;
            this.min = DFA113_min;
            this.max = DFA113_max;
            this.accept = DFA113_accept;
            this.special = DFA113_special;
            this.transition = DFA113_transition;
        }
        public String getDescription() {
            return "8315:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA117_eotS =
        "\114\uffff";
    static final String DFA117_eofS =
        "\1\2\113\uffff";
    static final String DFA117_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA117_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA117_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA117_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA117_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\1\4\uffff"+
            "\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\1\2\1\uffff\27\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA117_eot = DFA.unpackEncodedString(DFA117_eotS);
    static final short[] DFA117_eof = DFA.unpackEncodedString(DFA117_eofS);
    static final char[] DFA117_min = DFA.unpackEncodedStringToUnsignedChars(DFA117_minS);
    static final char[] DFA117_max = DFA.unpackEncodedStringToUnsignedChars(DFA117_maxS);
    static final short[] DFA117_accept = DFA.unpackEncodedString(DFA117_acceptS);
    static final short[] DFA117_special = DFA.unpackEncodedString(DFA117_specialS);
    static final short[][] DFA117_transition;

    static {
        int numStates = DFA117_transitionS.length;
        DFA117_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA117_transition[i] = DFA.unpackEncodedString(DFA117_transitionS[i]);
        }
    }

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = DFA117_eot;
            this.eof = DFA117_eof;
            this.min = DFA117_min;
            this.max = DFA117_max;
            this.accept = DFA117_accept;
            this.special = DFA117_special;
            this.transition = DFA117_transition;
        }
        public String getDescription() {
            return "8480:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_1 = input.LA(1);

                         
                        int index117_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index117_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA120_eotS =
        "\114\uffff";
    static final String DFA120_eofS =
        "\1\2\113\uffff";
    static final String DFA120_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA120_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA120_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA120_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA120_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff"+
            "\2\2\3\uffff\1\2\1\1\4\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2"+
            "\2\uffff\1\2\1\uffff\27\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA120_eot = DFA.unpackEncodedString(DFA120_eotS);
    static final short[] DFA120_eof = DFA.unpackEncodedString(DFA120_eofS);
    static final char[] DFA120_min = DFA.unpackEncodedStringToUnsignedChars(DFA120_minS);
    static final char[] DFA120_max = DFA.unpackEncodedStringToUnsignedChars(DFA120_maxS);
    static final short[] DFA120_accept = DFA.unpackEncodedString(DFA120_acceptS);
    static final short[] DFA120_special = DFA.unpackEncodedString(DFA120_specialS);
    static final short[][] DFA120_transition;

    static {
        int numStates = DFA120_transitionS.length;
        DFA120_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA120_transition[i] = DFA.unpackEncodedString(DFA120_transitionS[i]);
        }
    }

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = DFA120_eot;
            this.eof = DFA120_eof;
            this.min = DFA120_min;
            this.max = DFA120_max;
            this.accept = DFA120_accept;
            this.special = DFA120_special;
            this.transition = DFA120_transition;
        }
        public String getDescription() {
            return "8529:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA120_1 = input.LA(1);

                         
                        int index120_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index120_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 120, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA119_eotS =
        "\44\uffff";
    static final String DFA119_eofS =
        "\44\uffff";
    static final String DFA119_minS =
        "\1\4\2\0\41\uffff";
    static final String DFA119_maxS =
        "\1\152\2\0\41\uffff";
    static final String DFA119_acceptS =
        "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String DFA119_specialS =
        "\1\0\1\1\1\2\41\uffff}>";
    static final String[] DFA119_transitionS = {
            "\1\1\4\5\5\uffff\1\5\14\uffff\1\5\12\uffff\1\2\1\5\1\43\1\5"+
            "\4\uffff\1\5\12\uffff\1\5\12\uffff\1\3\12\uffff\2\5\1\uffff"+
            "\1\4\1\5\3\uffff\3\5\2\uffff\15\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA119_eot = DFA.unpackEncodedString(DFA119_eotS);
    static final short[] DFA119_eof = DFA.unpackEncodedString(DFA119_eofS);
    static final char[] DFA119_min = DFA.unpackEncodedStringToUnsignedChars(DFA119_minS);
    static final char[] DFA119_max = DFA.unpackEncodedStringToUnsignedChars(DFA119_maxS);
    static final short[] DFA119_accept = DFA.unpackEncodedString(DFA119_acceptS);
    static final short[] DFA119_special = DFA.unpackEncodedString(DFA119_specialS);
    static final short[][] DFA119_transition;

    static {
        int numStates = DFA119_transitionS.length;
        DFA119_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA119_transition[i] = DFA.unpackEncodedString(DFA119_transitionS[i]);
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = DFA119_eot;
            this.eof = DFA119_eof;
            this.min = DFA119_min;
            this.max = DFA119_max;
            this.accept = DFA119_accept;
            this.special = DFA119_special;
            this.transition = DFA119_transition;
        }
        public String getDescription() {
            return "8550:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_0 = input.LA(1);

                         
                        int index119_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_0==RULE_ID) ) {s = 1;}

                        else if ( (LA119_0==38) ) {s = 2;}

                        else if ( (LA119_0==68) && (synpred35_InternalHelenaText())) {s = 3;}

                        else if ( (LA119_0==82) && (synpred35_InternalHelenaText())) {s = 4;}

                        else if ( ((LA119_0>=RULE_INT && LA119_0<=RULE_DECIMAL)||LA119_0==14||LA119_0==27||LA119_0==39||LA119_0==41||LA119_0==46||LA119_0==57||(LA119_0>=79 && LA119_0<=80)||LA119_0==83||(LA119_0>=87 && LA119_0<=89)||(LA119_0>=92 && LA119_0<=104)||LA119_0==106) ) {s = 5;}

                        else if ( (LA119_0==40) ) {s = 35;}

                         
                        input.seek(index119_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA119_1 = input.LA(1);

                         
                        int index119_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index119_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA119_2 = input.LA(1);

                         
                        int index119_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalHelenaText()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index119_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA121_eotS =
        "\114\uffff";
    static final String DFA121_eofS =
        "\1\2\113\uffff";
    static final String DFA121_minS =
        "\1\4\1\0\112\uffff";
    static final String DFA121_maxS =
        "\1\153\1\0\112\uffff";
    static final String DFA121_acceptS =
        "\2\uffff\1\2\110\uffff\1\1";
    static final String DFA121_specialS =
        "\1\uffff\1\0\112\uffff}>";
    static final String[] DFA121_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff"+
            "\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\1\2\1\uffff\25\2\1\1\1\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA121_eot = DFA.unpackEncodedString(DFA121_eotS);
    static final short[] DFA121_eof = DFA.unpackEncodedString(DFA121_eofS);
    static final char[] DFA121_min = DFA.unpackEncodedStringToUnsignedChars(DFA121_minS);
    static final char[] DFA121_max = DFA.unpackEncodedStringToUnsignedChars(DFA121_maxS);
    static final short[] DFA121_accept = DFA.unpackEncodedString(DFA121_acceptS);
    static final short[] DFA121_special = DFA.unpackEncodedString(DFA121_specialS);
    static final short[][] DFA121_transition;

    static {
        int numStates = DFA121_transitionS.length;
        DFA121_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA121_transition[i] = DFA.unpackEncodedString(DFA121_transitionS[i]);
        }
    }

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = DFA121_eot;
            this.eof = DFA121_eof;
            this.min = DFA121_min;
            this.max = DFA121_max;
            this.accept = DFA121_accept;
            this.special = DFA121_special;
            this.transition = DFA121_transition;
        }
        public String getDescription() {
            return "8629:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_1 = input.LA(1);

                         
                        int index121_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index121_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA124_eotS =
        "\114\uffff";
    static final String DFA124_eofS =
        "\1\41\113\uffff";
    static final String DFA124_minS =
        "\1\4\40\0\53\uffff";
    static final String DFA124_maxS =
        "\1\153\40\0\53\uffff";
    static final String DFA124_acceptS =
        "\41\uffff\1\2\51\uffff\1\1";
    static final String DFA124_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
        "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\53\uffff}>";
    static final String[] DFA124_transitionS = {
            "\1\1\1\24\1\27\1\23\1\25\5\uffff\1\12\1\41\2\uffff\1\41\4\uffff"+
            "\1\41\3\uffff\1\15\4\uffff\2\41\3\uffff\1\41\1\40\1\10\1\41"+
            "\1\31\1\41\3\uffff\1\6\2\uffff\2\41\1\uffff\3\41\2\uffff\1\7"+
            "\1\uffff\24\41\1\17\1\20\1\41\1\uffff\1\13\3\41\1\32\1\33\1"+
            "\34\2\41\1\2\1\3\1\4\1\5\1\16\1\11\1\21\1\22\1\26\1\30\1\35"+
            "\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA124_eot = DFA.unpackEncodedString(DFA124_eotS);
    static final short[] DFA124_eof = DFA.unpackEncodedString(DFA124_eofS);
    static final char[] DFA124_min = DFA.unpackEncodedStringToUnsignedChars(DFA124_minS);
    static final char[] DFA124_max = DFA.unpackEncodedStringToUnsignedChars(DFA124_maxS);
    static final short[] DFA124_accept = DFA.unpackEncodedString(DFA124_acceptS);
    static final short[] DFA124_special = DFA.unpackEncodedString(DFA124_specialS);
    static final short[][] DFA124_transition;

    static {
        int numStates = DFA124_transitionS.length;
        DFA124_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA124_transition[i] = DFA.unpackEncodedString(DFA124_transitionS[i]);
        }
    }

    class DFA124 extends DFA {

        public DFA124(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 124;
            this.eot = DFA124_eot;
            this.eof = DFA124_eof;
            this.min = DFA124_min;
            this.max = DFA124_max;
            this.accept = DFA124_accept;
            this.special = DFA124_special;
            this.transition = DFA124_transition;
        }
        public String getDescription() {
            return "8969:1: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA124_1 = input.LA(1);

                         
                        int index124_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA124_2 = input.LA(1);

                         
                        int index124_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA124_3 = input.LA(1);

                         
                        int index124_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA124_4 = input.LA(1);

                         
                        int index124_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA124_5 = input.LA(1);

                         
                        int index124_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA124_6 = input.LA(1);

                         
                        int index124_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA124_7 = input.LA(1);

                         
                        int index124_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA124_8 = input.LA(1);

                         
                        int index124_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA124_9 = input.LA(1);

                         
                        int index124_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA124_10 = input.LA(1);

                         
                        int index124_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA124_11 = input.LA(1);

                         
                        int index124_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA124_12 = input.LA(1);

                         
                        int index124_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA124_13 = input.LA(1);

                         
                        int index124_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA124_14 = input.LA(1);

                         
                        int index124_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA124_15 = input.LA(1);

                         
                        int index124_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA124_16 = input.LA(1);

                         
                        int index124_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA124_17 = input.LA(1);

                         
                        int index124_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA124_18 = input.LA(1);

                         
                        int index124_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA124_19 = input.LA(1);

                         
                        int index124_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA124_20 = input.LA(1);

                         
                        int index124_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA124_21 = input.LA(1);

                         
                        int index124_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA124_22 = input.LA(1);

                         
                        int index124_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA124_23 = input.LA(1);

                         
                        int index124_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA124_24 = input.LA(1);

                         
                        int index124_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA124_25 = input.LA(1);

                         
                        int index124_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA124_26 = input.LA(1);

                         
                        int index124_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA124_27 = input.LA(1);

                         
                        int index124_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA124_28 = input.LA(1);

                         
                        int index124_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA124_29 = input.LA(1);

                         
                        int index124_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA124_30 = input.LA(1);

                         
                        int index124_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA124_31 = input.LA(1);

                         
                        int index124_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA124_32 = input.LA(1);

                         
                        int index124_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalHelenaText()) ) {s = 75;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index124_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 124, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA142_eotS =
        "\115\uffff";
    static final String DFA142_eofS =
        "\1\2\114\uffff";
    static final String DFA142_minS =
        "\1\4\1\0\113\uffff";
    static final String DFA142_maxS =
        "\1\154\1\0\113\uffff";
    static final String DFA142_acceptS =
        "\2\uffff\1\2\111\uffff\1\1";
    static final String DFA142_specialS =
        "\1\uffff\1\0\113\uffff}>";
    static final String[] DFA142_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\1\4\uffff"+
            "\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\1\2\1\uffff\27\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA142_eot = DFA.unpackEncodedString(DFA142_eotS);
    static final short[] DFA142_eof = DFA.unpackEncodedString(DFA142_eofS);
    static final char[] DFA142_min = DFA.unpackEncodedStringToUnsignedChars(DFA142_minS);
    static final char[] DFA142_max = DFA.unpackEncodedStringToUnsignedChars(DFA142_maxS);
    static final short[] DFA142_accept = DFA.unpackEncodedString(DFA142_acceptS);
    static final short[] DFA142_special = DFA.unpackEncodedString(DFA142_specialS);
    static final short[][] DFA142_transition;

    static {
        int numStates = DFA142_transitionS.length;
        DFA142_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA142_transition[i] = DFA.unpackEncodedString(DFA142_transitionS[i]);
        }
    }

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = DFA142_eot;
            this.eof = DFA142_eof;
            this.min = DFA142_min;
            this.max = DFA142_max;
            this.accept = DFA142_accept;
            this.special = DFA142_special;
            this.transition = DFA142_transition;
        }
        public String getDescription() {
            return "9619:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA142_1 = input.LA(1);

                         
                        int index142_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalHelenaText()) ) {s = 76;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index142_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 142, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA140_eotS =
        "\115\uffff";
    static final String DFA140_eofS =
        "\1\2\114\uffff";
    static final String DFA140_minS =
        "\1\4\1\0\113\uffff";
    static final String DFA140_maxS =
        "\1\154\1\0\113\uffff";
    static final String DFA140_acceptS =
        "\2\uffff\1\2\111\uffff\1\1";
    static final String DFA140_specialS =
        "\1\uffff\1\0\113\uffff}>";
    static final String[] DFA140_transitionS = {
            "\5\2\5\uffff\2\2\2\uffff\1\2\4\uffff\1\2\3\uffff\1\1\4\uffff"+
            "\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\1\2\1\uffff\27\2\1\uffff\32\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA140_eot = DFA.unpackEncodedString(DFA140_eotS);
    static final short[] DFA140_eof = DFA.unpackEncodedString(DFA140_eofS);
    static final char[] DFA140_min = DFA.unpackEncodedStringToUnsignedChars(DFA140_minS);
    static final char[] DFA140_max = DFA.unpackEncodedStringToUnsignedChars(DFA140_maxS);
    static final short[] DFA140_accept = DFA.unpackEncodedString(DFA140_acceptS);
    static final short[] DFA140_special = DFA.unpackEncodedString(DFA140_specialS);
    static final short[][] DFA140_transition;

    static {
        int numStates = DFA140_transitionS.length;
        DFA140_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA140_transition[i] = DFA.unpackEncodedString(DFA140_transitionS[i]);
        }
    }

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = DFA140_eot;
            this.eof = DFA140_eof;
            this.min = DFA140_min;
            this.max = DFA140_max;
            this.accept = DFA140_accept;
            this.special = DFA140_special;
            this.transition = DFA140_transition;
        }
        public String getDescription() {
            return "9695:2: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA140_1 = input.LA(1);

                         
                        int index140_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalHelenaText()) ) {s = 76;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index140_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 140, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA149_eotS =
        "\7\uffff";
    static final String DFA149_eofS =
        "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String DFA149_minS =
        "\1\4\1\uffff\1\22\1\4\1\uffff\1\22\1\uffff";
    static final String DFA149_maxS =
        "\1\135\1\uffff\1\45\1\41\1\uffff\1\45\1\uffff";
    static final String DFA149_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String DFA149_specialS =
        "\7\uffff}>";
    static final String[] DFA149_transitionS = {
            "\1\2\130\uffff\1\1",
            "",
            "\1\4\22\uffff\1\3",
            "\1\5\34\uffff\1\6",
            "",
            "\1\4\22\uffff\1\3",
            ""
    };

    static final short[] DFA149_eot = DFA.unpackEncodedString(DFA149_eotS);
    static final short[] DFA149_eof = DFA.unpackEncodedString(DFA149_eofS);
    static final char[] DFA149_min = DFA.unpackEncodedStringToUnsignedChars(DFA149_minS);
    static final char[] DFA149_max = DFA.unpackEncodedStringToUnsignedChars(DFA149_maxS);
    static final short[] DFA149_accept = DFA.unpackEncodedString(DFA149_acceptS);
    static final short[] DFA149_special = DFA.unpackEncodedString(DFA149_specialS);
    static final short[][] DFA149_transition;

    static {
        int numStates = DFA149_transitionS.length;
        DFA149_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA149_transition[i] = DFA.unpackEncodedString(DFA149_transitionS[i]);
        }
    }

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = DFA149_eot;
            this.eof = DFA149_eof;
            this.min = DFA149_min;
            this.max = DFA149_max;
            this.accept = DFA149_accept;
            this.special = DFA149_special;
            this.transition = DFA149_transition;
        }
        public String getDescription() {
            return "10161:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_ruleModel_in_entryRuleModel75 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleModel85 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePackageDeclaration_in_ruleModel130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePackageDeclaration_in_entryRulePackageDeclaration165 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePackageDeclaration175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rulePackageDeclaration257 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_rulePackageDeclaration278 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_rulePackageDeclaration290 = new BitSet(new long[]{0x000000040421A002L});
    public static final BitSet FOLLOW_ruleComponentType_in_rulePackageDeclaration311 = new BitSet(new long[]{0x000000040421A002L});
    public static final BitSet FOLLOW_ruleRoleType_in_rulePackageDeclaration388 = new BitSet(new long[]{0x000000040420A002L});
    public static final BitSet FOLLOW_ruleEnsembleStructure_in_rulePackageDeclaration464 = new BitSet(new long[]{0x000000040420A002L});
    public static final BitSet FOLLOW_ruleRoleBehavior_in_rulePackageDeclaration541 = new BitSet(new long[]{0x0000000400008000L});
    public static final BitSet FOLLOW_15_in_rulePackageDeclaration554 = new BitSet(new long[]{0x000000040420A002L});
    public static final BitSet FOLLOW_ruleComponentType_in_entryRuleComponentType636 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentType646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_ruleComponentType683 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleComponentType704 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleComponentType716 = new BitSet(new long[]{0x00000000001A8000L});
    public static final BitSet FOLLOW_ruleComponentAttributeType_in_ruleComponentType738 = new BitSet(new long[]{0x00000000001A8000L});
    public static final BitSet FOLLOW_ruleComponentAssociationType_in_ruleComponentType765 = new BitSet(new long[]{0x00000000001A8000L});
    public static final BitSet FOLLOW_ruleOperationType_in_ruleComponentType792 = new BitSet(new long[]{0x00000000001A8000L});
    public static final BitSet FOLLOW_15_in_ruleComponentType806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractComponentFieldType_in_entryRuleAbstractComponentFieldType842 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractComponentFieldType852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeType_in_ruleAbstractComponentFieldType899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAssociationType_in_ruleAbstractComponentFieldType926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeType_in_entryRuleComponentAttributeType961 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentAttributeType971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleComponentAttributeType1008 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleComponentAttributeType1029 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleComponentAttributeType1050 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleComponentAttributeType1062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAssociationType_in_entryRuleComponentAssociationType1098 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentAssociationType1108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_ruleComponentAssociationType1145 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleComponentAssociationType1165 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleComponentAssociationType1186 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleComponentAssociationType1198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOperationType_in_entryRuleOperationType1234 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOperationType1244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleOperationType1281 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleOperationType1302 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleOperationType1323 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleFormalDataParamsBlock_in_ruleOperationType1344 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleOperationType1356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleType_in_entryRuleRoleType1392 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleType1402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_ruleRoleType1439 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleRoleType1460 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_22_in_ruleRoleType1472 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleRoleType1492 = new BitSet(new long[]{0x0000000000804000L});
    public static final BitSet FOLLOW_23_in_ruleRoleType1505 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleRoleType1525 = new BitSet(new long[]{0x0000000000804000L});
    public static final BitSet FOLLOW_14_in_ruleRoleType1539 = new BitSet(new long[]{0x0000000003008000L});
    public static final BitSet FOLLOW_ruleRoleAttributeType_in_ruleRoleType1561 = new BitSet(new long[]{0x0000000003008000L});
    public static final BitSet FOLLOW_ruleMessageType_in_ruleRoleType1588 = new BitSet(new long[]{0x0000000003008000L});
    public static final BitSet FOLLOW_15_in_ruleRoleType1602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeType_in_entryRuleRoleAttributeType1638 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleAttributeType1648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleRoleAttributeType1685 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleRoleAttributeType1706 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleRoleAttributeType1727 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleRoleAttributeType1739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMessageType_in_entryRuleMessageType1775 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMessageType1785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleMessageType1822 = new BitSet(new long[]{0x0000000000000000L,0x0000E00000000000L});
    public static final BitSet FOLLOW_ruleMsgDirection_in_ruleMessageType1843 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleMessageType1864 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleFormalRoleParamsBlock_in_ruleMessageType1885 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleFormalDataParamsBlock_in_ruleMessageType1906 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleMessageType1918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEnsembleStructure_in_entryRuleEnsembleStructure1954 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEnsembleStructure1964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleEnsembleStructure2001 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleEnsembleStructure2022 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleEnsembleStructure2034 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_ruleRoleTypeWithMultiplicity_in_ruleEnsembleStructure2055 = new BitSet(new long[]{0x0000000008008000L});
    public static final BitSet FOLLOW_ruleRoleTypeWithMultiplicity_in_ruleEnsembleStructure2076 = new BitSet(new long[]{0x0000000008008000L});
    public static final BitSet FOLLOW_15_in_ruleEnsembleStructure2089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleTypeWithMultiplicity_in_entryRuleRoleTypeWithMultiplicity2125 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleTypeWithMultiplicity2135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleRoleTypeWithMultiplicity2172 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleRoleTypeWithMultiplicity2192 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleRoleTypeWithMultiplicity2204 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleRoleTypeWithMultiplicity2216 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleRoleTypeWithMultiplicity2228 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_ruleMultElem_in_ruleRoleTypeWithMultiplicity2249 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleRoleTypeWithMultiplicity2261 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_30_in_ruleRoleTypeWithMultiplicity2273 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleRoleTypeWithMultiplicity2285 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_ruleMultElem_in_ruleRoleTypeWithMultiplicity2306 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleRoleTypeWithMultiplicity2318 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_ruleRoleTypeWithMultiplicity2330 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleRoleTypeWithMultiplicity2342 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleRoleTypeWithMultiplicity2359 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleRoleTypeWithMultiplicity2376 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleRoleTypeWithMultiplicity2388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultElem_in_entryRuleMultElem2425 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultElem2436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleMultElem2474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleMultElem2495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleBehavior_in_entryRuleRoleBehavior2540 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleBehavior2550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_ruleRoleBehavior2597 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleRoleBehavior2617 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleRoleBehavior2629 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleRoleBehavior2650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_ruleRoleBehavior2679 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleRoleBehavior2699 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleRoleBehavior2711 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessInvocation_in_ruleRoleBehavior2732 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleRoleBehavior2744 = new BitSet(new long[]{0x0000000800008000L});
    public static final BitSet FOLLOW_ruleProcess_in_ruleRoleBehavior2765 = new BitSet(new long[]{0x0000000800008000L});
    public static final BitSet FOLLOW_15_in_ruleRoleBehavior2778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProcess_in_entryRuleProcess2815 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProcess2825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleProcess2862 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleProcess2883 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleProcess2895 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleProcess2916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_entryRuleProcessExpression2952 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProcessExpression2962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleProcessExpression3009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleActionPrefix_in_ruleProcessExpression3038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNondeterministicChoice_in_ruleProcessExpression3065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfThenElse_in_ruleProcessExpression3092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProcessInvocation_in_ruleProcessExpression3119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleActionPrefix_in_entryRuleActionPrefix3154 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleActionPrefix3164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAction_in_ruleActionPrefix3210 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_ruleActionPrefix3222 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleActionPrefix3243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNondeterministicChoice_in_entryRuleNondeterministicChoice3279 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNondeterministicChoice3289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleNondeterministicChoice3326 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleNondeterministicChoice3347 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleNondeterministicChoice3359 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleNondeterministicChoice3380 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleNondeterministicChoice3392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfThenElse_in_entryRuleIfThenElse3428 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfThenElse3438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_ruleIfThenElse3475 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleIfThenElse3487 = new BitSet(new long[]{0x04094040000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleGuard_in_ruleIfThenElse3508 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleIfThenElse3520 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleIfThenElse3532 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleIfThenElse3553 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleIfThenElse3565 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleIfThenElse3577 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleIfThenElse3589 = new BitSet(new long[]{0x0401825000000010L});
    public static final BitSet FOLLOW_ruleProcessExpression_in_ruleIfThenElse3610 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleIfThenElse3622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleProcessInvocation_in_entryRuleProcessInvocation3658 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleProcessInvocation3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleProcessInvocation3712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAction_in_entryRuleAction3747 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAction3757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractAssignment_in_ruleAction3804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractMessageCall_in_ruleAction3831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOperationCall_in_ruleAction3858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeSetter_in_ruleAction3885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeSetter_in_ruleAction3912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_ruleAction3939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractAssignment_in_entryRuleAbstractAssignment3974 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractAssignment3984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleInstanceVariable_in_ruleAbstractAssignment4040 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_ruleAbstractAssignment4052 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_ruleAbstractAssignment4064 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAbstractAssignment4076 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAbstractAssignment4096 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleAbstractAssignment4108 = new BitSet(new long[]{0x0081000000000000L});
    public static final BitSet FOLLOW_ruleComponentInstance_in_ruleAbstractAssignment4129 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleAbstractAssignment4141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleInstanceVariable_in_ruleAbstractAssignment4179 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_ruleAbstractAssignment4191 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleAbstractAssignment4203 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleAbstractAssignment4215 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAbstractAssignment4235 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleAbstractAssignment4247 = new BitSet(new long[]{0x0081000000000000L});
    public static final BitSet FOLLOW_ruleComponentInstance_in_ruleAbstractAssignment4268 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleAbstractAssignment4280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractMessageCall_in_entryRuleAbstractMessageCall4317 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractMessageCall4327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutgoingMessageCall_in_ruleAbstractMessageCall4374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIncomingMessageCall_in_ruleAbstractMessageCall4401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOutgoingMessageCall_in_entryRuleOutgoingMessageCall4436 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOutgoingMessageCall4446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractRoleInstanceReference_in_ruleOutgoingMessageCall4492 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleOutgoingMessageCall4504 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleOutgoingMessageCall4525 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleActualRoleParamsBlock_in_ruleOutgoingMessageCall4546 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleActualDataParamsBlock_in_ruleOutgoingMessageCall4567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIncomingMessageCall_in_entryRuleIncomingMessageCall4603 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIncomingMessageCall4613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_ruleIncomingMessageCall4650 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleIncomingMessageCall4671 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleFormalRoleParamsBlock_in_ruleIncomingMessageCall4692 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleFormalDataParamsBlock_in_ruleIncomingMessageCall4713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOperationCall_in_entryRuleOperationCall4749 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOperationCall4759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDataVariable_in_ruleOperationCall4806 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleOperationCall4818 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_ruleOperationCall4832 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleOperationCall4853 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_ruleActualDataParamsBlock_in_ruleOperationCall4874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeSetter_in_entryRuleComponentAttributeSetter4910 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentAttributeSetter4920 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeTypeReference_in_ruleComponentAttributeSetter4966 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleComponentAttributeSetter4978 = new BitSet(new long[]{0x04010000000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleComponentAttributeSetter4999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeSetter_in_entryRuleRoleAttributeSetter5035 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleAttributeSetter5045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeTypeReference_in_ruleRoleAttributeSetter5091 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleRoleAttributeSetter5103 = new BitSet(new long[]{0x04010000000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleRoleAttributeSetter5124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_entryRuleLabel5160 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabel5170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleLabel5215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGuard_in_entryRuleGuard5250 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGuard5260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrTerm_in_ruleGuard5306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrTerm_in_entryRuleOrTerm5340 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOrTerm5350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndTerm_in_ruleOrTerm5397 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_49_in_ruleOrTerm5418 = new BitSet(new long[]{0x04094040000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleAndTerm_in_ruleOrTerm5439 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_ruleAndTerm_in_entryRuleAndTerm5477 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAndTerm5487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEqualityTerm_in_ruleAndTerm5534 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_50_in_ruleAndTerm5555 = new BitSet(new long[]{0x04094040000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleEqualityTerm_in_ruleAndTerm5576 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_ruleEqualityTerm_in_entryRuleEqualityTerm5614 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEqualityTerm5624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNotTerm_in_ruleEqualityTerm5671 = new BitSet(new long[]{0x0030000000000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_ruleEqualityTerm5701 = new BitSet(new long[]{0x04094040000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleNotTerm_in_ruleEqualityTerm5722 = new BitSet(new long[]{0x0030000000000002L});
    public static final BitSet FOLLOW_ruleNotTerm_in_entryRuleNotTerm5760 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNotTerm5770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleNotTerm5822 = new BitSet(new long[]{0x04094040000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleAtom_in_ruleNotTerm5857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAtom_in_entryRuleAtom5893 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAtom5903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleAtom5950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePlaysQuery_in_ruleAtom5977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRelation_in_ruleAtom6004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGuardInParentheses_in_ruleAtom6031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePlaysQuery_in_entryRulePlaysQuery6066 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePlaysQuery6076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rulePlaysQuery6113 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_rulePlaysQuery6125 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_rulePlaysQuery6145 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_rulePlaysQuery6157 = new BitSet(new long[]{0x0081000000000000L});
    public static final BitSet FOLLOW_ruleComponentInstance_in_rulePlaysQuery6178 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_rulePlaysQuery6190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRelation_in_entryRuleRelation6226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRelation6236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleRelation6282 = new BitSet(new long[]{0x0040000108000000L});
    public static final BitSet FOLLOW_ruleOpCompare_in_ruleRelation6303 = new BitSet(new long[]{0x04010000000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleRelation6324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGuardInParentheses_in_entryRuleGuardInParentheses6360 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGuardInParentheses6370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleGuardInParentheses6407 = new BitSet(new long[]{0x04094040000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleGuard_in_ruleGuardInParentheses6428 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleGuardInParentheses6440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataValue_in_entryRuleAbstractDataValue6476 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractDataValue6486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanValue_in_ruleAbstractDataValue6533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumberValue_in_ruleAbstractDataValue6560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringValue_in_ruleAbstractDataValue6587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBooleanValue_in_entryRuleBooleanValue6622 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBooleanValue6632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_ruleBooleanValue6677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumberValue_in_entryRuleNumberValue6712 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumberValue6722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_ruleNumberValue6767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringValue_in_entryRuleStringValue6802 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStringValue6812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_ruleStringValue6857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_entryRuleOpEquality6893 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpEquality6904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_ruleOpEquality6942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_ruleOpEquality6961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpCompare_in_entryRuleOpCompare7002 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpCompare7013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_ruleOpCompare7051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleOpCompare7071 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleOpCompare7084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleOpCompare7104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleOpCompare7123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentInstance_in_entryRuleComponentInstance7163 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentInstance7173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAssociationTypeReference_in_ruleComponentInstance7220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOwnerReference_in_ruleComponentInstance7247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAssociationTypeReference_in_entryRuleComponentAssociationTypeReference7282 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentAssociationTypeReference7292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleComponentAssociationTypeReference7329 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleComponentAssociationTypeReference7349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOwnerReference_in_entryRuleOwnerReference7385 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOwnerReference7395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_ruleOwnerReference7441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractRoleInstance_in_entryRuleAbstractRoleInstance7477 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractRoleInstance7487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleInstanceVariable_in_ruleAbstractRoleInstance7534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFormalRoleParam_in_ruleAbstractRoleInstance7561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleInstanceVariable_in_entryRuleRoleInstanceVariable7596 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleInstanceVariable7606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleRoleInstanceVariable7651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFormalRoleParam_in_entryRuleFormalRoleParam7686 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFormalRoleParam7696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFormalRoleParam7741 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFormalRoleParam7762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFormalRoleParamsBlock_in_entryRuleFormalRoleParamsBlock7798 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFormalRoleParamsBlock7808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleFormalRoleParamsBlock7854 = new BitSet(new long[]{0x0000010000000010L});
    public static final BitSet FOLLOW_ruleFormalRoleParam_in_ruleFormalRoleParamsBlock7876 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleFormalRoleParamsBlock7889 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleFormalRoleParam_in_ruleFormalRoleParamsBlock7910 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleFormalRoleParamsBlock7926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleInstanceReference_in_entryRuleRoleInstanceReference7962 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleInstanceReference7972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractRoleInstanceReference_in_ruleRoleInstanceReference8019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_ruleRoleInstanceReference8046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractRoleInstanceReference_in_entryRuleAbstractRoleInstanceReference8083 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractRoleInstanceReference8093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAbstractRoleInstanceReference8137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleActualRoleParamsBlock_in_entryRuleActualRoleParamsBlock8172 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleActualRoleParamsBlock8182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleActualRoleParamsBlock8228 = new BitSet(new long[]{0x0100010000000010L});
    public static final BitSet FOLLOW_ruleRoleInstanceReference_in_ruleActualRoleParamsBlock8250 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleActualRoleParamsBlock8263 = new BitSet(new long[]{0x0100000000000010L});
    public static final BitSet FOLLOW_ruleRoleInstanceReference_in_ruleActualRoleParamsBlock8284 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleActualRoleParamsBlock8300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataVariable_in_entryRuleAbstractDataVariable8336 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractDataVariable8346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFormalDataParam_in_ruleAbstractDataVariable8393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDataVariable_in_ruleAbstractDataVariable8420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDataVariable_in_entryRuleDataVariable8455 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDataVariable8465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleDataVariable8510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFormalDataParam_in_entryRuleFormalDataParam8545 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFormalDataParam8555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleFormalDataParam8601 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFormalDataParam8622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFormalDataParamsBlock_in_entryRuleFormalDataParamsBlock8658 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFormalDataParamsBlock8668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleFormalDataParamsBlock8714 = new BitSet(new long[]{0x0000014000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleFormalDataParam_in_ruleFormalDataParamsBlock8736 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleFormalDataParamsBlock8749 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleFormalDataParam_in_ruleFormalDataParamsBlock8770 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleFormalDataParamsBlock8786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDataExpression_in_entryRuleDataExpression8822 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDataExpression8832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSimpleDataExpression_in_ruleDataExpression8879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddition_in_ruleDataExpression8906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSubtraction_in_ruleDataExpression8933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddition_in_entryRuleAddition8968 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAddition8978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSimpleDataExpression_in_ruleAddition9025 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_ruleAddition9052 = new BitSet(new long[]{0x04010000000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleSimpleDataExpression_in_ruleAddition9086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSubtraction_in_entryRuleSubtraction9123 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSubtraction9133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSimpleDataExpression_in_ruleSubtraction9180 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_ruleSubtraction9207 = new BitSet(new long[]{0x04010000000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleSimpleDataExpression_in_ruleSubtraction9241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSimpleDataExpression_in_entryRuleSimpleDataExpression9278 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSimpleDataExpression9288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataReference_in_ruleSimpleDataExpression9335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataValue_in_ruleSimpleDataExpression9362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataReference_in_entryRuleAbstractDataReference9397 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractDataReference9407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataVariableReference_in_ruleAbstractDataReference9454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeTypeReference_in_ruleAbstractDataReference9481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeTypeReference_in_ruleAbstractDataReference9508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractDataVariableReference_in_entryRuleAbstractDataVariableReference9543 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractDataVariableReference9553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleAbstractDataVariableReference9597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeTypeReference_in_entryRuleRoleAttributeTypeReference9632 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRoleAttributeTypeReference9642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleRoleAttributeTypeReference9679 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleRoleAttributeTypeReference9699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentAttributeTypeReference_in_entryRuleComponentAttributeTypeReference9735 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentAttributeTypeReference9745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleComponentAttributeTypeReference9782 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleComponentAttributeTypeReference9802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleActualDataParamsBlock_in_entryRuleActualDataParamsBlock9838 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleActualDataParamsBlock9848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleActualDataParamsBlock9894 = new BitSet(new long[]{0x04010100000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleActualDataParamsBlock9916 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleActualDataParamsBlock9929 = new BitSet(new long[]{0x04010000000001F0L,0x0000000C00000000L});
    public static final BitSet FOLLOW_ruleDataExpression_in_ruleActualDataParamsBlock9950 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleActualDataParamsBlock9966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractHelenaEntity_in_entryRuleAbstractHelenaEntity10004 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractHelenaEntity10014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentType_in_ruleAbstractHelenaEntity10061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleType_in_ruleAbstractHelenaEntity10088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEnsembleStructure_in_ruleAbstractHelenaEntity10115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractFieldType_in_entryRuleAbstractFieldType10150 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractFieldType10160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAbstractComponentFieldType_in_ruleAbstractFieldType10207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRoleAttributeType_in_ruleAbstractFieldType10234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_entryRuleXExpression10273 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpression10283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXExpression10329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAssignment_in_entryRuleXAssignment10363 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAssignment10373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXAssignment10431 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXAssignment10447 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXAssignment10467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOrExpression_in_ruleXAssignment10497 = new BitSet(new long[]{0xF800000108000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_ruleXAssignment10550 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXAssignment10573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign10613 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpSingleAssign10624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleOpSingleAssign10661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign10701 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpMultiAssign10712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_ruleOpMultiAssign10750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_ruleOpMultiAssign10769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleOpMultiAssign10788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_ruleOpMultiAssign10807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_ruleOpMultiAssign10826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleOpMultiAssign10846 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleOpMultiAssign10859 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_ruleOpMultiAssign10872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleOpMultiAssign10893 = new BitSet(new long[]{0x0040000100000000L});
    public static final BitSet FOLLOW_32_in_ruleOpMultiAssign10907 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_ruleOpMultiAssign10922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression10963 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXOrExpression10973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression11020 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_ruleXOrExpression11073 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression11096 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_entryRuleOpOr11135 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpOr11146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleOpOr11183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression11222 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAndExpression11232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression11279 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_ruleXAndExpression11332 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression11355 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_entryRuleOpAnd11394 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpAnd11405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_ruleOpAnd11442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression11481 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXEqualityExpression11491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression11538 = new BitSet(new long[]{0x0030000000000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_ruleXEqualityExpression11591 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression11614 = new BitSet(new long[]{0x0030000000000002L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression11652 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXRelationalExpression11662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression11709 = new BitSet(new long[]{0x0040000108000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_ruleXRelationalExpression11745 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression11768 = new BitSet(new long[]{0x0040000108000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleOpCompare_in_ruleXRelationalExpression11829 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression11852 = new BitSet(new long[]{0x0040000108000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_entryRuleXOtherOperatorExpression11891 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXOtherOperatorExpression11901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression11948 = new BitSet(new long[]{0x0000000108000002L,0x000000000000007EL});
    public static final BitSet FOLLOW_ruleOpOther_in_ruleXOtherOperatorExpression12001 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression12024 = new BitSet(new long[]{0x0000000108000002L,0x000000000000007EL});
    public static final BitSet FOLLOW_ruleOpOther_in_entryRuleOpOther12063 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpOther12074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_ruleOpOther12112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleOpOther12131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleOpOther12151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_ruleOpOther12164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_ruleOpOther12184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_ruleOpOther12203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleOpOther12223 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleOpOther12254 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_ruleOpOther12267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleOpOther12288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleOpOther12310 = new BitSet(new long[]{0x0000000008000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_27_in_ruleOpOther12341 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleOpOther12354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleOpOther12375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_ruleOpOther12394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_ruleOpOther12415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_ruleOpOther12434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression12474 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAdditiveExpression12484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression12531 = new BitSet(new long[]{0x0200008000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression12584 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression12607 = new BitSet(new long[]{0x0200008000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_entryRuleOpAdd12646 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpAdd12657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleOpAdd12695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleOpAdd12714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression12754 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXMultiplicativeExpression12764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression12811 = new BitSet(new long[]{0x0000000200000002L,0x0000000000000380L});
    public static final BitSet FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression12864 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression12887 = new BitSet(new long[]{0x0000000200000002L,0x0000000000000380L});
    public static final BitSet FOLLOW_ruleOpMulti_in_entryRuleOpMulti12926 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpMulti12937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleOpMulti12975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleOpMulti12994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_ruleOpMulti13013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_ruleOpMulti13032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation13072 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXUnaryOperation13082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpUnary_in_ruleXUnaryOperation13140 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation13161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation13190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpUnary_in_entryRuleOpUnary13226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpUnary13237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleOpUnary13275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_ruleOpUnary13294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleOpUnary13313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression13353 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCastedExpression13363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXPostfixOperation_in_ruleXCastedExpression13410 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_ruleXCastedExpression13445 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression13468 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_ruleXPostfixOperation_in_entryRuleXPostfixOperation13506 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXPostfixOperation13516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_ruleXPostfixOperation13563 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001800L});
    public static final BitSet FOLLOW_ruleOpPostfix_in_ruleXPostfixOperation13615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpPostfix_in_entryRuleOpPostfix13655 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpPostfix13666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleOpPostfix13704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleOpPostfix13723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall13763 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXMemberFeatureCall13773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall13820 = new BitSet(new long[]{0x0000002000000002L,0x0000000000006000L});
    public static final BitSet FOLLOW_37_in_ruleXMemberFeatureCall13892 = new BitSet(new long[]{0x0000000000000010L,0x00000000F0000000L});
    public static final BitSet FOLLOW_77_in_ruleXMemberFeatureCall13916 = new BitSet(new long[]{0x0000000000000010L,0x00000000F0000000L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall13953 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall13969 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall13991 = new BitSet(new long[]{0x0000002000000002L,0x0000000000006000L});
    public static final BitSet FOLLOW_37_in_ruleXMemberFeatureCall14077 = new BitSet(new long[]{0x0000000008000010L,0x00000001F0000000L});
    public static final BitSet FOLLOW_78_in_ruleXMemberFeatureCall14101 = new BitSet(new long[]{0x0000000008000010L,0x00000001F0000000L});
    public static final BitSet FOLLOW_77_in_ruleXMemberFeatureCall14138 = new BitSet(new long[]{0x0000000008000010L,0x00000001F0000000L});
    public static final BitSet FOLLOW_27_in_ruleXMemberFeatureCall14167 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall14188 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_23_in_ruleXMemberFeatureCall14201 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall14222 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_32_in_ruleXMemberFeatureCall14236 = new BitSet(new long[]{0x0000000008000010L,0x00000001F0000000L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_ruleXMemberFeatureCall14261 = new BitSet(new long[]{0x0000006000000002L,0x0000000000016000L});
    public static final BitSet FOLLOW_38_in_ruleXMemberFeatureCall14295 = new BitSet(new long[]{0x060143C0080041F0L,0x000005FFF38D8010L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXMemberFeatureCall14380 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall14408 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleXMemberFeatureCall14421 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall14442 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleXMemberFeatureCall14459 = new BitSet(new long[]{0x0000002000000002L,0x0000000000016000L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXMemberFeatureCall14494 = new BitSet(new long[]{0x0000002000000002L,0x0000000000006000L});
    public static final BitSet FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression14534 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXPrimaryExpression14544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXConstructorCall_in_ruleXPrimaryExpression14591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleXPrimaryExpression14618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSwitchExpression_in_ruleXPrimaryExpression14645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSynchronizedExpression_in_ruleXPrimaryExpression14689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFeatureCall_in_ruleXPrimaryExpression14717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXLiteral_in_ruleXPrimaryExpression14744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXIfExpression_in_ruleXPrimaryExpression14771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXForLoopExpression_in_ruleXPrimaryExpression14828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBasicForLoopExpression_in_ruleXPrimaryExpression14856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXWhileExpression_in_ruleXPrimaryExpression14883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXDoWhileExpression_in_ruleXPrimaryExpression14910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXThrowExpression_in_ruleXPrimaryExpression14937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXReturnExpression_in_ruleXPrimaryExpression14964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTryCatchFinallyExpression_in_ruleXPrimaryExpression14991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXParenthesizedExpression_in_ruleXPrimaryExpression15018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXLiteral_in_entryRuleXLiteral15053 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXLiteral15063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCollectionLiteral_in_ruleXLiteral15110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXLiteral15150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral15178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_ruleXLiteral15205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNullLiteral_in_ruleXLiteral15232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_ruleXLiteral15259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTypeLiteral_in_ruleXLiteral15286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCollectionLiteral_in_entryRuleXCollectionLiteral15321 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCollectionLiteral15331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSetLiteral_in_ruleXCollectionLiteral15378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXListLiteral_in_ruleXCollectionLiteral15405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSetLiteral_in_entryRuleXSetLiteral15440 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSetLiteral15450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_ruleXSetLiteral15496 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleXSetLiteral15508 = new BitSet(new long[]{0x060142C00800C1F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSetLiteral15530 = new BitSet(new long[]{0x0000000000808000L});
    public static final BitSet FOLLOW_23_in_ruleXSetLiteral15543 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSetLiteral15564 = new BitSet(new long[]{0x0000000000808000L});
    public static final BitSet FOLLOW_15_in_ruleXSetLiteral15580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXListLiteral_in_entryRuleXListLiteral15616 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXListLiteral15626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_ruleXListLiteral15672 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_ruleXListLiteral15684 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF38B8000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXListLiteral15706 = new BitSet(new long[]{0x0000000000800000L,0x0000000000020000L});
    public static final BitSet FOLLOW_23_in_ruleXListLiteral15719 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXListLiteral15740 = new BitSet(new long[]{0x0000000000800000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_ruleXListLiteral15756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_entryRuleXClosure15792 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXClosure15802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleXClosure15862 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFFF8F8010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure15935 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_23_in_ruleXClosure15948 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure15969 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_ruleXClosure15991 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFFF8B8000L});
    public static final BitSet FOLLOW_ruleXExpressionInClosure_in_ruleXClosure16028 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_ruleXClosure16040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionInClosure_in_entryRuleXExpressionInClosure16076 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionInClosure16086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXExpressionInClosure16142 = new BitSet(new long[]{0x060142C0080441F2L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_18_in_ruleXExpressionInClosure16155 = new BitSet(new long[]{0x060142C0080041F2L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_entryRuleXShortClosure16195 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXShortClosure16205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure16313 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_23_in_ruleXShortClosure16326 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure16347 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_ruleXShortClosure16369 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXShortClosure16405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXParenthesizedExpression_in_entryRuleXParenthesizedExpression16441 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXParenthesizedExpression16451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleXParenthesizedExpression16488 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXParenthesizedExpression16510 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXParenthesizedExpression16521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXIfExpression_in_entryRuleXIfExpression16557 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXIfExpression16567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_ruleXIfExpression16613 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXIfExpression16625 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression16646 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXIfExpression16658 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression16679 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_42_in_ruleXIfExpression16700 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression16722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSwitchExpression_in_entryRuleXSwitchExpression16760 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSwitchExpression16770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_ruleXSwitchExpression16816 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898010L});
    public static final BitSet FOLLOW_38_in_ruleXSwitchExpression16854 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression16875 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_ruleXSwitchExpression16887 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression16910 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXSwitchExpression16922 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXSwitchExpression16971 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_ruleXSwitchExpression16983 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression17007 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleXSwitchExpression17021 = new BitSet(new long[]{0x0000004000808010L,0x0000000000700010L});
    public static final BitSet FOLLOW_ruleXCasePart_in_ruleXSwitchExpression17042 = new BitSet(new long[]{0x0000004000808010L,0x0000000000700010L});
    public static final BitSet FOLLOW_85_in_ruleXSwitchExpression17056 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_ruleXSwitchExpression17068 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression17089 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleXSwitchExpression17103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCasePart_in_entryRuleXCasePart17139 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCasePart17149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCasePart17204 = new BitSet(new long[]{0x0000000000800000L,0x0000000000500000L});
    public static final BitSet FOLLOW_86_in_ruleXCasePart17218 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart17239 = new BitSet(new long[]{0x0000000000800000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_ruleXCasePart17255 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart17276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_ruleXCasePart17301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXForLoopExpression_in_entryRuleXForLoopExpression17351 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXForLoopExpression17361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_ruleXForLoopExpression17438 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXForLoopExpression17450 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXForLoopExpression17471 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_ruleXForLoopExpression17483 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXForLoopExpression17506 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXForLoopExpression17518 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXForLoopExpression17539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBasicForLoopExpression_in_entryRuleXBasicForLoopExpression17575 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBasicForLoopExpression17585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_ruleXBasicForLoopExpression17631 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXBasicForLoopExpression17643 = new BitSet(new long[]{0x060142C0080441F0L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression17665 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_23_in_ruleXBasicForLoopExpression17678 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBasicForLoopExpression17699 = new BitSet(new long[]{0x0000000000840000L});
    public static final BitSet FOLLOW_18_in_ruleXBasicForLoopExpression17715 = new BitSet(new long[]{0x060142C0080441F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17736 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_ruleXBasicForLoopExpression17749 = new BitSet(new long[]{0x060143C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17771 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleXBasicForLoopExpression17784 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17805 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleXBasicForLoopExpression17821 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXBasicForLoopExpression17842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXWhileExpression_in_entryRuleXWhileExpression17878 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXWhileExpression17888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_ruleXWhileExpression17934 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXWhileExpression17946 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXWhileExpression17967 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXWhileExpression17979 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXWhileExpression18000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXDoWhileExpression_in_entryRuleXDoWhileExpression18036 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXDoWhileExpression18046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_ruleXDoWhileExpression18092 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXDoWhileExpression18113 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_ruleXDoWhileExpression18125 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXDoWhileExpression18137 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXDoWhileExpression18158 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXDoWhileExpression18170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression18206 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBlockExpression18216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_ruleXBlockExpression18262 = new BitSet(new long[]{0x060142C00800C1F0L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_ruleXBlockExpression18284 = new BitSet(new long[]{0x060142C00804C1F0L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_18_in_ruleXBlockExpression18297 = new BitSet(new long[]{0x060142C00800C1F0L,0x000005FFFF898000L});
    public static final BitSet FOLLOW_15_in_ruleXBlockExpression18313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionOrVarDeclaration_in_entryRuleXExpressionOrVarDeclaration18349 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionOrVarDeclaration18359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXVariableDeclaration_in_ruleXExpressionOrVarDeclaration18406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXExpressionOrVarDeclaration18433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration18468 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXVariableDeclaration18478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_ruleXVariableDeclaration18531 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_91_in_ruleXVariableDeclaration18562 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration18610 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration18631 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration18660 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_29_in_ruleXVariableDeclaration18674 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXVariableDeclaration18695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter18733 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmFormalParameter18743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter18789 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleJvmFormalParameter18811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter18847 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFullJvmFormalParameter18857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter18903 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter18924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFeatureCall_in_entryRuleXFeatureCall18960 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXFeatureCall18970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleXFeatureCall19017 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall19038 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_23_in_ruleXFeatureCall19051 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall19072 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_32_in_ruleXFeatureCall19086 = new BitSet(new long[]{0x0000000008000010L,0x00000001F0000000L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_ruleXFeatureCall19111 = new BitSet(new long[]{0x0000004000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_38_in_ruleXFeatureCall19145 = new BitSet(new long[]{0x060143C0080041F0L,0x000005FFF38D8010L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXFeatureCall19230 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXFeatureCall19258 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleXFeatureCall19271 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXFeatureCall19292 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleXFeatureCall19309 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXFeatureCall19344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID19382 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCallID19393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFeatureCallID19440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_ruleFeatureCallID19464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_ruleFeatureCallID19483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_ruleFeatureCallID19502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_ruleFeatureCallID19521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper19562 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIdOrSuper19573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper19620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_ruleIdOrSuper19644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXConstructorCall_in_entryRuleXConstructorCall19684 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXConstructorCall19694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_ruleXConstructorCall19740 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXConstructorCall19763 = new BitSet(new long[]{0x0000004008000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_27_in_ruleXConstructorCall19784 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall19806 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_23_in_ruleXConstructorCall19819 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall19840 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_32_in_ruleXConstructorCall19854 = new BitSet(new long[]{0x0000004000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_38_in_ruleXConstructorCall19890 = new BitSet(new long[]{0x060143C0080041F0L,0x000005FFF38D8010L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXConstructorCall19975 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXConstructorCall20003 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleXConstructorCall20016 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXConstructorCall20037 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleXConstructorCall20054 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXConstructorCall20089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral20126 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBooleanLiteral20136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_ruleXBooleanLiteral20183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_ruleXBooleanLiteral20207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral20257 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXNullLiteral20267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_ruleXNullLiteral20313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral20349 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXNumberLiteral20359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleXNumberLiteral20414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral20450 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXStringLiteral20460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleXStringLiteral20511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral20552 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXTypeLiteral20562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_ruleXTypeLiteral20608 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXTypeLiteral20620 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral20643 = new BitSet(new long[]{0x0000010000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral20664 = new BitSet(new long[]{0x0000010000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_40_in_ruleXTypeLiteral20677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXThrowExpression_in_entryRuleXThrowExpression20713 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXThrowExpression20723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_ruleXThrowExpression20769 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXThrowExpression20790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXReturnExpression_in_entryRuleXReturnExpression20826 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXReturnExpression20836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_ruleXReturnExpression20882 = new BitSet(new long[]{0x060142C0080041F2L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXReturnExpression21117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTryCatchFinallyExpression_in_entryRuleXTryCatchFinallyExpression21154 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXTryCatchFinallyExpression21164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_ruleXTryCatchFinallyExpression21210 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression21231 = new BitSet(new long[]{0x0000000000000000L,0x00000A0000000000L});
    public static final BitSet FOLLOW_ruleXCatchClause_in_ruleXTryCatchFinallyExpression21261 = new BitSet(new long[]{0x0000000000000002L,0x00000A0000000000L});
    public static final BitSet FOLLOW_105_in_ruleXTryCatchFinallyExpression21283 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression21305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_ruleXTryCatchFinallyExpression21327 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression21348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSynchronizedExpression_in_entryRuleXSynchronizedExpression21386 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSynchronizedExpression21396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_ruleXSynchronizedExpression21460 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXSynchronizedExpression21472 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression21495 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXSynchronizedExpression21507 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSynchronizedExpression21528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause21564 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCatchClause21574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_ruleXCatchClause21619 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleXCatchClause21632 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause21653 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_ruleXCatchClause21665 = new BitSet(new long[]{0x060142C0080041F0L,0x000005FFF3898000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCatchClause21686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName21723 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName21734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName21781 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_ruleQualifiedName21809 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName21832 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_entryRuleNumber21886 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumber21897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleNumber21941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber21969 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber21995 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_ruleNumber22015 = new BitSet(new long[]{0x0000000000000120L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber22031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber22057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference22112 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmTypeReference22122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference22170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference22206 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference22237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets22273 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleArrayBrackets22284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleArrayBrackets22322 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_ruleArrayBrackets22335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef22375 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXFunctionTypeRef22385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleXFunctionTypeRef22423 = new BitSet(new long[]{0x0000014000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef22445 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_23_in_ruleXFunctionTypeRef22458 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef22479 = new BitSet(new long[]{0x0000010000800000L});
    public static final BitSet FOLLOW_40_in_ruleXFunctionTypeRef22495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_ruleXFunctionTypeRef22509 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef22530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference22566 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference22576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference22624 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_27_in_ruleJvmParameterizedTypeReference22645 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22667 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_23_in_ruleJvmParameterizedTypeReference22680 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22701 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_32_in_ruleJvmParameterizedTypeReference22715 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_ruleJvmParameterizedTypeReference22751 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleJvmParameterizedTypeReference22776 = new BitSet(new long[]{0x0000002008000002L});
    public static final BitSet FOLLOW_27_in_ruleJvmParameterizedTypeReference22797 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22819 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_23_in_ruleJvmParameterizedTypeReference22832 = new BitSet(new long[]{0x0000804000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference22853 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_32_in_ruleJvmParameterizedTypeReference22867 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference22909 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference22919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference22966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference22993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference23028 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference23038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_ruleJvmWildcardTypeReference23084 = new BitSet(new long[]{0x0000000000000002L,0x0000000110000000L});
    public static final BitSet FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference23107 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_ruleJvmWildcardTypeReference23128 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference23158 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_ruleJvmLowerBoundAnded_in_ruleJvmWildcardTypeReference23179 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound23219 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBound23229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_ruleJvmUpperBound23266 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound23287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded23323 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded23333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_ruleJvmUpperBoundAnded23370 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded23391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound23427 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmLowerBound23437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_ruleJvmLowerBound23474 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound23495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmLowerBoundAnded_in_entryRuleJvmLowerBoundAnded23531 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmLowerBoundAnded23541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_ruleJvmLowerBoundAnded23578 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBoundAnded23599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard23638 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard23649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard23696 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_ruleQualifiedNameWithWildcard23714 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_ruleQualifiedNameWithWildcard23727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_entryRuleValidID23768 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValidID23779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleValidID23818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXImportDeclaration_in_entryRuleXImportDeclaration23864 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXImportDeclaration23874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_ruleXImportDeclaration23911 = new BitSet(new long[]{0x0000000000000010L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_ruleXImportDeclaration23931 = new BitSet(new long[]{0x0000000000000010L,0x0000000080000000L});
    public static final BitSet FOLLOW_95_in_ruleXImportDeclaration23962 = new BitSet(new long[]{0x0000000000000010L,0x0000000080000000L});
    public static final BitSet FOLLOW_ruleQualifiedNameInStaticImport_in_ruleXImportDeclaration23999 = new BitSet(new long[]{0x0000000200000010L});
    public static final BitSet FOLLOW_33_in_ruleXImportDeclaration24018 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXImportDeclaration24058 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration24089 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_ruleXImportDeclaration24116 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_18_in_ruleXImportDeclaration24130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedNameInStaticImport_in_entryRuleQualifiedNameInStaticImport24169 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameInStaticImport24180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedNameInStaticImport24227 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_ruleQualifiedNameInStaticImport24245 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_109_in_ruleMsgDirection24300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_ruleMsgDirection24317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_ruleMsgDirection24334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_synpred1_InternalHelenaText10518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_synpred2_InternalHelenaText11041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_synpred3_InternalHelenaText11300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_synpred4_InternalHelenaText11559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_synpred5_InternalHelenaText11726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpCompare_in_synpred6_InternalHelenaText11797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpOther_in_synpred7_InternalHelenaText11969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_synpred8_InternalHelenaText12238 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_synpred8_InternalHelenaText12243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_synpred9_InternalHelenaText12325 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_synpred9_InternalHelenaText12330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_synpred10_InternalHelenaText12552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMulti_in_synpred11_InternalHelenaText12832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_synpred12_InternalHelenaText13426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpPostfix_in_synpred13_InternalHelenaText13583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_synpred14_InternalHelenaText13838 = new BitSet(new long[]{0x0000000000000010L,0x00000000F0000000L});
    public static final BitSet FOLLOW_77_in_synpred14_InternalHelenaText13852 = new BitSet(new long[]{0x0000000000000010L,0x00000000F0000000L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_synpred14_InternalHelenaText13868 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_synpred14_InternalHelenaText13874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_synpred15_InternalHelenaText14016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_synpred15_InternalHelenaText14030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_synpred15_InternalHelenaText14050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred16_InternalHelenaText14277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalHelenaText14329 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_23_in_synpred17_InternalHelenaText14336 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred17_InternalHelenaText14343 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_synpred17_InternalHelenaText14357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_synpred18_InternalHelenaText14477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_synpred19_InternalHelenaText14666 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_synpred19_InternalHelenaText14670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_synpred20_InternalHelenaText14792 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_synpred20_InternalHelenaText14796 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalHelenaText14803 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_synpred20_InternalHelenaText14809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_synpred21_InternalHelenaText15131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalHelenaText15881 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_23_in_synpred23_InternalHelenaText15888 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred23_InternalHelenaText15895 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_synpred23_InternalHelenaText15909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_synpred25_InternalHelenaText16692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred26_InternalHelenaText16831 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred26_InternalHelenaText16838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_synpred26_InternalHelenaText16844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalHelenaText16946 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_synpred27_InternalHelenaText16952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_synpred29_InternalHelenaText18580 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_synpred29_InternalHelenaText18589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred30_InternalHelenaText19127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalHelenaText19179 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_23_in_synpred31_InternalHelenaText19186 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalHelenaText19193 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_synpred31_InternalHelenaText19207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_synpred32_InternalHelenaText19327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_synpred33_InternalHelenaText19776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred34_InternalHelenaText19872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalHelenaText19924 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_23_in_synpred35_InternalHelenaText19931 = new BitSet(new long[]{0x0000004000000010L,0x0000000000000010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred35_InternalHelenaText19938 = new BitSet(new long[]{0x0000000000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_synpred35_InternalHelenaText19952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_synpred36_InternalHelenaText20072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred37_InternalHelenaText20892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_synpred38_InternalHelenaText21245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_synpred39_InternalHelenaText21275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_synpred42_InternalHelenaText21800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_synpred43_InternalHelenaText22185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_synpred44_InternalHelenaText22637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_synpred45_InternalHelenaText22732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_synpred46_InternalHelenaText22789 = new BitSet(new long[]{0x0000000000000002L});

}
